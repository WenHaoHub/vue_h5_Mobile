{"version":3,"sources":["webpack:///./node_modules/less/dist/less.js"],"names":["module","exports","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","call","apply","__spreadArrays","il","r","k","a","j","jl","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","self","defineProperty","get","fileInfo","getIndex","setParent","nodes","set","node","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","push","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","fround","precision","numPrecision","Number","toFixed","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","info","compare","type","numericCompare","Color","_super","rgb","originalForm","_this","match","map","c","parseInt","alpha","split","luma","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","clamp","round","concat","toHSL","h","l","toRGB","splitcolor","operate","other","toHex","max","min","toHSV","v","toARGB","x","toString","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","getLocation","inputStream","line","column","copyArray","arr","copy","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","merge","anonymousFunc","LessError","fileContentMap","currentFilename","filename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","F","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","dumpLineNumbers","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","test","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","inCalc","mathOn","enterCalc","calcStack","exitCalc","inParenthesis","parensStack","outOfParenthesis","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry","makeRegistry","base","_data","addMultiple","functions","keys","getLocalFunctions","inherit","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","strictImports","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","reduce","hash","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","isRuleset","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","newPaths","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","el","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","bind","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","_i","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","MATH$2","Expression","noSpacing","returnValue","parens","parensInOp","doubleParen","throwAwayComments","functionCaller","isValid","evalArgs","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JavaScript","string","expression","evaluateJavaScript","JsEvalNode","evalContext","javascriptEnabled","jsify","toJS","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","m","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","logger","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","requiredFunctions","propName","environmentFunc","getFileManager","currentDirectory","isSync","getFileManagers","fileManager","addFileManager","clearFileManagers","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","indexNodeTypes","ticker","child","typeIndex","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","nodeRules","hasFakeRuleset","getBodyRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","exec","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body","me","tryConditionFollowedByParenthesis","delim","simpleProperty","If","trueValue","falseValue","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","rgba","size","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","getItemsFromNode","list","_SELF","values","range","step","from","to","stepValue","each","rs","iterator","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","pm","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","Functions","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","logger$1","lessRoot","environment$1","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","sourceMapOutput","SourceMapBuilder","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","sourceMapBuilder","ParseTree","toCSSOptions","rootFilename","files","parseTree","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","render","self_1","Promise","resolve","reject","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","Environment","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","ErrorReporting","rootHref","errorReporting","errors","errorline","classname","logLevel","errorConsole","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","options$1","depends","lint","insecure","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","resolveOrReject","pageLoadFinished","factory"],"mappings":"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","file":"assets/js/npm.less.eb4a039c.js","sourcesContent":["/**\n * Less - Leaner CSS v3.12.2\n * http://lesscss.org\n * \n * Copyright (c) 2009-2020, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n  // Export a new default each time\r\n  var defaultOptions = (function () { return ({\r\n      /* Inline Javascript - @plugin still allowed */\r\n      javascriptEnabled: false,\r\n      /* Outputs a makefile import dependency list to stdout. */\r\n      depends: false,\r\n      /* (DEPRECATED) Compress using less built-in compression.\r\n    * This does an okay job but does not utilise all the tricks of\r\n    * dedicated css compression. */\r\n      compress: false,\r\n      /* Runs the less parser and just reports errors without any output. */\r\n      lint: false,\r\n      /* Sets available include paths.\r\n    * If the file in an @import rule does not exist at that exact location,\r\n    * less will look for it at the location(s) passed to this option.\r\n    * You might use this for instance to specify a path to a library which\r\n    * you want to be referenced simply and relatively in the less files. */\r\n      paths: [],\r\n      /* color output in the terminal */\r\n      color: true,\r\n      /* The strictImports controls whether the compiler will allow an @import inside of either\r\n    * @media blocks or (a later addition) other selector blocks.\r\n    * See: https://github.com/less/less.js/issues/656 */\r\n      strictImports: false,\r\n      /* Allow Imports from Insecure HTTPS Hosts */\r\n      insecure: false,\r\n      /* Allows you to add a path to every generated import and url in your css.\r\n    * This does not affect less import statements that are processed, just ones\r\n    * that are left in the output css. */\r\n      rootpath: '',\r\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n    * that references an image, exactly the same URL will be output in the css.\r\n    * This option allows you to re-write URL's in imported files so that the\r\n    * URL is always relative to the base imported file */\r\n      rewriteUrls: false,\r\n      /* How to process math\r\n    *   0 always           - eagerly try to solve all operations\r\n    *   1 parens-division  - require parens for division \"/\"\r\n    *   2 parens | strict  - require parens for all operations\r\n    *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n    */\r\n      math: 0,\r\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n      strictUnits: false,\r\n      /* Effectively the declaration is put at the top of your base Less file,\r\n    * meaning it can be used but it also can be overridden if this variable\r\n    * is defined in the file. */\r\n      globalVars: null,\r\n      /* As opposed to the global variable option, this puts the declaration at the\r\n    * end of your base file, meaning it will override anything defined in your Less file. */\r\n      modifyVars: null,\r\n      /* This option allows you to specify a argument to go on to every URL.  */\r\n      urlArgs: ''\r\n  }); });\n\n  function extractId(href) {\r\n      return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n          .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n          .replace(/^\\//, '') // Remove root /\r\n          .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n          .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n          .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n  }\r\n  function addDataAttr(options, tag) {\r\n      for (var opt in tag.dataset) {\r\n          if (tag.dataset.hasOwnProperty(opt)) {\r\n              if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                  options[opt] = tag.dataset[opt];\r\n              }\r\n              else {\r\n                  try {\r\n                      options[opt] = JSON.parse(tag.dataset[opt]);\r\n                  }\r\n                  catch (_) { }\r\n              }\r\n          }\r\n      }\r\n  }\n\n  var browser = {\r\n      createCSS: function (document, styles, sheet) {\r\n          // Strip the query-string\r\n          var href = sheet.href || '';\r\n          // If there is no title set, use the filename, minus the extension\r\n          var id = \"less:\" + (sheet.title || extractId(href));\r\n          // If this has already been inserted into the DOM, we may need to replace it\r\n          var oldStyleNode = document.getElementById(id);\r\n          var keepOldStyleNode = false;\r\n          // Create a new stylesheet node for insertion or (if necessary) replacement\r\n          var styleNode = document.createElement('style');\r\n          styleNode.setAttribute('type', 'text/css');\r\n          if (sheet.media) {\r\n              styleNode.setAttribute('media', sheet.media);\r\n          }\r\n          styleNode.id = id;\r\n          if (!styleNode.styleSheet) {\r\n              styleNode.appendChild(document.createTextNode(styles));\r\n              // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n              keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                  oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n          }\r\n          var head = document.getElementsByTagName('head')[0];\r\n          // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n          // to replace oldStyleNode with an updated stylesheet\r\n          if (oldStyleNode === null || keepOldStyleNode === false) {\r\n              var nextEl = sheet && sheet.nextSibling || null;\r\n              if (nextEl) {\r\n                  nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n              }\r\n              else {\r\n                  head.appendChild(styleNode);\r\n              }\r\n          }\r\n          if (oldStyleNode && keepOldStyleNode === false) {\r\n              oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n          }\r\n          // For IE.\r\n          // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n          // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n          if (styleNode.styleSheet) {\r\n              try {\r\n                  styleNode.styleSheet.cssText = styles;\r\n              }\r\n              catch (e) {\r\n                  throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n              }\r\n          }\r\n      },\r\n      currentScript: function (window) {\r\n          var document = window.document;\r\n          return document.currentScript || (function () {\r\n              var scripts = document.getElementsByTagName('script');\r\n              return scripts[scripts.length - 1];\r\n          })();\r\n      }\r\n  };\n\n  var addDefaultOptions = (function (window, options) {\r\n      // use options from the current script tag data attribues\r\n      addDataAttr(options, browser.currentScript(window));\r\n      if (options.isFileProtocol === undefined) {\r\n          options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n      }\r\n      // Load styles asynchronously (default: false)\r\n      //\r\n      // This is set to `false` by default, so that the body\r\n      // doesn't start loading before the stylesheets are parsed.\r\n      // Setting this to `true` can result in flickering.\r\n      //\r\n      options.async = options.async || false;\r\n      options.fileAsync = options.fileAsync || false;\r\n      // Interval between watch polls\r\n      options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n      options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n          window.location.hostname == '0.0.0.0' ||\r\n          window.location.hostname == 'localhost' ||\r\n          (window.location.port &&\r\n              window.location.port.length > 0) ||\r\n          options.isFileProtocol ? 'development'\r\n          : 'production');\r\n      var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n      if (dumpLineNumbers) {\r\n          options.dumpLineNumbers = dumpLineNumbers[1];\r\n      }\r\n      if (options.useFileCache === undefined) {\r\n          options.useFileCache = true;\r\n      }\r\n      if (options.onReady === undefined) {\r\n          options.onReady = true;\r\n      }\r\n      if (options.relativeUrls) {\r\n          options.rewriteUrls = 'all';\r\n      }\r\n  });\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n\n  Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\r\n  /* global Reflect, Promise */\r\n  var extendStatics = function (d, b) {\r\n      extendStatics = Object.setPrototypeOf ||\r\n          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n          function (d, b) { for (var p in b)\r\n              if (b.hasOwnProperty(p))\r\n                  d[p] = b[p]; };\r\n      return extendStatics(d, b);\r\n  };\r\n  function __extends(d, b) {\r\n      extendStatics(d, b);\r\n      function __() { this.constructor = d; }\r\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n  var __assign = function () {\r\n      __assign = Object.assign || function __assign(t) {\r\n          for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n              s = arguments[i];\r\n              for (var p in s)\r\n                  if (Object.prototype.hasOwnProperty.call(s, p))\r\n                      t[p] = s[p];\r\n          }\r\n          return t;\r\n      };\r\n      return __assign.apply(this, arguments);\r\n  };\r\n  function __spreadArrays() {\r\n      for (var s = 0, i = 0, il = arguments.length; i < il; i++)\r\n          s += arguments[i].length;\r\n      for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n              r[k] = a[j];\r\n      return r;\r\n  }\n\n  var colors = {\r\n      'aliceblue': '#f0f8ff',\r\n      'antiquewhite': '#faebd7',\r\n      'aqua': '#00ffff',\r\n      'aquamarine': '#7fffd4',\r\n      'azure': '#f0ffff',\r\n      'beige': '#f5f5dc',\r\n      'bisque': '#ffe4c4',\r\n      'black': '#000000',\r\n      'blanchedalmond': '#ffebcd',\r\n      'blue': '#0000ff',\r\n      'blueviolet': '#8a2be2',\r\n      'brown': '#a52a2a',\r\n      'burlywood': '#deb887',\r\n      'cadetblue': '#5f9ea0',\r\n      'chartreuse': '#7fff00',\r\n      'chocolate': '#d2691e',\r\n      'coral': '#ff7f50',\r\n      'cornflowerblue': '#6495ed',\r\n      'cornsilk': '#fff8dc',\r\n      'crimson': '#dc143c',\r\n      'cyan': '#00ffff',\r\n      'darkblue': '#00008b',\r\n      'darkcyan': '#008b8b',\r\n      'darkgoldenrod': '#b8860b',\r\n      'darkgray': '#a9a9a9',\r\n      'darkgrey': '#a9a9a9',\r\n      'darkgreen': '#006400',\r\n      'darkkhaki': '#bdb76b',\r\n      'darkmagenta': '#8b008b',\r\n      'darkolivegreen': '#556b2f',\r\n      'darkorange': '#ff8c00',\r\n      'darkorchid': '#9932cc',\r\n      'darkred': '#8b0000',\r\n      'darksalmon': '#e9967a',\r\n      'darkseagreen': '#8fbc8f',\r\n      'darkslateblue': '#483d8b',\r\n      'darkslategray': '#2f4f4f',\r\n      'darkslategrey': '#2f4f4f',\r\n      'darkturquoise': '#00ced1',\r\n      'darkviolet': '#9400d3',\r\n      'deeppink': '#ff1493',\r\n      'deepskyblue': '#00bfff',\r\n      'dimgray': '#696969',\r\n      'dimgrey': '#696969',\r\n      'dodgerblue': '#1e90ff',\r\n      'firebrick': '#b22222',\r\n      'floralwhite': '#fffaf0',\r\n      'forestgreen': '#228b22',\r\n      'fuchsia': '#ff00ff',\r\n      'gainsboro': '#dcdcdc',\r\n      'ghostwhite': '#f8f8ff',\r\n      'gold': '#ffd700',\r\n      'goldenrod': '#daa520',\r\n      'gray': '#808080',\r\n      'grey': '#808080',\r\n      'green': '#008000',\r\n      'greenyellow': '#adff2f',\r\n      'honeydew': '#f0fff0',\r\n      'hotpink': '#ff69b4',\r\n      'indianred': '#cd5c5c',\r\n      'indigo': '#4b0082',\r\n      'ivory': '#fffff0',\r\n      'khaki': '#f0e68c',\r\n      'lavender': '#e6e6fa',\r\n      'lavenderblush': '#fff0f5',\r\n      'lawngreen': '#7cfc00',\r\n      'lemonchiffon': '#fffacd',\r\n      'lightblue': '#add8e6',\r\n      'lightcoral': '#f08080',\r\n      'lightcyan': '#e0ffff',\r\n      'lightgoldenrodyellow': '#fafad2',\r\n      'lightgray': '#d3d3d3',\r\n      'lightgrey': '#d3d3d3',\r\n      'lightgreen': '#90ee90',\r\n      'lightpink': '#ffb6c1',\r\n      'lightsalmon': '#ffa07a',\r\n      'lightseagreen': '#20b2aa',\r\n      'lightskyblue': '#87cefa',\r\n      'lightslategray': '#778899',\r\n      'lightslategrey': '#778899',\r\n      'lightsteelblue': '#b0c4de',\r\n      'lightyellow': '#ffffe0',\r\n      'lime': '#00ff00',\r\n      'limegreen': '#32cd32',\r\n      'linen': '#faf0e6',\r\n      'magenta': '#ff00ff',\r\n      'maroon': '#800000',\r\n      'mediumaquamarine': '#66cdaa',\r\n      'mediumblue': '#0000cd',\r\n      'mediumorchid': '#ba55d3',\r\n      'mediumpurple': '#9370d8',\r\n      'mediumseagreen': '#3cb371',\r\n      'mediumslateblue': '#7b68ee',\r\n      'mediumspringgreen': '#00fa9a',\r\n      'mediumturquoise': '#48d1cc',\r\n      'mediumvioletred': '#c71585',\r\n      'midnightblue': '#191970',\r\n      'mintcream': '#f5fffa',\r\n      'mistyrose': '#ffe4e1',\r\n      'moccasin': '#ffe4b5',\r\n      'navajowhite': '#ffdead',\r\n      'navy': '#000080',\r\n      'oldlace': '#fdf5e6',\r\n      'olive': '#808000',\r\n      'olivedrab': '#6b8e23',\r\n      'orange': '#ffa500',\r\n      'orangered': '#ff4500',\r\n      'orchid': '#da70d6',\r\n      'palegoldenrod': '#eee8aa',\r\n      'palegreen': '#98fb98',\r\n      'paleturquoise': '#afeeee',\r\n      'palevioletred': '#d87093',\r\n      'papayawhip': '#ffefd5',\r\n      'peachpuff': '#ffdab9',\r\n      'peru': '#cd853f',\r\n      'pink': '#ffc0cb',\r\n      'plum': '#dda0dd',\r\n      'powderblue': '#b0e0e6',\r\n      'purple': '#800080',\r\n      'rebeccapurple': '#663399',\r\n      'red': '#ff0000',\r\n      'rosybrown': '#bc8f8f',\r\n      'royalblue': '#4169e1',\r\n      'saddlebrown': '#8b4513',\r\n      'salmon': '#fa8072',\r\n      'sandybrown': '#f4a460',\r\n      'seagreen': '#2e8b57',\r\n      'seashell': '#fff5ee',\r\n      'sienna': '#a0522d',\r\n      'silver': '#c0c0c0',\r\n      'skyblue': '#87ceeb',\r\n      'slateblue': '#6a5acd',\r\n      'slategray': '#708090',\r\n      'slategrey': '#708090',\r\n      'snow': '#fffafa',\r\n      'springgreen': '#00ff7f',\r\n      'steelblue': '#4682b4',\r\n      'tan': '#d2b48c',\r\n      'teal': '#008080',\r\n      'thistle': '#d8bfd8',\r\n      'tomato': '#ff6347',\r\n      'turquoise': '#40e0d0',\r\n      'violet': '#ee82ee',\r\n      'wheat': '#f5deb3',\r\n      'white': '#ffffff',\r\n      'whitesmoke': '#f5f5f5',\r\n      'yellow': '#ffff00',\r\n      'yellowgreen': '#9acd32'\r\n  };\n\n  var unitConversions = {\r\n      length: {\r\n          'm': 1,\r\n          'cm': 0.01,\r\n          'mm': 0.001,\r\n          'in': 0.0254,\r\n          'px': 0.0254 / 96,\r\n          'pt': 0.0254 / 72,\r\n          'pc': 0.0254 / 72 * 12\r\n      },\r\n      duration: {\r\n          's': 1,\r\n          'ms': 0.001\r\n      },\r\n      angle: {\r\n          'rad': 1 / (2 * Math.PI),\r\n          'deg': 1 / 360,\r\n          'grad': 1 / 400,\r\n          'turn': 1\r\n      }\r\n  };\n\n  var data = { colors: colors, unitConversions: unitConversions };\n\n  var Node = /** @class */ (function () {\r\n      function Node() {\r\n          this.parent = null;\r\n          this.visibilityBlocks = undefined;\r\n          this.nodeVisible = undefined;\r\n          this.rootNode = null;\r\n          this.parsed = null;\r\n          var self = this;\r\n          Object.defineProperty(this, 'currentFileInfo', {\r\n              get: function () { return self.fileInfo(); }\r\n          });\r\n          Object.defineProperty(this, 'index', {\r\n              get: function () { return self.getIndex(); }\r\n          });\r\n      }\r\n      Node.prototype.setParent = function (nodes, parent) {\r\n          function set(node) {\r\n              if (node && node instanceof Node) {\r\n                  node.parent = parent;\r\n              }\r\n          }\r\n          if (Array.isArray(nodes)) {\r\n              nodes.forEach(set);\r\n          }\r\n          else {\r\n              set(nodes);\r\n          }\r\n      };\r\n      Node.prototype.getIndex = function () {\r\n          return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n      };\r\n      Node.prototype.fileInfo = function () {\r\n          return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n      };\r\n      Node.prototype.isRulesetLike = function () {\r\n          return false;\r\n      };\r\n      Node.prototype.toCSS = function (context) {\r\n          var strs = [];\r\n          this.genCSS(context, {\r\n              add: function (chunk, fileInfo, index) {\r\n                  strs.push(chunk);\r\n              },\r\n              isEmpty: function () {\r\n                  return strs.length === 0;\r\n              }\r\n          });\r\n          return strs.join('');\r\n      };\r\n      Node.prototype.genCSS = function (context, output) {\r\n          output.add(this.value);\r\n      };\r\n      Node.prototype.accept = function (visitor) {\r\n          this.value = visitor.visit(this.value);\r\n      };\r\n      Node.prototype.eval = function () { return this; };\r\n      Node.prototype._operate = function (context, op, a, b) {\r\n          switch (op) {\r\n              case '+': return a + b;\r\n              case '-': return a - b;\r\n              case '*': return a * b;\r\n              case '/': return a / b;\r\n          }\r\n      };\r\n      Node.prototype.fround = function (context, value) {\r\n          var precision = context && context.numPrecision;\r\n          // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n          return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n      };\r\n      // Returns true if this node represents root of ast imported by reference\r\n      Node.prototype.blocksVisibility = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          return this.visibilityBlocks !== 0;\r\n      };\r\n      Node.prototype.addVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks + 1;\r\n      };\r\n      Node.prototype.removeVisibilityBlock = function () {\r\n          if (this.visibilityBlocks == null) {\r\n              this.visibilityBlocks = 0;\r\n          }\r\n          this.visibilityBlocks = this.visibilityBlocks - 1;\r\n      };\r\n      // Turns on node visibility - if called node will be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureVisibility = function () {\r\n          this.nodeVisible = true;\r\n      };\r\n      // Turns off node visibility - if called node will NOT be shown in output regardless\r\n      // of whether it comes from import by reference or not\r\n      Node.prototype.ensureInvisibility = function () {\r\n          this.nodeVisible = false;\r\n      };\r\n      // return values:\r\n      // false - the node must not be visible\r\n      // true - the node must be visible\r\n      // undefined or null - the node has the same visibility as its parent\r\n      Node.prototype.isVisible = function () {\r\n          return this.nodeVisible;\r\n      };\r\n      Node.prototype.visibilityInfo = function () {\r\n          return {\r\n              visibilityBlocks: this.visibilityBlocks,\r\n              nodeVisible: this.nodeVisible\r\n          };\r\n      };\r\n      Node.prototype.copyVisibilityInfo = function (info) {\r\n          if (!info) {\r\n              return;\r\n          }\r\n          this.visibilityBlocks = info.visibilityBlocks;\r\n          this.nodeVisible = info.nodeVisible;\r\n      };\r\n      return Node;\r\n  }());\r\n  Node.compare = function (a, b) {\r\n      /* returns:\r\n       -1: a < b\r\n       0: a = b\r\n       1: a > b\r\n       and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n      if ((a.compare) &&\r\n          // for \"symmetric results\" force toCSS-based comparison\r\n          // of Quoted or Anonymous if either value is one of those\r\n          !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n          return a.compare(b);\r\n      }\r\n      else if (b.compare) {\r\n          return -b.compare(a);\r\n      }\r\n      else if (a.type !== b.type) {\r\n          return undefined;\r\n      }\r\n      a = a.value;\r\n      b = b.value;\r\n      if (!Array.isArray(a)) {\r\n          return a === b ? 0 : undefined;\r\n      }\r\n      if (a.length !== b.length) {\r\n          return undefined;\r\n      }\r\n      for (var i = 0; i < a.length; i++) {\r\n          if (Node.compare(a[i], b[i]) !== 0) {\r\n              return undefined;\r\n          }\r\n      }\r\n      return 0;\r\n  };\r\n  Node.numericCompare = function (a, b) { return a < b ? -1\r\n      : a === b ? 0\r\n          : a > b ? 1 : undefined; };\n\n  //\r\n  // RGB Colors - #ff0014, #eee\r\n  //\r\n  var Color = /** @class */ (function (_super) {\r\n      __extends(Color, _super);\r\n      function Color(rgb, a, originalForm) {\r\n          var _this = _super.call(this) || this;\r\n          var self = _this;\r\n          //\r\n          // The end goal here, is to parse the arguments\r\n          // into an integer triplet, such as `128, 255, 0`\r\n          //\r\n          // This facilitates operations and conversions.\r\n          //\r\n          if (Array.isArray(rgb)) {\r\n              _this.rgb = rgb;\r\n          }\r\n          else if (rgb.length >= 6) {\r\n              _this.rgb = [];\r\n              rgb.match(/.{2}/g).map(function (c, i) {\r\n                  if (i < 3) {\r\n                      self.rgb.push(parseInt(c, 16));\r\n                  }\r\n                  else {\r\n                      self.alpha = (parseInt(c, 16)) / 255;\r\n                  }\r\n              });\r\n          }\r\n          else {\r\n              _this.rgb = [];\r\n              rgb.split('').map(function (c, i) {\r\n                  if (i < 3) {\r\n                      self.rgb.push(parseInt(c + c, 16));\r\n                  }\r\n                  else {\r\n                      self.alpha = (parseInt(c + c, 16)) / 255;\r\n                  }\r\n              });\r\n          }\r\n          _this.alpha = _this.alpha || (typeof a === 'number' ? a : 1);\r\n          if (typeof originalForm !== 'undefined') {\r\n              _this.value = originalForm;\r\n          }\r\n          return _this;\r\n      }\r\n      Color.prototype.luma = function () {\r\n          var r = this.rgb[0] / 255;\r\n          var g = this.rgb[1] / 255;\r\n          var b = this.rgb[2] / 255;\r\n          r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n          g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n          b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n          return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n      };\r\n      Color.prototype.genCSS = function (context, output) {\r\n          output.add(this.toCSS(context));\r\n      };\r\n      Color.prototype.toCSS = function (context, doNotCompress) {\r\n          var compress = context && context.compress && !doNotCompress;\r\n          var color;\r\n          var alpha;\r\n          var colorFunction;\r\n          var args = [];\r\n          // `value` is set if this color was originally\r\n          // converted from a named color string so we need\r\n          // to respect this and try to output named color too.\r\n          alpha = this.fround(context, this.alpha);\r\n          if (this.value) {\r\n              if (this.value.indexOf('rgb') === 0) {\r\n                  if (alpha < 1) {\r\n                      colorFunction = 'rgba';\r\n                  }\r\n              }\r\n              else if (this.value.indexOf('hsl') === 0) {\r\n                  if (alpha < 1) {\r\n                      colorFunction = 'hsla';\r\n                  }\r\n                  else {\r\n                      colorFunction = 'hsl';\r\n                  }\r\n              }\r\n              else {\r\n                  return this.value;\r\n              }\r\n          }\r\n          else {\r\n              if (alpha < 1) {\r\n                  colorFunction = 'rgba';\r\n              }\r\n          }\r\n          switch (colorFunction) {\r\n              case 'rgba':\r\n                  args = this.rgb.map(function (c) { return clamp(Math.round(c), 255); }).concat(clamp(alpha, 1));\r\n                  break;\r\n              case 'hsla':\r\n                  args.push(clamp(alpha, 1));\r\n              case 'hsl':\r\n                  color = this.toHSL();\r\n                  args = [\r\n                      this.fround(context, color.h),\r\n                      this.fround(context, color.s * 100) + \"%\",\r\n                      this.fround(context, color.l * 100) + \"%\"\r\n                  ].concat(args);\r\n          }\r\n          if (colorFunction) {\r\n              // Values are capped between `0` and `255`, rounded and zero-padded.\r\n              return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n          }\r\n          color = this.toRGB();\r\n          if (compress) {\r\n              var splitcolor = color.split('');\r\n              // Convert color to short format\r\n              if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                  color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n              }\r\n          }\r\n          return color;\r\n      };\r\n      //\r\n      // Operations have to be done per-channel, if not,\r\n      // channels will spill onto each other. Once we have\r\n      // our result, in the form of an integer triplet,\r\n      // we create a new Color node to hold the result.\r\n      //\r\n      Color.prototype.operate = function (context, op, other) {\r\n          var rgb = new Array(3);\r\n          var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n          for (var c = 0; c < 3; c++) {\r\n              rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n          }\r\n          return new Color(rgb, alpha);\r\n      };\r\n      Color.prototype.toRGB = function () {\r\n          return toHex(this.rgb);\r\n      };\r\n      Color.prototype.toHSL = function () {\r\n          var r = this.rgb[0] / 255;\r\n          var g = this.rgb[1] / 255;\r\n          var b = this.rgb[2] / 255;\r\n          var a = this.alpha;\r\n          var max = Math.max(r, g, b);\r\n          var min = Math.min(r, g, b);\r\n          var h;\r\n          var s;\r\n          var l = (max + min) / 2;\r\n          var d = max - min;\r\n          if (max === min) {\r\n              h = s = 0;\r\n          }\r\n          else {\r\n              s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n              switch (max) {\r\n                  case r:\r\n                      h = (g - b) / d + (g < b ? 6 : 0);\r\n                      break;\r\n                  case g:\r\n                      h = (b - r) / d + 2;\r\n                      break;\r\n                  case b:\r\n                      h = (r - g) / d + 4;\r\n                      break;\r\n              }\r\n              h /= 6;\r\n          }\r\n          return { h: h * 360, s: s, l: l, a: a };\r\n      };\r\n      // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n      Color.prototype.toHSV = function () {\r\n          var r = this.rgb[0] / 255;\r\n          var g = this.rgb[1] / 255;\r\n          var b = this.rgb[2] / 255;\r\n          var a = this.alpha;\r\n          var max = Math.max(r, g, b);\r\n          var min = Math.min(r, g, b);\r\n          var h;\r\n          var s;\r\n          var v = max;\r\n          var d = max - min;\r\n          if (max === 0) {\r\n              s = 0;\r\n          }\r\n          else {\r\n              s = d / max;\r\n          }\r\n          if (max === min) {\r\n              h = 0;\r\n          }\r\n          else {\r\n              switch (max) {\r\n                  case r:\r\n                      h = (g - b) / d + (g < b ? 6 : 0);\r\n                      break;\r\n                  case g:\r\n                      h = (b - r) / d + 2;\r\n                      break;\r\n                  case b:\r\n                      h = (r - g) / d + 4;\r\n                      break;\r\n              }\r\n              h /= 6;\r\n          }\r\n          return { h: h * 360, s: s, v: v, a: a };\r\n      };\r\n      Color.prototype.toARGB = function () {\r\n          return toHex([this.alpha * 255].concat(this.rgb));\r\n      };\r\n      Color.prototype.compare = function (x) {\r\n          return (x.rgb &&\r\n              x.rgb[0] === this.rgb[0] &&\r\n              x.rgb[1] === this.rgb[1] &&\r\n              x.rgb[2] === this.rgb[2] &&\r\n              x.alpha === this.alpha) ? 0 : undefined;\r\n      };\r\n      return Color;\r\n  }(Node));\r\n  Color.prototype.type = 'Color';\r\n  function clamp(v, max) {\r\n      return Math.min(Math.max(v, 0), max);\r\n  }\r\n  function toHex(v) {\r\n      return \"#\" + v.map(function (c) {\r\n          c = clamp(Math.round(c), 255);\r\n          return (c < 16 ? '0' : '') + c.toString(16);\r\n      }).join('');\r\n  }\r\n  Color.fromKeyword = function (keyword) {\r\n      var c;\r\n      var key = keyword.toLowerCase();\r\n      if (colors.hasOwnProperty(key)) {\r\n          c = new Color(colors[key].slice(1));\r\n      }\r\n      else if (key === 'transparent') {\r\n          c = new Color([0, 0, 0], 0);\r\n      }\r\n      if (c) {\r\n          c.value = keyword;\r\n          return c;\r\n      }\r\n  };\n\n  var Paren = /** @class */ (function (_super) {\r\n      __extends(Paren, _super);\r\n      function Paren(node) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = node;\r\n          return _this;\r\n      }\r\n      Paren.prototype.genCSS = function (context, output) {\r\n          output.add('(');\r\n          this.value.genCSS(context, output);\r\n          output.add(')');\r\n      };\r\n      Paren.prototype.eval = function (context) {\r\n          return new Paren(this.value.eval(context));\r\n      };\r\n      return Paren;\r\n  }(Node));\r\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\r\n      '': true,\r\n      ' ': true,\r\n      '|': true\r\n  };\r\n  var Combinator = /** @class */ (function (_super) {\r\n      __extends(Combinator, _super);\r\n      function Combinator(value) {\r\n          var _this = _super.call(this) || this;\r\n          if (value === ' ') {\r\n              _this.value = ' ';\r\n              _this.emptyOrWhitespace = true;\r\n          }\r\n          else {\r\n              _this.value = value ? value.trim() : '';\r\n              _this.emptyOrWhitespace = _this.value === '';\r\n          }\r\n          return _this;\r\n      }\r\n      Combinator.prototype.genCSS = function (context, output) {\r\n          var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n          output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n      };\r\n      return Combinator;\r\n  }(Node));\r\n  Combinator.prototype.type = 'Combinator';\n\n  var Element = /** @class */ (function (_super) {\r\n      __extends(Element, _super);\r\n      function Element(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.combinator = combinator instanceof Combinator ?\r\n              combinator : new Combinator(combinator);\r\n          if (typeof value === 'string') {\r\n              _this.value = value.trim();\r\n          }\r\n          else if (value) {\r\n              _this.value = value;\r\n          }\r\n          else {\r\n              _this.value = '';\r\n          }\r\n          _this.isVariable = isVariable;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.setParent(_this.combinator, _this);\r\n          return _this;\r\n      }\r\n      Element.prototype.accept = function (visitor) {\r\n          var value = this.value;\r\n          this.combinator = visitor.visit(this.combinator);\r\n          if (typeof value === 'object') {\r\n              this.value = visitor.visit(value);\r\n          }\r\n      };\r\n      Element.prototype.eval = function (context) {\r\n          return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      };\r\n      Element.prototype.clone = function () {\r\n          return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      };\r\n      Element.prototype.genCSS = function (context, output) {\r\n          output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n      };\r\n      Element.prototype.toCSS = function (context) {\r\n          if (context === void 0) { context = {}; }\r\n          var value = this.value;\r\n          var firstSelector = context.firstSelector;\r\n          if (value instanceof Paren) {\r\n              // selector in parens should not be affected by outer selector\r\n              // flags (breaks only interpolated selectors - see #1973)\r\n              context.firstSelector = true;\r\n          }\r\n          value = value.toCSS ? value.toCSS(context) : value;\r\n          context.firstSelector = firstSelector;\r\n          if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n              return '';\r\n          }\r\n          else {\r\n              return this.combinator.toCSS(context) + value;\r\n          }\r\n      };\r\n      return Element;\r\n  }(Node));\r\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\r\n      ALWAYS: 0,\r\n      PARENS_DIVISION: 1,\r\n      PARENS: 2,\r\n      STRICT_LEGACY: 3\r\n  };\r\n  var RewriteUrls = {\r\n      OFF: 0,\r\n      LOCAL: 1,\r\n      ALL: 2\r\n  };\n\n  function getLocation(index, inputStream) {\r\n      var n = index + 1;\r\n      var line = null;\r\n      var column = -1;\r\n      while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n          column++;\r\n      }\r\n      if (typeof index === 'number') {\r\n          line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n      }\r\n      return {\r\n          line: line,\r\n          column: column\r\n      };\r\n  }\r\n  function copyArray(arr) {\r\n      var i;\r\n      var length = arr.length;\r\n      var copy = new Array(length);\r\n      for (i = 0; i < length; i++) {\r\n          copy[i] = arr[i];\r\n      }\r\n      return copy;\r\n  }\r\n  function clone(obj) {\r\n      var cloned = {};\r\n      for (var prop in obj) {\r\n          if (obj.hasOwnProperty(prop)) {\r\n              cloned[prop] = obj[prop];\r\n          }\r\n      }\r\n      return cloned;\r\n  }\r\n  function defaults(obj1, obj2) {\r\n      var newObj = obj2 || {};\r\n      if (!obj2._defaults) {\r\n          newObj = {};\r\n          var defaults_1 = __assign({}, obj1);\r\n          newObj._defaults = defaults_1;\r\n          var cloned = obj2 ? __assign({}, obj2) : {};\r\n          Object.assign(newObj, defaults_1, cloned);\r\n      }\r\n      return newObj;\r\n  }\r\n  function copyOptions(obj1, obj2) {\r\n      if (obj2 && obj2._defaults) {\r\n          return obj2;\r\n      }\r\n      var opts = defaults(obj1, obj2);\r\n      if (opts.strictMath) {\r\n          opts.math = Math$1.STRICT_LEGACY;\r\n      }\r\n      // Back compat with changed relativeUrls option\r\n      if (opts.relativeUrls) {\r\n          opts.rewriteUrls = RewriteUrls.ALL;\r\n      }\r\n      if (typeof opts.math === 'string') {\r\n          switch (opts.math.toLowerCase()) {\r\n              case 'always':\r\n                  opts.math = Math$1.ALWAYS;\r\n                  break;\r\n              case 'parens-division':\r\n                  opts.math = Math$1.PARENS_DIVISION;\r\n                  break;\r\n              case 'strict':\r\n              case 'parens':\r\n                  opts.math = Math$1.PARENS;\r\n                  break;\r\n              case 'strict-legacy':\r\n                  opts.math = Math$1.STRICT_LEGACY;\r\n          }\r\n      }\r\n      if (typeof opts.rewriteUrls === 'string') {\r\n          switch (opts.rewriteUrls.toLowerCase()) {\r\n              case 'off':\r\n                  opts.rewriteUrls = RewriteUrls.OFF;\r\n                  break;\r\n              case 'local':\r\n                  opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                  break;\r\n              case 'all':\r\n                  opts.rewriteUrls = RewriteUrls.ALL;\r\n                  break;\r\n          }\r\n      }\r\n      return opts;\r\n  }\r\n  function merge(obj1, obj2) {\r\n      for (var prop in obj2) {\r\n          if (obj2.hasOwnProperty(prop)) {\r\n              obj1[prop] = obj2[prop];\r\n          }\r\n      }\r\n      return obj1;\r\n  }\r\n  function flattenArray(arr, result) {\r\n      if (result === void 0) { result = []; }\r\n      for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n          var value = arr[i];\r\n          if (Array.isArray(value)) {\r\n              flattenArray(value, result);\r\n          }\r\n          else {\r\n              if (value !== undefined) {\r\n                  result.push(value);\r\n              }\r\n          }\r\n      }\r\n      return result;\r\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n  /**\r\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n   * Besides standard .message it keeps some additional data like a path to the file where the error\r\n   * occurred along with line and column numbers.\r\n   *\r\n   * @class\r\n   * @extends Error\r\n   * @type {module.LessError}\r\n   *\r\n   * @prop {string} type\r\n   * @prop {string} filename\r\n   * @prop {number} index\r\n   * @prop {number} line\r\n   * @prop {number} column\r\n   * @prop {number} callLine\r\n   * @prop {number} callExtract\r\n   * @prop {string[]} extract\r\n   *\r\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n   * @param {string} [currentFilename]\r\n   */\r\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\r\n      Error.call(this);\r\n      var filename = e.filename || currentFilename;\r\n      this.message = e.message;\r\n      this.stack = e.stack;\r\n      if (fileContentMap && filename) {\r\n          var input = fileContentMap.contents[filename];\r\n          var loc = getLocation(e.index, input);\r\n          var line = loc.line;\r\n          var col = loc.column;\r\n          var callLine = e.call && getLocation(e.call, input).line;\r\n          var lines = input ? input.split('\\n') : '';\r\n          this.type = e.type || 'Syntax';\r\n          this.filename = filename;\r\n          this.index = e.index;\r\n          this.line = typeof line === 'number' ? line + 1 : null;\r\n          this.column = col;\r\n          if (!this.line && this.stack) {\r\n              var found = this.stack.match(anonymousFunc);\r\n              /**\r\n               * We have to figure out how this environment stringifies anonymous functions\r\n               * so we can correctly map plugin errors.\r\n               *\r\n               * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n               * being present or not, so we inject dummy params.\r\n               */\r\n              var func = new Function('a', 'throw new Error()');\r\n              var lineAdjust = 0;\r\n              try {\r\n                  func();\r\n              }\r\n              catch (e) {\r\n                  var match = e.stack.match(anonymousFunc);\r\n                  var line_1 = parseInt(match[2]);\r\n                  lineAdjust = 1 - line_1;\r\n              }\r\n              if (found) {\r\n                  if (found[2]) {\r\n                      this.line = parseInt(found[2]) + lineAdjust;\r\n                  }\r\n                  if (found[3]) {\r\n                      this.column = parseInt(found[3]);\r\n                  }\r\n              }\r\n          }\r\n          this.callLine = callLine + 1;\r\n          this.callExtract = lines[callLine];\r\n          this.extract = [\r\n              lines[this.line - 2],\r\n              lines[this.line - 1],\r\n              lines[this.line]\r\n          ];\r\n      }\r\n  };\r\n  if (typeof Object.create === 'undefined') {\r\n      var F = function () { };\r\n      F.prototype = Error.prototype;\r\n      LessError.prototype = new F();\r\n  }\r\n  else {\r\n      LessError.prototype = Object.create(Error.prototype);\r\n  }\r\n  LessError.prototype.constructor = LessError;\r\n  /**\r\n   * An overridden version of the default Object.prototype.toString\r\n   * which uses additional information to create a helpful message.\r\n   *\r\n   * @param {Object} options\r\n   * @returns {string}\r\n   */\r\n  LessError.prototype.toString = function (options) {\r\n      if (options === void 0) { options = {}; }\r\n      var message = '';\r\n      var extract = this.extract || [];\r\n      var error = [];\r\n      var stylize = function (str) { return str; };\r\n      if (options.stylize) {\r\n          var type = typeof options.stylize;\r\n          if (type !== 'function') {\r\n              throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n          }\r\n          stylize = options.stylize;\r\n      }\r\n      if (this.line !== null) {\r\n          if (typeof extract[0] === 'string') {\r\n              error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n          }\r\n          if (typeof extract[1] === 'string') {\r\n              var errorTxt = this.line + \" \";\r\n              if (extract[1]) {\r\n                  errorTxt += extract[1].slice(0, this.column) +\r\n                      stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                          extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n              }\r\n              error.push(errorTxt);\r\n          }\r\n          if (typeof extract[2] === 'string') {\r\n              error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n          }\r\n          error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n      }\r\n      message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n      if (this.filename) {\r\n          message += stylize(' in ', 'red') + this.filename;\r\n      }\r\n      if (this.line) {\r\n          message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n      }\r\n      message += \"\\n\" + error;\r\n      if (this.callLine) {\r\n          message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n          message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n      }\r\n      return message;\r\n  };\n\n  var Selector = /** @class */ (function (_super) {\r\n      __extends(Selector, _super);\r\n      function Selector(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.extendList = extendList;\r\n          _this.condition = condition;\r\n          _this.evaldCondition = !condition;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.elements = _this.getElements(elements);\r\n          _this.mixinElements_ = undefined;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.setParent(_this.elements, _this);\r\n          return _this;\r\n      }\r\n      Selector.prototype.accept = function (visitor) {\r\n          if (this.elements) {\r\n              this.elements = visitor.visitArray(this.elements);\r\n          }\r\n          if (this.extendList) {\r\n              this.extendList = visitor.visitArray(this.extendList);\r\n          }\r\n          if (this.condition) {\r\n              this.condition = visitor.visit(this.condition);\r\n          }\r\n      };\r\n      Selector.prototype.createDerived = function (elements, extendList, evaldCondition) {\r\n          elements = this.getElements(elements);\r\n          var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n          newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n          newSelector.mediaEmpty = this.mediaEmpty;\r\n          return newSelector;\r\n      };\r\n      Selector.prototype.getElements = function (els) {\r\n          if (!els) {\r\n              return [new Element('', '&', false, this._index, this._fileInfo)];\r\n          }\r\n          if (typeof els === 'string') {\r\n              this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                  if (err) {\r\n                      throw new LessError({\r\n                          index: err.index,\r\n                          message: err.message\r\n                      }, this.parse.imports, this._fileInfo.filename);\r\n                  }\r\n                  els = result[0].elements;\r\n              });\r\n          }\r\n          return els;\r\n      };\r\n      Selector.prototype.createEmptySelectors = function () {\r\n          var el = new Element('', '&', false, this._index, this._fileInfo);\r\n          var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n          sels[0].mediaEmpty = true;\r\n          return sels;\r\n      };\r\n      Selector.prototype.match = function (other) {\r\n          var elements = this.elements;\r\n          var len = elements.length;\r\n          var olen;\r\n          var i;\r\n          other = other.mixinElements();\r\n          olen = other.length;\r\n          if (olen === 0 || len < olen) {\r\n              return 0;\r\n          }\r\n          else {\r\n              for (i = 0; i < olen; i++) {\r\n                  if (elements[i].value !== other[i]) {\r\n                      return 0;\r\n                  }\r\n              }\r\n          }\r\n          return olen; // return number of matched elements\r\n      };\r\n      Selector.prototype.mixinElements = function () {\r\n          if (this.mixinElements_) {\r\n              return this.mixinElements_;\r\n          }\r\n          var elements = this.elements.map(function (v) { return v.combinator.value + (v.value.value || v.value); }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n          if (elements) {\r\n              if (elements[0] === '&') {\r\n                  elements.shift();\r\n              }\r\n          }\r\n          else {\r\n              elements = [];\r\n          }\r\n          return (this.mixinElements_ = elements);\r\n      };\r\n      Selector.prototype.isJustParentSelector = function () {\r\n          return !this.mediaEmpty &&\r\n              this.elements.length === 1 &&\r\n              this.elements[0].value === '&' &&\r\n              (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n      };\r\n      Selector.prototype.eval = function (context) {\r\n          var evaldCondition = this.condition && this.condition.eval(context);\r\n          var elements = this.elements;\r\n          var extendList = this.extendList;\r\n          elements = elements && elements.map(function (e) { return e.eval(context); });\r\n          extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n          return this.createDerived(elements, extendList, evaldCondition);\r\n      };\r\n      Selector.prototype.genCSS = function (context, output) {\r\n          var i;\r\n          var element;\r\n          if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n              output.add(' ', this.fileInfo(), this.getIndex());\r\n          }\r\n          for (i = 0; i < this.elements.length; i++) {\r\n              element = this.elements[i];\r\n              element.genCSS(context, output);\r\n          }\r\n      };\r\n      Selector.prototype.getIsOutput = function () {\r\n          return this.evaldCondition;\r\n      };\r\n      return Selector;\r\n  }(Node));\r\n  Selector.prototype.type = 'Selector';\n\n  var Value = /** @class */ (function (_super) {\r\n      __extends(Value, _super);\r\n      function Value(value) {\r\n          var _this = _super.call(this) || this;\r\n          if (!value) {\r\n              throw new Error('Value requires an array argument');\r\n          }\r\n          if (!Array.isArray(value)) {\r\n              _this.value = [value];\r\n          }\r\n          else {\r\n              _this.value = value;\r\n          }\r\n          return _this;\r\n      }\r\n      Value.prototype.accept = function (visitor) {\r\n          if (this.value) {\r\n              this.value = visitor.visitArray(this.value);\r\n          }\r\n      };\r\n      Value.prototype.eval = function (context) {\r\n          if (this.value.length === 1) {\r\n              return this.value[0].eval(context);\r\n          }\r\n          else {\r\n              return new Value(this.value.map(function (v) { return v.eval(context); }));\r\n          }\r\n      };\r\n      Value.prototype.genCSS = function (context, output) {\r\n          var i;\r\n          for (i = 0; i < this.value.length; i++) {\r\n              this.value[i].genCSS(context, output);\r\n              if (i + 1 < this.value.length) {\r\n                  output.add((context && context.compress) ? ',' : ', ');\r\n              }\r\n          }\r\n      };\r\n      return Value;\r\n  }(Node));\r\n  Value.prototype.type = 'Value';\n\n  var Keyword = /** @class */ (function (_super) {\r\n      __extends(Keyword, _super);\r\n      function Keyword(value) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = value;\r\n          return _this;\r\n      }\r\n      Keyword.prototype.genCSS = function (context, output) {\r\n          if (this.value === '%') {\r\n              throw { type: 'Syntax', message: 'Invalid % without number' };\r\n          }\r\n          output.add(this.value);\r\n      };\r\n      return Keyword;\r\n  }(Node));\r\n  Keyword.prototype.type = 'Keyword';\r\n  Keyword.True = new Keyword('true');\r\n  Keyword.False = new Keyword('false');\n\n  var Anonymous = /** @class */ (function (_super) {\r\n      __extends(Anonymous, _super);\r\n      function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = value;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.mapLines = mapLines;\r\n          _this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n          _this.allowRoot = true;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          return _this;\r\n      }\r\n      Anonymous.prototype.eval = function () {\r\n          return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n      };\r\n      Anonymous.prototype.compare = function (other) {\r\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n      };\r\n      Anonymous.prototype.isRulesetLike = function () {\r\n          return this.rulesetLike;\r\n      };\r\n      Anonymous.prototype.genCSS = function (context, output) {\r\n          this.nodeVisible = Boolean(this.value);\r\n          if (this.nodeVisible) {\r\n              output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n          }\r\n      };\r\n      return Anonymous;\r\n  }(Node));\r\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\r\n  var Declaration = /** @class */ (function (_super) {\r\n      __extends(Declaration, _super);\r\n      function Declaration(name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n          var _this = _super.call(this) || this;\r\n          _this.name = name;\r\n          _this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n          _this.important = important ? \" \" + important.trim() : '';\r\n          _this.merge = merge;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.inline = inline || false;\r\n          _this.variable = (variable !== undefined) ? variable\r\n              : (name.charAt && (name.charAt(0) === '@'));\r\n          _this.allowRoot = true;\r\n          _this.setParent(_this.value, _this);\r\n          return _this;\r\n      }\r\n      Declaration.prototype.genCSS = function (context, output) {\r\n          output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n          try {\r\n              this.value.genCSS(context, output);\r\n          }\r\n          catch (e) {\r\n              e.index = this._index;\r\n              e.filename = this._fileInfo.filename;\r\n              throw e;\r\n          }\r\n          output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n      };\r\n      Declaration.prototype.eval = function (context) {\r\n          var mathBypass = false;\r\n          var prevMath;\r\n          var name = this.name;\r\n          var evaldValue;\r\n          var variable = this.variable;\r\n          if (typeof name !== 'string') {\r\n              // expand 'primitive' name directly to get\r\n              // things faster (~10% for benchmark.less):\r\n              name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                  name[0].value : evalName(context, name);\r\n              variable = false; // never treat expanded interpolation as new variable name\r\n          }\r\n          // @todo remove when parens-division is default\r\n          if (name === 'font' && context.math === MATH.ALWAYS) {\r\n              mathBypass = true;\r\n              prevMath = context.math;\r\n              context.math = MATH.PARENS_DIVISION;\r\n          }\r\n          try {\r\n              context.importantScope.push({});\r\n              evaldValue = this.value.eval(context);\r\n              if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                  throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                      index: this.getIndex(), filename: this.fileInfo().filename };\r\n              }\r\n              var important = this.important;\r\n              var importantResult = context.importantScope.pop();\r\n              if (!important && importantResult.important) {\r\n                  important = importantResult.important;\r\n              }\r\n              return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n          }\r\n          catch (e) {\r\n              if (typeof e.index !== 'number') {\r\n                  e.index = this.getIndex();\r\n                  e.filename = this.fileInfo().filename;\r\n              }\r\n              throw e;\r\n          }\r\n          finally {\r\n              if (mathBypass) {\r\n                  context.math = prevMath;\r\n              }\r\n          }\r\n      };\r\n      Declaration.prototype.makeImportant = function () {\r\n          return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n      };\r\n      return Declaration;\r\n  }(Node));\r\n  function evalName(context, name) {\r\n      var value = '';\r\n      var i;\r\n      var n = name.length;\r\n      var output = { add: function (s) { value += s; } };\r\n      for (i = 0; i < n; i++) {\r\n          name[i].eval(context).genCSS(context, output);\r\n      }\r\n      return value;\r\n  }\r\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function (context, ctx, lineSeparator) {\r\n      var result = '';\r\n      if (context.dumpLineNumbers && !context.compress) {\r\n          switch (context.dumpLineNumbers) {\r\n              case 'comments':\r\n                  result = debugInfo.asComment(ctx);\r\n                  break;\r\n              case 'mediaquery':\r\n                  result = debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n              case 'all':\r\n                  result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                  break;\r\n          }\r\n      }\r\n      return result;\r\n  };\r\n  debugInfo.asComment = function (ctx) { return ctx.debugInfo ? \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\" : ''; };\r\n  debugInfo.asMediaQuery = function (ctx) {\r\n      if (!ctx.debugInfo) {\r\n          return '';\r\n      }\r\n      var filenameWithProtocol = ctx.debugInfo.fileName;\r\n      if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n          filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n      }\r\n      return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n          if (a == '\\\\') {\r\n              a = '\\/';\r\n          }\r\n          return \"\\\\\" + a;\r\n      }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n  };\n\n  var Comment = /** @class */ (function (_super) {\r\n      __extends(Comment, _super);\r\n      function Comment(value, isLineComment, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = value;\r\n          _this.isLineComment = isLineComment;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.allowRoot = true;\r\n          return _this;\r\n      }\r\n      Comment.prototype.genCSS = function (context, output) {\r\n          if (this.debugInfo) {\r\n              output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n          }\r\n          output.add(this.value);\r\n      };\r\n      Comment.prototype.isSilent = function (context) {\r\n          var isCompressed = context.compress && this.value[2] !== '!';\r\n          return this.isLineComment || isCompressed;\r\n      };\r\n      return Comment;\r\n  }(Node));\r\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\r\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n      if (!original) {\r\n          return;\r\n      }\r\n      for (var i = 0; i < propertiesToCopy.length; i++) {\r\n          if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n              destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n          }\r\n      }\r\n  };\r\n  /*\r\n   parse is used whilst parsing\r\n   */\r\n  var parseCopyProperties = [\r\n      // options\r\n      'paths',\r\n      'rewriteUrls',\r\n      'rootpath',\r\n      'strictImports',\r\n      'insecure',\r\n      'dumpLineNumbers',\r\n      'compress',\r\n      'syncImport',\r\n      'chunkInput',\r\n      'mime',\r\n      'useFileCache',\r\n      // context\r\n      'processImports',\r\n      // Used by the import manager to stop multiple import visitors being created.\r\n      'pluginManager' // Used as the plugin manager for the session\r\n  ];\r\n  contexts.Parse = function (options) {\r\n      copyFromOriginal(options, this, parseCopyProperties);\r\n      if (typeof this.paths === 'string') {\r\n          this.paths = [this.paths];\r\n      }\r\n  };\r\n  var evalCopyProperties = [\r\n      'paths',\r\n      'compress',\r\n      'math',\r\n      'strictUnits',\r\n      'sourceMap',\r\n      'importMultiple',\r\n      'urlArgs',\r\n      'javascriptEnabled',\r\n      'pluginManager',\r\n      'importantScope',\r\n      'rewriteUrls' // option - whether to adjust URL's to be relative\r\n  ];\r\n  function isPathRelative(path) {\r\n      return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n  }\r\n  function isPathLocalRelative(path) {\r\n      return path.charAt(0) === '.';\r\n  }\r\n  contexts.Eval = /** @class */ (function () {\r\n      function Eval(options, frames) {\r\n          copyFromOriginal(options, this, evalCopyProperties);\r\n          if (typeof this.paths === 'string') {\r\n              this.paths = [this.paths];\r\n          }\r\n          this.frames = frames || [];\r\n          this.importantScope = this.importantScope || [];\r\n          this.inCalc = false;\r\n          this.mathOn = true;\r\n      }\r\n      Eval.prototype.enterCalc = function () {\r\n          if (!this.calcStack) {\r\n              this.calcStack = [];\r\n          }\r\n          this.calcStack.push(true);\r\n          this.inCalc = true;\r\n      };\r\n      Eval.prototype.exitCalc = function () {\r\n          this.calcStack.pop();\r\n          if (!this.calcStack.length) {\r\n              this.inCalc = false;\r\n          }\r\n      };\r\n      Eval.prototype.inParenthesis = function () {\r\n          if (!this.parensStack) {\r\n              this.parensStack = [];\r\n          }\r\n          this.parensStack.push(true);\r\n      };\r\n      Eval.prototype.outOfParenthesis = function () {\r\n          this.parensStack.pop();\r\n      };\r\n      Eval.prototype.isMathOn = function (op) {\r\n          if (!this.mathOn) {\r\n              return false;\r\n          }\r\n          if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n              return false;\r\n          }\r\n          if (this.math > Math$1.PARENS_DIVISION) {\r\n              return this.parensStack && this.parensStack.length;\r\n          }\r\n          return true;\r\n      };\r\n      Eval.prototype.pathRequiresRewrite = function (path) {\r\n          var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n          return isRelative(path);\r\n      };\r\n      Eval.prototype.rewritePath = function (path, rootpath) {\r\n          var newPath;\r\n          rootpath = rootpath || '';\r\n          newPath = this.normalizePath(rootpath + path);\r\n          // If a path was explicit relative and the rootpath was not an absolute path\r\n          // we must ensure that the new path is also explicit relative.\r\n          if (isPathLocalRelative(path) &&\r\n              isPathRelative(rootpath) &&\r\n              isPathLocalRelative(newPath) === false) {\r\n              newPath = \"./\" + newPath;\r\n          }\r\n          return newPath;\r\n      };\r\n      Eval.prototype.normalizePath = function (path) {\r\n          var segments = path.split('/').reverse();\r\n          var segment;\r\n          path = [];\r\n          while (segments.length !== 0) {\r\n              segment = segments.pop();\r\n              switch (segment) {\r\n                  case '.':\r\n                      break;\r\n                  case '..':\r\n                      if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                          path.push(segment);\r\n                      }\r\n                      else {\r\n                          path.pop();\r\n                      }\r\n                      break;\r\n                  default:\r\n                      path.push(segment);\r\n                      break;\r\n              }\r\n          }\r\n          return path.join('/');\r\n      };\r\n      return Eval;\r\n  }());\n\n  function makeRegistry(base) {\r\n      return {\r\n          _data: {},\r\n          add: function (name, func) {\r\n              // precautionary case conversion, as later querying of\r\n              // the registry by function-caller uses lower case as well.\r\n              name = name.toLowerCase();\r\n              if (this._data.hasOwnProperty(name)) ;\r\n              this._data[name] = func;\r\n          },\r\n          addMultiple: function (functions) {\r\n              var _this = this;\r\n              Object.keys(functions).forEach(function (name) {\r\n                  _this.add(name, functions[name]);\r\n              });\r\n          },\r\n          get: function (name) {\r\n              return this._data[name] || (base && base.get(name));\r\n          },\r\n          getLocalFunctions: function () {\r\n              return this._data;\r\n          },\r\n          inherit: function () {\r\n              return makeRegistry(this);\r\n          },\r\n          create: function (base) {\r\n              return makeRegistry(base);\r\n          }\r\n      };\r\n  }\r\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\r\n      eval: function () {\r\n          var v = this.value_;\r\n          var e = this.error_;\r\n          if (e) {\r\n              throw e;\r\n          }\r\n          if (v != null) {\r\n              return v ? Keyword.True : Keyword.False;\r\n          }\r\n      },\r\n      value: function (v) {\r\n          this.value_ = v;\r\n      },\r\n      error: function (e) {\r\n          this.error_ = e;\r\n      },\r\n      reset: function () {\r\n          this.value_ = this.error_ = null;\r\n      }\r\n  };\n\n  var Ruleset = /** @class */ (function (_super) {\r\n      __extends(Ruleset, _super);\r\n      function Ruleset(selectors, rules, strictImports, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.selectors = selectors;\r\n          _this.rules = rules;\r\n          _this._lookups = {};\r\n          _this._variables = null;\r\n          _this._properties = null;\r\n          _this.strictImports = strictImports;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.allowRoot = true;\r\n          _this.setParent(_this.selectors, _this);\r\n          _this.setParent(_this.rules, _this);\r\n          return _this;\r\n      }\r\n      Ruleset.prototype.isRulesetLike = function () {\r\n          return true;\r\n      };\r\n      Ruleset.prototype.accept = function (visitor) {\r\n          if (this.paths) {\r\n              this.paths = visitor.visitArray(this.paths, true);\r\n          }\r\n          else if (this.selectors) {\r\n              this.selectors = visitor.visitArray(this.selectors);\r\n          }\r\n          if (this.rules && this.rules.length) {\r\n              this.rules = visitor.visitArray(this.rules);\r\n          }\r\n      };\r\n      Ruleset.prototype.eval = function (context) {\r\n          var selectors;\r\n          var selCnt;\r\n          var selector;\r\n          var i;\r\n          var hasVariable;\r\n          var hasOnePassingSelector = false;\r\n          if (this.selectors && (selCnt = this.selectors.length)) {\r\n              selectors = new Array(selCnt);\r\n              defaultFunc.error({\r\n                  type: 'Syntax',\r\n                  message: 'it is currently only allowed in parametric mixin guards,'\r\n              });\r\n              for (i = 0; i < selCnt; i++) {\r\n                  selector = this.selectors[i].eval(context);\r\n                  for (var j = 0; j < selector.elements.length; j++) {\r\n                      if (selector.elements[j].isVariable) {\r\n                          hasVariable = true;\r\n                          break;\r\n                      }\r\n                  }\r\n                  selectors[i] = selector;\r\n                  if (selector.evaldCondition) {\r\n                      hasOnePassingSelector = true;\r\n                  }\r\n              }\r\n              if (hasVariable) {\r\n                  var toParseSelectors = new Array(selCnt);\r\n                  for (i = 0; i < selCnt; i++) {\r\n                      selector = selectors[i];\r\n                      toParseSelectors[i] = selector.toCSS(context);\r\n                  }\r\n                  this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                      if (result) {\r\n                          selectors = flattenArray(result);\r\n                      }\r\n                  });\r\n              }\r\n              defaultFunc.reset();\r\n          }\r\n          else {\r\n              hasOnePassingSelector = true;\r\n          }\r\n          var rules = this.rules ? copyArray(this.rules) : null;\r\n          var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n          var rule;\r\n          var subRule;\r\n          ruleset.originalRuleset = this;\r\n          ruleset.root = this.root;\r\n          ruleset.firstRoot = this.firstRoot;\r\n          ruleset.allowImports = this.allowImports;\r\n          if (this.debugInfo) {\r\n              ruleset.debugInfo = this.debugInfo;\r\n          }\r\n          if (!hasOnePassingSelector) {\r\n              rules.length = 0;\r\n          }\r\n          // inherit a function registry from the frames stack when possible;\r\n          // otherwise from the global registry\r\n          ruleset.functionRegistry = (function (frames) {\r\n              var i = 0;\r\n              var n = frames.length;\r\n              var found;\r\n              for (; i !== n; ++i) {\r\n                  found = frames[i].functionRegistry;\r\n                  if (found) {\r\n                      return found;\r\n                  }\r\n              }\r\n              return functionRegistry;\r\n          })(context.frames).inherit();\r\n          // push the current ruleset to the frames stack\r\n          var ctxFrames = context.frames;\r\n          ctxFrames.unshift(ruleset);\r\n          // currrent selectors\r\n          var ctxSelectors = context.selectors;\r\n          if (!ctxSelectors) {\r\n              context.selectors = ctxSelectors = [];\r\n          }\r\n          ctxSelectors.unshift(this.selectors);\r\n          // Evaluate imports\r\n          if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n              ruleset.evalImports(context);\r\n          }\r\n          // Store the frames around mixin definitions,\r\n          // so they can be evaluated like closures when the time comes.\r\n          var rsRules = ruleset.rules;\r\n          for (i = 0; (rule = rsRules[i]); i++) {\r\n              if (rule.evalFirst) {\r\n                  rsRules[i] = rule.eval(context);\r\n              }\r\n          }\r\n          var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n          // Evaluate mixin calls.\r\n          for (i = 0; (rule = rsRules[i]); i++) {\r\n              if (rule.type === 'MixinCall') {\r\n                  /* jshint loopfunc:true */\r\n                  rules = rule.eval(context).filter(function (r) {\r\n                      if ((r instanceof Declaration) && r.variable) {\r\n                          // do not pollute the scope if the variable is\r\n                          // already there. consider returning false here\r\n                          // but we need a way to \"return\" variable from mixins\r\n                          return !(ruleset.variable(r.name));\r\n                      }\r\n                      return true;\r\n                  });\r\n                  rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                  i += rules.length - 1;\r\n                  ruleset.resetCache();\r\n              }\r\n              else if (rule.type === 'VariableCall') {\r\n                  /* jshint loopfunc:true */\r\n                  rules = rule.eval(context).rules.filter(function (r) {\r\n                      if ((r instanceof Declaration) && r.variable) {\r\n                          // do not pollute the scope at all\r\n                          return false;\r\n                      }\r\n                      return true;\r\n                  });\r\n                  rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                  i += rules.length - 1;\r\n                  ruleset.resetCache();\r\n              }\r\n          }\r\n          // Evaluate everything else\r\n          for (i = 0; (rule = rsRules[i]); i++) {\r\n              if (!rule.evalFirst) {\r\n                  rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n              }\r\n          }\r\n          // Evaluate everything else\r\n          for (i = 0; (rule = rsRules[i]); i++) {\r\n              // for rulesets, check if it is a css guard and can be removed\r\n              if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                  // check if it can be folded in (e.g. & where)\r\n                  if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                      rsRules.splice(i--, 1);\r\n                      for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                          if (subRule instanceof Node) {\r\n                              subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                              if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                  rsRules.splice(++i, 0, subRule);\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          // Pop the stack\r\n          ctxFrames.shift();\r\n          ctxSelectors.shift();\r\n          if (context.mediaBlocks) {\r\n              for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                  context.mediaBlocks[i].bubbleSelectors(selectors);\r\n              }\r\n          }\r\n          return ruleset;\r\n      };\r\n      Ruleset.prototype.evalImports = function (context) {\r\n          var rules = this.rules;\r\n          var i;\r\n          var importRules;\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          for (i = 0; i < rules.length; i++) {\r\n              if (rules[i].type === 'Import') {\r\n                  importRules = rules[i].eval(context);\r\n                  if (importRules && (importRules.length || importRules.length === 0)) {\r\n                      rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                      i += importRules.length - 1;\r\n                  }\r\n                  else {\r\n                      rules.splice(i, 1, importRules);\r\n                  }\r\n                  this.resetCache();\r\n              }\r\n          }\r\n      };\r\n      Ruleset.prototype.makeImportant = function () {\r\n          var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n              if (r.makeImportant) {\r\n                  return r.makeImportant();\r\n              }\r\n              else {\r\n                  return r;\r\n              }\r\n          }), this.strictImports, this.visibilityInfo());\r\n          return result;\r\n      };\r\n      Ruleset.prototype.matchArgs = function (args) {\r\n          return !args || args.length === 0;\r\n      };\r\n      // lets you call a css selector with a guard\r\n      Ruleset.prototype.matchCondition = function (args, context) {\r\n          var lastSelector = this.selectors[this.selectors.length - 1];\r\n          if (!lastSelector.evaldCondition) {\r\n              return false;\r\n          }\r\n          if (lastSelector.condition &&\r\n              !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n              return false;\r\n          }\r\n          return true;\r\n      };\r\n      Ruleset.prototype.resetCache = function () {\r\n          this._rulesets = null;\r\n          this._variables = null;\r\n          this._properties = null;\r\n          this._lookups = {};\r\n      };\r\n      Ruleset.prototype.variables = function () {\r\n          if (!this._variables) {\r\n              this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                  if (r instanceof Declaration && r.variable === true) {\r\n                      hash[r.name] = r;\r\n                  }\r\n                  // when evaluating variables in an import statement, imports have not been eval'd\r\n                  // so we need to go inside import statements.\r\n                  // guard against root being a string (in the case of inlined less)\r\n                  if (r.type === 'Import' && r.root && r.root.variables) {\r\n                      var vars = r.root.variables();\r\n                      for (var name_1 in vars) {\r\n                          if (vars.hasOwnProperty(name_1)) {\r\n                              hash[name_1] = r.root.variable(name_1);\r\n                          }\r\n                      }\r\n                  }\r\n                  return hash;\r\n              }, {});\r\n          }\r\n          return this._variables;\r\n      };\r\n      Ruleset.prototype.properties = function () {\r\n          if (!this._properties) {\r\n              this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                  if (r instanceof Declaration && r.variable !== true) {\r\n                      var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                          r.name[0].value : r.name;\r\n                      // Properties don't overwrite as they can merge\r\n                      if (!hash[\"$\" + name_2]) {\r\n                          hash[\"$\" + name_2] = [r];\r\n                      }\r\n                      else {\r\n                          hash[\"$\" + name_2].push(r);\r\n                      }\r\n                  }\r\n                  return hash;\r\n              }, {});\r\n          }\r\n          return this._properties;\r\n      };\r\n      Ruleset.prototype.variable = function (name) {\r\n          var decl = this.variables()[name];\r\n          if (decl) {\r\n              return this.parseValue(decl);\r\n          }\r\n      };\r\n      Ruleset.prototype.property = function (name) {\r\n          var decl = this.properties()[name];\r\n          if (decl) {\r\n              return this.parseValue(decl);\r\n          }\r\n      };\r\n      Ruleset.prototype.lastDeclaration = function () {\r\n          for (var i = this.rules.length; i > 0; i--) {\r\n              var decl = this.rules[i - 1];\r\n              if (decl instanceof Declaration) {\r\n                  return this.parseValue(decl);\r\n              }\r\n          }\r\n      };\r\n      Ruleset.prototype.parseValue = function (toParse) {\r\n          var self = this;\r\n          function transformDeclaration(decl) {\r\n              if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                  if (typeof decl.value.value === 'string') {\r\n                      this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                          if (err) {\r\n                              decl.parsed = true;\r\n                          }\r\n                          if (result) {\r\n                              decl.value = result[0];\r\n                              decl.important = result[1] || '';\r\n                              decl.parsed = true;\r\n                          }\r\n                      });\r\n                  }\r\n                  else {\r\n                      decl.parsed = true;\r\n                  }\r\n                  return decl;\r\n              }\r\n              else {\r\n                  return decl;\r\n              }\r\n          }\r\n          if (!Array.isArray(toParse)) {\r\n              return transformDeclaration.call(self, toParse);\r\n          }\r\n          else {\r\n              var nodes_1 = [];\r\n              toParse.forEach(function (n) {\r\n                  nodes_1.push(transformDeclaration.call(self, n));\r\n              });\r\n              return nodes_1;\r\n          }\r\n      };\r\n      Ruleset.prototype.rulesets = function () {\r\n          if (!this.rules) {\r\n              return [];\r\n          }\r\n          var filtRules = [];\r\n          var rules = this.rules;\r\n          var i;\r\n          var rule;\r\n          for (i = 0; (rule = rules[i]); i++) {\r\n              if (rule.isRuleset) {\r\n                  filtRules.push(rule);\r\n              }\r\n          }\r\n          return filtRules;\r\n      };\r\n      Ruleset.prototype.prependRule = function (rule) {\r\n          var rules = this.rules;\r\n          if (rules) {\r\n              rules.unshift(rule);\r\n          }\r\n          else {\r\n              this.rules = [rule];\r\n          }\r\n          this.setParent(rule, this);\r\n      };\r\n      Ruleset.prototype.find = function (selector, self, filter) {\r\n          if (self === void 0) { self = this; }\r\n          var rules = [];\r\n          var match;\r\n          var foundMixins;\r\n          var key = selector.toCSS();\r\n          if (key in this._lookups) {\r\n              return this._lookups[key];\r\n          }\r\n          this.rulesets().forEach(function (rule) {\r\n              if (rule !== self) {\r\n                  for (var j = 0; j < rule.selectors.length; j++) {\r\n                      match = selector.match(rule.selectors[j]);\r\n                      if (match) {\r\n                          if (selector.elements.length > match) {\r\n                              if (!filter || filter(rule)) {\r\n                                  foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                  for (var i = 0; i < foundMixins.length; ++i) {\r\n                                      foundMixins[i].path.push(rule);\r\n                                  }\r\n                                  Array.prototype.push.apply(rules, foundMixins);\r\n                              }\r\n                          }\r\n                          else {\r\n                              rules.push({ rule: rule, path: [] });\r\n                          }\r\n                          break;\r\n                      }\r\n                  }\r\n              }\r\n          });\r\n          this._lookups[key] = rules;\r\n          return rules;\r\n      };\r\n      Ruleset.prototype.genCSS = function (context, output) {\r\n          var i;\r\n          var j;\r\n          var charsetRuleNodes = [];\r\n          var ruleNodes = [];\r\n          var // Line number debugging\r\n          debugInfo$1;\r\n          var rule;\r\n          var path;\r\n          context.tabLevel = (context.tabLevel || 0);\r\n          if (!this.root) {\r\n              context.tabLevel++;\r\n          }\r\n          var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n          var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n          var sep;\r\n          var charsetNodeIndex = 0;\r\n          var importNodeIndex = 0;\r\n          for (i = 0; (rule = this.rules[i]); i++) {\r\n              if (rule instanceof Comment) {\r\n                  if (importNodeIndex === i) {\r\n                      importNodeIndex++;\r\n                  }\r\n                  ruleNodes.push(rule);\r\n              }\r\n              else if (rule.isCharset && rule.isCharset()) {\r\n                  ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                  charsetNodeIndex++;\r\n                  importNodeIndex++;\r\n              }\r\n              else if (rule.type === 'Import') {\r\n                  ruleNodes.splice(importNodeIndex, 0, rule);\r\n                  importNodeIndex++;\r\n              }\r\n              else {\r\n                  ruleNodes.push(rule);\r\n              }\r\n          }\r\n          ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n          // If this is the root node, we don't render\r\n          // a selector, or {}.\r\n          if (!this.root) {\r\n              debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n              if (debugInfo$1) {\r\n                  output.add(debugInfo$1);\r\n                  output.add(tabSetStr);\r\n              }\r\n              var paths = this.paths;\r\n              var pathCnt = paths.length;\r\n              var pathSubCnt = void 0;\r\n              sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n              for (i = 0; i < pathCnt; i++) {\r\n                  path = paths[i];\r\n                  if (!(pathSubCnt = path.length)) {\r\n                      continue;\r\n                  }\r\n                  if (i > 0) {\r\n                      output.add(sep);\r\n                  }\r\n                  context.firstSelector = true;\r\n                  path[0].genCSS(context, output);\r\n                  context.firstSelector = false;\r\n                  for (j = 1; j < pathSubCnt; j++) {\r\n                      path[j].genCSS(context, output);\r\n                  }\r\n              }\r\n              output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n          }\r\n          // Compile rules and rulesets\r\n          for (i = 0; (rule = ruleNodes[i]); i++) {\r\n              if (i + 1 === ruleNodes.length) {\r\n                  context.lastRule = true;\r\n              }\r\n              var currentLastRule = context.lastRule;\r\n              if (rule.isRulesetLike(rule)) {\r\n                  context.lastRule = false;\r\n              }\r\n              if (rule.genCSS) {\r\n                  rule.genCSS(context, output);\r\n              }\r\n              else if (rule.value) {\r\n                  output.add(rule.value.toString());\r\n              }\r\n              context.lastRule = currentLastRule;\r\n              if (!context.lastRule && rule.isVisible()) {\r\n                  output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n              }\r\n              else {\r\n                  context.lastRule = false;\r\n              }\r\n          }\r\n          if (!this.root) {\r\n              output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n              context.tabLevel--;\r\n          }\r\n          if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n              output.add('\\n');\r\n          }\r\n      };\r\n      Ruleset.prototype.joinSelectors = function (paths, context, selectors) {\r\n          for (var s = 0; s < selectors.length; s++) {\r\n              this.joinSelector(paths, context, selectors[s]);\r\n          }\r\n      };\r\n      Ruleset.prototype.joinSelector = function (paths, context, selector) {\r\n          function createParenthesis(elementsToPak, originalElement) {\r\n              var replacementParen;\r\n              var j;\r\n              if (elementsToPak.length === 0) {\r\n                  replacementParen = new Paren(elementsToPak[0]);\r\n              }\r\n              else {\r\n                  var insideParent = new Array(elementsToPak.length);\r\n                  for (j = 0; j < elementsToPak.length; j++) {\r\n                      insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                  }\r\n                  replacementParen = new Paren(new Selector(insideParent));\r\n              }\r\n              return replacementParen;\r\n          }\r\n          function createSelector(containedElement, originalElement) {\r\n              var element;\r\n              var selector;\r\n              element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n              selector = new Selector([element]);\r\n              return selector;\r\n          }\r\n          // joins selector path from `beginningPath` with selector path in `addPath`\r\n          // `replacedElement` contains element that is being replaced by `addPath`\r\n          // returns concatenated path\r\n          function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n              var newSelectorPath;\r\n              var lastSelector;\r\n              var newJoinedSelector;\r\n              // our new selector path\r\n              newSelectorPath = [];\r\n              // construct the joined selector - if & is the first thing this will be empty,\r\n              // if not newJoinedSelector will be the last set of elements in the selector\r\n              if (beginningPath.length > 0) {\r\n                  newSelectorPath = copyArray(beginningPath);\r\n                  lastSelector = newSelectorPath.pop();\r\n                  newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n              }\r\n              else {\r\n                  newJoinedSelector = originalSelector.createDerived([]);\r\n              }\r\n              if (addPath.length > 0) {\r\n                  // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                  // that is valid without anything in front of it\r\n                  // so if the & does not have a combinator that is \"\" or \" \" then\r\n                  // and there is a combinator on the parent, then grab that.\r\n                  // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                  var combinator = replacedElement.combinator;\r\n                  var parentEl = addPath[0].elements[0];\r\n                  if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                      combinator = parentEl.combinator;\r\n                  }\r\n                  // join the elements so far with the first part of the parent\r\n                  newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                  newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n              }\r\n              // now add the joined selector - but only if it is not empty\r\n              if (newJoinedSelector.elements.length !== 0) {\r\n                  newSelectorPath.push(newJoinedSelector);\r\n              }\r\n              // put together the parent selectors after the join (e.g. the rest of the parent)\r\n              if (addPath.length > 1) {\r\n                  var restOfPath = addPath.slice(1);\r\n                  restOfPath = restOfPath.map(function (selector) { return selector.createDerived(selector.elements, []); });\r\n                  newSelectorPath = newSelectorPath.concat(restOfPath);\r\n              }\r\n              return newSelectorPath;\r\n          }\r\n          // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n          // `replacedElement` contains element that is being replaced by `addPath`\r\n          // returns array with all concatenated paths\r\n          function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n              var j;\r\n              for (j = 0; j < beginningPath.length; j++) {\r\n                  var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                  result.push(newSelectorPath);\r\n              }\r\n              return result;\r\n          }\r\n          function mergeElementsOnToSelectors(elements, selectors) {\r\n              var i;\r\n              var sel;\r\n              if (elements.length === 0) {\r\n                  return;\r\n              }\r\n              if (selectors.length === 0) {\r\n                  selectors.push([new Selector(elements)]);\r\n                  return;\r\n              }\r\n              for (i = 0; (sel = selectors[i]); i++) {\r\n                  // if the previous thing in sel is a parent this needs to join on to it\r\n                  if (sel.length > 0) {\r\n                      sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                  }\r\n                  else {\r\n                      sel.push(new Selector(elements));\r\n                  }\r\n              }\r\n          }\r\n          // replace all parent selectors inside `inSelector` by content of `context` array\r\n          // resulting selectors are returned inside `paths` array\r\n          // returns true if `inSelector` contained at least one parent selector\r\n          function replaceParentSelector(paths, context, inSelector) {\r\n              // The paths are [[Selector]]\r\n              // The first list is a list of comma separated selectors\r\n              // The inner list is a list of inheritance separated selectors\r\n              // e.g.\r\n              // .a, .b {\r\n              //   .c {\r\n              //   }\r\n              // }\r\n              // == [[.a] [.c]] [[.b] [.c]]\r\n              //\r\n              var i;\r\n              var j;\r\n              var k;\r\n              var currentElements;\r\n              var newSelectors;\r\n              var selectorsMultiplied;\r\n              var sel;\r\n              var el;\r\n              var hadParentSelector = false;\r\n              var length;\r\n              var lastSelector;\r\n              function findNestedSelector(element) {\r\n                  var maybeSelector;\r\n                  if (!(element.value instanceof Paren)) {\r\n                      return null;\r\n                  }\r\n                  maybeSelector = element.value.value;\r\n                  if (!(maybeSelector instanceof Selector)) {\r\n                      return null;\r\n                  }\r\n                  return maybeSelector;\r\n              }\r\n              // the elements from the current selector so far\r\n              currentElements = [];\r\n              // the current list of new selectors to add to the path.\r\n              // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n              // by the parents\r\n              newSelectors = [\r\n                  []\r\n              ];\r\n              for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                  // non parent reference elements just get added\r\n                  if (el.value !== '&') {\r\n                      var nestedSelector = findNestedSelector(el);\r\n                      if (nestedSelector != null) {\r\n                          // merge the current list of non parent selector elements\r\n                          // on to the current list of selectors to add\r\n                          mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                          var nestedPaths = [];\r\n                          var replaced = void 0;\r\n                          var replacedNewSelectors = [];\r\n                          replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                          hadParentSelector = hadParentSelector || replaced;\r\n                          // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                          for (k = 0; k < nestedPaths.length; k++) {\r\n                              var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                              addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                          }\r\n                          newSelectors = replacedNewSelectors;\r\n                          currentElements = [];\r\n                      }\r\n                      else {\r\n                          currentElements.push(el);\r\n                      }\r\n                  }\r\n                  else {\r\n                      hadParentSelector = true;\r\n                      // the new list of selectors to add\r\n                      selectorsMultiplied = [];\r\n                      // merge the current list of non parent selector elements\r\n                      // on to the current list of selectors to add\r\n                      mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                      // loop through our current selectors\r\n                      for (j = 0; j < newSelectors.length; j++) {\r\n                          sel = newSelectors[j];\r\n                          // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                          // whether there are parents or not\r\n                          if (context.length === 0) {\r\n                              // the combinator used on el should now be applied to the next element instead so that\r\n                              // it is not lost\r\n                              if (sel.length > 0) {\r\n                                  sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                              }\r\n                              selectorsMultiplied.push(sel);\r\n                          }\r\n                          else {\r\n                              // and the parent selectors\r\n                              for (k = 0; k < context.length; k++) {\r\n                                  // We need to put the current selectors\r\n                                  // then join the last selector's elements on to the parents selectors\r\n                                  var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                  // add that to our new set of selectors\r\n                                  selectorsMultiplied.push(newSelectorPath);\r\n                              }\r\n                          }\r\n                      }\r\n                      // our new selectors has been multiplied, so reset the state\r\n                      newSelectors = selectorsMultiplied;\r\n                      currentElements = [];\r\n                  }\r\n              }\r\n              // if we have any elements left over (e.g. .a& .b == .b)\r\n              // add them on to all the current selectors\r\n              mergeElementsOnToSelectors(currentElements, newSelectors);\r\n              for (i = 0; i < newSelectors.length; i++) {\r\n                  length = newSelectors[i].length;\r\n                  if (length > 0) {\r\n                      paths.push(newSelectors[i]);\r\n                      lastSelector = newSelectors[i][length - 1];\r\n                      newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                  }\r\n              }\r\n              return hadParentSelector;\r\n          }\r\n          function deriveSelector(visibilityInfo, deriveFrom) {\r\n              var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n              newSelector.copyVisibilityInfo(visibilityInfo);\r\n              return newSelector;\r\n          }\r\n          // joinSelector code follows\r\n          var i;\r\n          var newPaths;\r\n          var hadParentSelector;\r\n          newPaths = [];\r\n          hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n          if (!hadParentSelector) {\r\n              if (context.length > 0) {\r\n                  newPaths = [];\r\n                  for (i = 0; i < context.length; i++) {\r\n                      var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                      concatenated.push(selector);\r\n                      newPaths.push(concatenated);\r\n                  }\r\n              }\r\n              else {\r\n                  newPaths = [[selector]];\r\n              }\r\n          }\r\n          for (i = 0; i < newPaths.length; i++) {\r\n              paths.push(newPaths[i]);\r\n          }\r\n      };\r\n      return Ruleset;\r\n  }(Node));\r\n  Ruleset.prototype.type = 'Ruleset';\r\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule = /** @class */ (function (_super) {\r\n      __extends(AtRule, _super);\r\n      function AtRule(name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          var i;\r\n          _this.name = name;\r\n          _this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n          if (rules) {\r\n              if (Array.isArray(rules)) {\r\n                  _this.rules = rules;\r\n              }\r\n              else {\r\n                  _this.rules = [rules];\r\n                  _this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n              }\r\n              for (i = 0; i < _this.rules.length; i++) {\r\n                  _this.rules[i].allowImports = true;\r\n              }\r\n              _this.setParent(_this.rules, _this);\r\n          }\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.debugInfo = debugInfo;\r\n          _this.isRooted = isRooted || false;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.allowRoot = true;\r\n          return _this;\r\n      }\r\n      AtRule.prototype.accept = function (visitor) {\r\n          var value = this.value;\r\n          var rules = this.rules;\r\n          if (rules) {\r\n              this.rules = visitor.visitArray(rules);\r\n          }\r\n          if (value) {\r\n              this.value = visitor.visit(value);\r\n          }\r\n      };\r\n      AtRule.prototype.isRulesetLike = function () {\r\n          return this.rules || !this.isCharset();\r\n      };\r\n      AtRule.prototype.isCharset = function () {\r\n          return '@charset' === this.name;\r\n      };\r\n      AtRule.prototype.genCSS = function (context, output) {\r\n          var value = this.value;\r\n          var rules = this.rules;\r\n          output.add(this.name, this.fileInfo(), this.getIndex());\r\n          if (value) {\r\n              output.add(' ');\r\n              value.genCSS(context, output);\r\n          }\r\n          if (rules) {\r\n              this.outputRuleset(context, output, rules);\r\n          }\r\n          else {\r\n              output.add(';');\r\n          }\r\n      };\r\n      AtRule.prototype.eval = function (context) {\r\n          var mediaPathBackup;\r\n          var mediaBlocksBackup;\r\n          var value = this.value;\r\n          var rules = this.rules;\r\n          // media stored inside other atrule should not bubble over it\r\n          // backpup media bubbling information\r\n          mediaPathBackup = context.mediaPath;\r\n          mediaBlocksBackup = context.mediaBlocks;\r\n          // deleted media bubbling information\r\n          context.mediaPath = [];\r\n          context.mediaBlocks = [];\r\n          if (value) {\r\n              value = value.eval(context);\r\n          }\r\n          if (rules) {\r\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n              rules = [rules[0].eval(context)];\r\n              rules[0].root = true;\r\n          }\r\n          // restore media bubbling information\r\n          context.mediaPath = mediaPathBackup;\r\n          context.mediaBlocks = mediaBlocksBackup;\r\n          return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n      };\r\n      AtRule.prototype.variable = function (name) {\r\n          if (this.rules) {\r\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n              return Ruleset.prototype.variable.call(this.rules[0], name);\r\n          }\r\n      };\r\n      AtRule.prototype.find = function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          if (this.rules) {\r\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n              return Ruleset.prototype.find.apply(this.rules[0], args);\r\n          }\r\n      };\r\n      AtRule.prototype.rulesets = function () {\r\n          if (this.rules) {\r\n              // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n              return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n          }\r\n      };\r\n      AtRule.prototype.outputRuleset = function (context, output, rules) {\r\n          var ruleCnt = rules.length;\r\n          var i;\r\n          context.tabLevel = (context.tabLevel | 0) + 1;\r\n          // Compressed\r\n          if (context.compress) {\r\n              output.add('{');\r\n              for (i = 0; i < ruleCnt; i++) {\r\n                  rules[i].genCSS(context, output);\r\n              }\r\n              output.add('}');\r\n              context.tabLevel--;\r\n              return;\r\n          }\r\n          // Non-compressed\r\n          var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  ');\r\n          var tabRuleStr = tabSetStr + \"  \";\r\n          if (!ruleCnt) {\r\n              output.add(\" {\" + tabSetStr + \"}\");\r\n          }\r\n          else {\r\n              output.add(\" {\" + tabRuleStr);\r\n              rules[0].genCSS(context, output);\r\n              for (i = 1; i < ruleCnt; i++) {\r\n                  output.add(tabRuleStr);\r\n                  rules[i].genCSS(context, output);\r\n              }\r\n              output.add(tabSetStr + \"}\");\r\n          }\r\n          context.tabLevel--;\r\n      };\r\n      return AtRule;\r\n  }(Node));\r\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset = /** @class */ (function (_super) {\r\n      __extends(DetachedRuleset, _super);\r\n      function DetachedRuleset(ruleset, frames) {\r\n          var _this = _super.call(this) || this;\r\n          _this.ruleset = ruleset;\r\n          _this.frames = frames;\r\n          _this.setParent(_this.ruleset, _this);\r\n          return _this;\r\n      }\r\n      DetachedRuleset.prototype.accept = function (visitor) {\r\n          this.ruleset = visitor.visit(this.ruleset);\r\n      };\r\n      DetachedRuleset.prototype.eval = function (context) {\r\n          var frames = this.frames || copyArray(context.frames);\r\n          return new DetachedRuleset(this.ruleset, frames);\r\n      };\r\n      DetachedRuleset.prototype.callEval = function (context) {\r\n          return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n      };\r\n      return DetachedRuleset;\r\n  }(Node));\r\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\r\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit = /** @class */ (function (_super) {\r\n      __extends(Unit, _super);\r\n      function Unit(numerator, denominator, backupUnit) {\r\n          var _this = _super.call(this) || this;\r\n          _this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n          _this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n          if (backupUnit) {\r\n              _this.backupUnit = backupUnit;\r\n          }\r\n          else if (numerator && numerator.length) {\r\n              _this.backupUnit = numerator[0];\r\n          }\r\n          return _this;\r\n      }\r\n      Unit.prototype.clone = function () {\r\n          return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n      };\r\n      Unit.prototype.genCSS = function (context, output) {\r\n          // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n          var strictUnits = context && context.strictUnits;\r\n          if (this.numerator.length === 1) {\r\n              output.add(this.numerator[0]); // the ideal situation\r\n          }\r\n          else if (!strictUnits && this.backupUnit) {\r\n              output.add(this.backupUnit);\r\n          }\r\n          else if (!strictUnits && this.denominator.length) {\r\n              output.add(this.denominator[0]);\r\n          }\r\n      };\r\n      Unit.prototype.toString = function () {\r\n          var i;\r\n          var returnStr = this.numerator.join('*');\r\n          for (i = 0; i < this.denominator.length; i++) {\r\n              returnStr += \"/\" + this.denominator[i];\r\n          }\r\n          return returnStr;\r\n      };\r\n      Unit.prototype.compare = function (other) {\r\n          return this.is(other.toString()) ? 0 : undefined;\r\n      };\r\n      Unit.prototype.is = function (unitString) {\r\n          return this.toString().toUpperCase() === unitString.toUpperCase();\r\n      };\r\n      Unit.prototype.isLength = function () {\r\n          return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n      };\r\n      Unit.prototype.isEmpty = function () {\r\n          return this.numerator.length === 0 && this.denominator.length === 0;\r\n      };\r\n      Unit.prototype.isSingular = function () {\r\n          return this.numerator.length <= 1 && this.denominator.length === 0;\r\n      };\r\n      Unit.prototype.map = function (callback) {\r\n          var i;\r\n          for (i = 0; i < this.numerator.length; i++) {\r\n              this.numerator[i] = callback(this.numerator[i], false);\r\n          }\r\n          for (i = 0; i < this.denominator.length; i++) {\r\n              this.denominator[i] = callback(this.denominator[i], true);\r\n          }\r\n      };\r\n      Unit.prototype.usedUnits = function () {\r\n          var group;\r\n          var result = {};\r\n          var mapUnit;\r\n          var groupName;\r\n          mapUnit = function (atomicUnit) {\r\n              /* jshint loopfunc:true */\r\n              if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                  result[groupName] = atomicUnit;\r\n              }\r\n              return atomicUnit;\r\n          };\r\n          for (groupName in unitConversions) {\r\n              if (unitConversions.hasOwnProperty(groupName)) {\r\n                  group = unitConversions[groupName];\r\n                  this.map(mapUnit);\r\n              }\r\n          }\r\n          return result;\r\n      };\r\n      Unit.prototype.cancel = function () {\r\n          var counter = {};\r\n          var atomicUnit;\r\n          var i;\r\n          for (i = 0; i < this.numerator.length; i++) {\r\n              atomicUnit = this.numerator[i];\r\n              counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n          }\r\n          for (i = 0; i < this.denominator.length; i++) {\r\n              atomicUnit = this.denominator[i];\r\n              counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n          }\r\n          this.numerator = [];\r\n          this.denominator = [];\r\n          for (atomicUnit in counter) {\r\n              if (counter.hasOwnProperty(atomicUnit)) {\r\n                  var count = counter[atomicUnit];\r\n                  if (count > 0) {\r\n                      for (i = 0; i < count; i++) {\r\n                          this.numerator.push(atomicUnit);\r\n                      }\r\n                  }\r\n                  else if (count < 0) {\r\n                      for (i = 0; i < -count; i++) {\r\n                          this.denominator.push(atomicUnit);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          this.numerator.sort();\r\n          this.denominator.sort();\r\n      };\r\n      return Unit;\r\n  }(Node));\r\n  Unit.prototype.type = 'Unit';\n\n  //\r\n  // A number with a unit\r\n  //\r\n  var Dimension = /** @class */ (function (_super) {\r\n      __extends(Dimension, _super);\r\n      function Dimension(value, unit) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = parseFloat(value);\r\n          if (isNaN(_this.value)) {\r\n              throw new Error('Dimension is not a number.');\r\n          }\r\n          _this.unit = (unit && unit instanceof Unit) ? unit :\r\n              new Unit(unit ? [unit] : undefined);\r\n          _this.setParent(_this.unit, _this);\r\n          return _this;\r\n      }\r\n      Dimension.prototype.accept = function (visitor) {\r\n          this.unit = visitor.visit(this.unit);\r\n      };\r\n      Dimension.prototype.eval = function (context) {\r\n          return this;\r\n      };\r\n      Dimension.prototype.toColor = function () {\r\n          return new Color([this.value, this.value, this.value]);\r\n      };\r\n      Dimension.prototype.genCSS = function (context, output) {\r\n          if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n              throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n          }\r\n          var value = this.fround(context, this.value);\r\n          var strValue = String(value);\r\n          if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n              // would be output 1e-6 etc.\r\n              strValue = value.toFixed(20).replace(/0+$/, '');\r\n          }\r\n          if (context && context.compress) {\r\n              // Zero values doesn't need a unit\r\n              if (value === 0 && this.unit.isLength()) {\r\n                  output.add(strValue);\r\n                  return;\r\n              }\r\n              // Float values doesn't need a leading zero\r\n              if (value > 0 && value < 1) {\r\n                  strValue = (strValue).substr(1);\r\n              }\r\n          }\r\n          output.add(strValue);\r\n          this.unit.genCSS(context, output);\r\n      };\r\n      // In an operation between two Dimensions,\r\n      // we default to the first Dimension's unit,\r\n      // so `1px + 2` will yield `3px`.\r\n      Dimension.prototype.operate = function (context, op, other) {\r\n          /* jshint noempty:false */\r\n          var value = this._operate(context, op, this.value, other.value);\r\n          var unit = this.unit.clone();\r\n          if (op === '+' || op === '-') {\r\n              if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                  unit = other.unit.clone();\r\n                  if (this.unit.backupUnit) {\r\n                      unit.backupUnit = this.unit.backupUnit;\r\n                  }\r\n              }\r\n              else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n              else {\r\n                  other = other.convertTo(this.unit.usedUnits());\r\n                  if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                      throw new Error(\"Incompatible units. Change the units or use the unit function. \" +\r\n                          (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                  }\r\n                  value = this._operate(context, op, this.value, other.value);\r\n              }\r\n          }\r\n          else if (op === '*') {\r\n              unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n              unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n              unit.cancel();\r\n          }\r\n          else if (op === '/') {\r\n              unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n              unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n              unit.cancel();\r\n          }\r\n          return new Dimension(value, unit);\r\n      };\r\n      Dimension.prototype.compare = function (other) {\r\n          var a;\r\n          var b;\r\n          if (!(other instanceof Dimension)) {\r\n              return undefined;\r\n          }\r\n          if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n              a = this;\r\n              b = other;\r\n          }\r\n          else {\r\n              a = this.unify();\r\n              b = other.unify();\r\n              if (a.unit.compare(b.unit) !== 0) {\r\n                  return undefined;\r\n              }\r\n          }\r\n          return Node.numericCompare(a.value, b.value);\r\n      };\r\n      Dimension.prototype.unify = function () {\r\n          return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n      };\r\n      Dimension.prototype.convertTo = function (conversions) {\r\n          var value = this.value;\r\n          var unit = this.unit.clone();\r\n          var i;\r\n          var groupName;\r\n          var group;\r\n          var targetUnit;\r\n          var derivedConversions = {};\r\n          var applyUnit;\r\n          if (typeof conversions === 'string') {\r\n              for (i in unitConversions) {\r\n                  if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                      derivedConversions = {};\r\n                      derivedConversions[i] = conversions;\r\n                  }\r\n              }\r\n              conversions = derivedConversions;\r\n          }\r\n          applyUnit = function (atomicUnit, denominator) {\r\n              /* jshint loopfunc:true */\r\n              if (group.hasOwnProperty(atomicUnit)) {\r\n                  if (denominator) {\r\n                      value = value / (group[atomicUnit] / group[targetUnit]);\r\n                  }\r\n                  else {\r\n                      value = value * (group[atomicUnit] / group[targetUnit]);\r\n                  }\r\n                  return targetUnit;\r\n              }\r\n              return atomicUnit;\r\n          };\r\n          for (groupName in conversions) {\r\n              if (conversions.hasOwnProperty(groupName)) {\r\n                  targetUnit = conversions[groupName];\r\n                  group = unitConversions[groupName];\r\n                  unit.map(applyUnit);\r\n              }\r\n          }\r\n          unit.cancel();\r\n          return new Dimension(value, unit);\r\n      };\r\n      return Dimension;\r\n  }(Node));\r\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\r\n  var Operation = /** @class */ (function (_super) {\r\n      __extends(Operation, _super);\r\n      function Operation(op, operands, isSpaced) {\r\n          var _this = _super.call(this) || this;\r\n          _this.op = op.trim();\r\n          _this.operands = operands;\r\n          _this.isSpaced = isSpaced;\r\n          return _this;\r\n      }\r\n      Operation.prototype.accept = function (visitor) {\r\n          this.operands = visitor.visitArray(this.operands);\r\n      };\r\n      Operation.prototype.eval = function (context) {\r\n          var a = this.operands[0].eval(context);\r\n          var b = this.operands[1].eval(context);\r\n          var op;\r\n          if (context.isMathOn(this.op)) {\r\n              op = this.op === './' ? '/' : this.op;\r\n              if (a instanceof Dimension && b instanceof Color) {\r\n                  a = a.toColor();\r\n              }\r\n              if (b instanceof Dimension && a instanceof Color) {\r\n                  b = b.toColor();\r\n              }\r\n              if (!a.operate) {\r\n                  if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                      return new Operation(this.op, [a, b], this.isSpaced);\r\n                  }\r\n                  throw { type: 'Operation',\r\n                      message: 'Operation on an invalid type' };\r\n              }\r\n              return a.operate(context, op, b);\r\n          }\r\n          else {\r\n              return new Operation(this.op, [a, b], this.isSpaced);\r\n          }\r\n      };\r\n      Operation.prototype.genCSS = function (context, output) {\r\n          this.operands[0].genCSS(context, output);\r\n          if (this.isSpaced) {\r\n              output.add(' ');\r\n          }\r\n          output.add(this.op);\r\n          if (this.isSpaced) {\r\n              output.add(' ');\r\n          }\r\n          this.operands[1].genCSS(context, output);\r\n      };\r\n      return Operation;\r\n  }(Node));\r\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\r\n  var Expression = /** @class */ (function (_super) {\r\n      __extends(Expression, _super);\r\n      function Expression(value, noSpacing) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = value;\r\n          _this.noSpacing = noSpacing;\r\n          if (!value) {\r\n              throw new Error('Expression requires an array parameter');\r\n          }\r\n          return _this;\r\n      }\r\n      Expression.prototype.accept = function (visitor) {\r\n          this.value = visitor.visitArray(this.value);\r\n      };\r\n      Expression.prototype.eval = function (context) {\r\n          var returnValue;\r\n          var mathOn = context.isMathOn();\r\n          var inParenthesis = this.parens &&\r\n              (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\r\n          var doubleParen = false;\r\n          if (inParenthesis) {\r\n              context.inParenthesis();\r\n          }\r\n          if (this.value.length > 1) {\r\n              returnValue = new Expression(this.value.map(function (e) {\r\n                  if (!e.eval) {\r\n                      return e;\r\n                  }\r\n                  return e.eval(context);\r\n              }), this.noSpacing);\r\n          }\r\n          else if (this.value.length === 1) {\r\n              if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                  doubleParen = true;\r\n              }\r\n              returnValue = this.value[0].eval(context);\r\n          }\r\n          else {\r\n              returnValue = this;\r\n          }\r\n          if (inParenthesis) {\r\n              context.outOfParenthesis();\r\n          }\r\n          if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n              && (!(returnValue instanceof Dimension))) {\r\n              returnValue = new Paren(returnValue);\r\n          }\r\n          return returnValue;\r\n      };\r\n      Expression.prototype.genCSS = function (context, output) {\r\n          for (var i = 0; i < this.value.length; i++) {\r\n              this.value[i].genCSS(context, output);\r\n              if (!this.noSpacing && i + 1 < this.value.length) {\r\n                  output.add(' ');\r\n              }\r\n          }\r\n      };\r\n      Expression.prototype.throwAwayComments = function () {\r\n          this.value = this.value.filter(function (v) { return !(v instanceof Comment); });\r\n      };\r\n      return Expression;\r\n  }(Node));\r\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller = /** @class */ (function () {\r\n      function functionCaller(name, context, index, currentFileInfo) {\r\n          this.name = name.toLowerCase();\r\n          this.index = index;\r\n          this.context = context;\r\n          this.currentFileInfo = currentFileInfo;\r\n          this.func = context.frames[0].functionRegistry.get(this.name);\r\n      }\r\n      functionCaller.prototype.isValid = function () {\r\n          return Boolean(this.func);\r\n      };\r\n      functionCaller.prototype.call = function (args) {\r\n          var _this = this;\r\n          var evalArgs = this.func.evalArgs;\r\n          if (evalArgs !== false) {\r\n              args = args.map(function (a) { return a.eval(_this.context); });\r\n          }\r\n          // This code is terrible and should be replaced as per this issue...\r\n          // https://github.com/less/less.js/issues/2477\r\n          if (Array.isArray(args)) {\r\n              args = args.filter(function (item) {\r\n                  if (item.type === 'Comment') {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              })\r\n                  .map(function (item) {\r\n                  if (item.type === 'Expression') {\r\n                      var subNodes = item.value.filter(function (item) {\r\n                          if (item.type === 'Comment') {\r\n                              return false;\r\n                          }\r\n                          return true;\r\n                      });\r\n                      if (subNodes.length === 1) {\r\n                          return subNodes[0];\r\n                      }\r\n                      else {\r\n                          return new Expression(subNodes);\r\n                      }\r\n                  }\r\n                  return item;\r\n              });\r\n          }\r\n          if (evalArgs === false) {\r\n              return this.func.apply(this, __spreadArrays([this.context], args));\r\n          }\r\n          return this.func.apply(this, args);\r\n      };\r\n      return functionCaller;\r\n  }());\n\n  //\r\n  // A function call node.\r\n  //\r\n  var Call = /** @class */ (function (_super) {\r\n      __extends(Call, _super);\r\n      function Call(name, args, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.name = name;\r\n          _this.args = args;\r\n          _this.calc = name === 'calc';\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          return _this;\r\n      }\r\n      Call.prototype.accept = function (visitor) {\r\n          if (this.args) {\r\n              this.args = visitor.visitArray(this.args);\r\n          }\r\n      };\r\n      //\r\n      // When evaluating a function call,\r\n      // we either find the function in the functionRegistry,\r\n      // in which case we call it, passing the  evaluated arguments,\r\n      // if this returns null or we cannot find the function, we\r\n      // simply print it out as it appeared originally [2].\r\n      //\r\n      // The reason why we evaluate the arguments, is in the case where\r\n      // we try to pass a variable to a function, like: `saturate(@color)`.\r\n      // The function should receive the value, not the variable.\r\n      //\r\n      Call.prototype.eval = function (context) {\r\n          var _this = this;\r\n          /**\r\n           * Turn off math for calc(), and switch back on for evaluating nested functions\r\n           */\r\n          var currentMathContext = context.mathOn;\r\n          context.mathOn = !this.calc;\r\n          if (this.calc || context.inCalc) {\r\n              context.enterCalc();\r\n          }\r\n          var exitCalc = function () {\r\n              if (_this.calc || context.inCalc) {\r\n                  context.exitCalc();\r\n              }\r\n              context.mathOn = currentMathContext;\r\n          };\r\n          var result;\r\n          var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n          if (funcCaller.isValid()) {\r\n              try {\r\n                  result = funcCaller.call(this.args);\r\n                  exitCalc();\r\n              }\r\n              catch (e) {\r\n                  if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                      throw e;\r\n                  }\r\n                  throw {\r\n                      type: e.type || 'Runtime',\r\n                      message: \"error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                      index: this.getIndex(),\r\n                      filename: this.fileInfo().filename,\r\n                      line: e.lineNumber,\r\n                      column: e.columnNumber\r\n                  };\r\n              }\r\n              if (result !== null && result !== undefined) {\r\n                  // Results that that are not nodes are cast as Anonymous nodes\r\n                  // Falsy values or booleans are returned as empty nodes\r\n                  if (!(result instanceof Node)) {\r\n                      if (!result || result === true) {\r\n                          result = new Anonymous(null);\r\n                      }\r\n                      else {\r\n                          result = new Anonymous(result.toString());\r\n                      }\r\n                  }\r\n                  result._index = this._index;\r\n                  result._fileInfo = this._fileInfo;\r\n                  return result;\r\n              }\r\n          }\r\n          var args = this.args.map(function (a) { return a.eval(context); });\r\n          exitCalc();\r\n          return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n      };\r\n      Call.prototype.genCSS = function (context, output) {\r\n          output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n          for (var i = 0; i < this.args.length; i++) {\r\n              this.args[i].genCSS(context, output);\r\n              if (i + 1 < this.args.length) {\r\n                  output.add(', ');\r\n              }\r\n          }\r\n          output.add(')');\r\n      };\r\n      return Call;\r\n  }(Node));\r\n  Call.prototype.type = 'Call';\n\n  var Variable = /** @class */ (function (_super) {\r\n      __extends(Variable, _super);\r\n      function Variable(name, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.name = name;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          return _this;\r\n      }\r\n      Variable.prototype.eval = function (context) {\r\n          var variable;\r\n          var name = this.name;\r\n          if (name.indexOf('@@') === 0) {\r\n              name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n          }\r\n          if (this.evaluating) {\r\n              throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n          this.evaluating = true;\r\n          variable = this.find(context.frames, function (frame) {\r\n              var v = frame.variable(name);\r\n              if (v) {\r\n                  if (v.important) {\r\n                      var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                      importantScope.important = v.important;\r\n                  }\r\n                  // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                  if (context.inCalc) {\r\n                      return (new Call('_SELF', [v.value])).eval(context);\r\n                  }\r\n                  else {\r\n                      return v.value.eval(context);\r\n                  }\r\n              }\r\n          });\r\n          if (variable) {\r\n              this.evaluating = false;\r\n              return variable;\r\n          }\r\n          else {\r\n              throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n      };\r\n      Variable.prototype.find = function (obj, fun) {\r\n          for (var i = 0, r = void 0; i < obj.length; i++) {\r\n              r = fun.call(obj, obj[i]);\r\n              if (r) {\r\n                  return r;\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      return Variable;\r\n  }(Node));\r\n  Variable.prototype.type = 'Variable';\n\n  var Property = /** @class */ (function (_super) {\r\n      __extends(Property, _super);\r\n      function Property(name, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.name = name;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          return _this;\r\n      }\r\n      Property.prototype.eval = function (context) {\r\n          var property;\r\n          var name = this.name;\r\n          // TODO: shorten this reference\r\n          var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n          if (this.evaluating) {\r\n              throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n          this.evaluating = true;\r\n          property = this.find(context.frames, function (frame) {\r\n              var v;\r\n              var vArr = frame.property(name);\r\n              if (vArr) {\r\n                  for (var i = 0; i < vArr.length; i++) {\r\n                      v = vArr[i];\r\n                      vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                  }\r\n                  mergeRules(vArr);\r\n                  v = vArr[vArr.length - 1];\r\n                  if (v.important) {\r\n                      var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                      importantScope.important = v.important;\r\n                  }\r\n                  v = v.value.eval(context);\r\n                  return v;\r\n              }\r\n          });\r\n          if (property) {\r\n              this.evaluating = false;\r\n              return property;\r\n          }\r\n          else {\r\n              throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n                  index: this.index };\r\n          }\r\n      };\r\n      Property.prototype.find = function (obj, fun) {\r\n          for (var i = 0, r = void 0; i < obj.length; i++) {\r\n              r = fun.call(obj, obj[i]);\r\n              if (r) {\r\n                  return r;\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      return Property;\r\n  }(Node));\r\n  Property.prototype.type = 'Property';\n\n  var Attribute = /** @class */ (function (_super) {\r\n      __extends(Attribute, _super);\r\n      function Attribute(key, op, value) {\r\n          var _this = _super.call(this) || this;\r\n          _this.key = key;\r\n          _this.op = op;\r\n          _this.value = value;\r\n          return _this;\r\n      }\r\n      Attribute.prototype.eval = function (context) {\r\n          return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n      };\r\n      Attribute.prototype.genCSS = function (context, output) {\r\n          output.add(this.toCSS(context));\r\n      };\r\n      Attribute.prototype.toCSS = function (context) {\r\n          var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n          if (this.op) {\r\n              value += this.op;\r\n              value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n          }\r\n          return \"[\" + value + \"]\";\r\n      };\r\n      return Attribute;\r\n  }(Node));\r\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted = /** @class */ (function (_super) {\r\n      __extends(Quoted, _super);\r\n      function Quoted(str, content, escaped, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.escaped = (escaped == null) ? true : escaped;\r\n          _this.value = content || '';\r\n          _this.quote = str.charAt(0);\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n          _this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n          _this.allowRoot = escaped;\r\n          return _this;\r\n      }\r\n      Quoted.prototype.genCSS = function (context, output) {\r\n          if (!this.escaped) {\r\n              output.add(this.quote, this.fileInfo(), this.getIndex());\r\n          }\r\n          output.add(this.value);\r\n          if (!this.escaped) {\r\n              output.add(this.quote);\r\n          }\r\n      };\r\n      Quoted.prototype.containsVariables = function () {\r\n          return this.value.match(this.variableRegex);\r\n      };\r\n      Quoted.prototype.eval = function (context) {\r\n          var that = this;\r\n          var value = this.value;\r\n          var variableReplacement = function (_, name) {\r\n              var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n              return (v instanceof Quoted) ? v.value : v.toCSS();\r\n          };\r\n          var propertyReplacement = function (_, name) {\r\n              var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n              return (v instanceof Quoted) ? v.value : v.toCSS();\r\n          };\r\n          function iterativeReplace(value, regexp, replacementFnc) {\r\n              var evaluatedValue = value;\r\n              do {\r\n                  value = evaluatedValue.toString();\r\n                  evaluatedValue = value.replace(regexp, replacementFnc);\r\n              } while (value !== evaluatedValue);\r\n              return evaluatedValue;\r\n          }\r\n          value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n          value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n          return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n      };\r\n      Quoted.prototype.compare = function (other) {\r\n          // when comparing quoted strings allow the quote to differ\r\n          if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n              return Node.numericCompare(this.value, other.value);\r\n          }\r\n          else {\r\n              return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n          }\r\n      };\r\n      return Quoted;\r\n  }(Node));\r\n  Quoted.prototype.type = 'Quoted';\n\n  var URL = /** @class */ (function (_super) {\r\n      __extends(URL, _super);\r\n      function URL(val, index, currentFileInfo, isEvald) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = val;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.isEvald = isEvald;\r\n          return _this;\r\n      }\r\n      URL.prototype.accept = function (visitor) {\r\n          this.value = visitor.visit(this.value);\r\n      };\r\n      URL.prototype.genCSS = function (context, output) {\r\n          output.add('url(');\r\n          this.value.genCSS(context, output);\r\n          output.add(')');\r\n      };\r\n      URL.prototype.eval = function (context) {\r\n          var val = this.value.eval(context);\r\n          var rootpath;\r\n          if (!this.isEvald) {\r\n              // Add the rootpath if the URL requires a rewrite\r\n              rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n              if (typeof rootpath === 'string' &&\r\n                  typeof val.value === 'string' &&\r\n                  context.pathRequiresRewrite(val.value)) {\r\n                  if (!val.quote) {\r\n                      rootpath = escapePath(rootpath);\r\n                  }\r\n                  val.value = context.rewritePath(val.value, rootpath);\r\n              }\r\n              else {\r\n                  val.value = context.normalizePath(val.value);\r\n              }\r\n              // Add url args if enabled\r\n              if (context.urlArgs) {\r\n                  if (!val.value.match(/^\\s*data:/)) {\r\n                      var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                      var urlArgs = delimiter + context.urlArgs;\r\n                      if (val.value.indexOf('#') !== -1) {\r\n                          val.value = val.value.replace('#', urlArgs + \"#\");\r\n                      }\r\n                      else {\r\n                          val.value += urlArgs;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n      };\r\n      return URL;\r\n  }(Node));\r\n  URL.prototype.type = 'Url';\r\n  function escapePath(path) {\r\n      return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n  }\n\n  var Media = /** @class */ (function (_super) {\r\n      __extends(Media, _super);\r\n      function Media(value, features, index, currentFileInfo, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          var selectors = (new Selector([], null, null, _this._index, _this._fileInfo)).createEmptySelectors();\r\n          _this.features = new Value(features);\r\n          _this.rules = [new Ruleset(selectors, value)];\r\n          _this.rules[0].allowImports = true;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.allowRoot = true;\r\n          _this.setParent(selectors, _this);\r\n          _this.setParent(_this.features, _this);\r\n          _this.setParent(_this.rules, _this);\r\n          return _this;\r\n      }\r\n      Media.prototype.isRulesetLike = function () {\r\n          return true;\r\n      };\r\n      Media.prototype.accept = function (visitor) {\r\n          if (this.features) {\r\n              this.features = visitor.visit(this.features);\r\n          }\r\n          if (this.rules) {\r\n              this.rules = visitor.visitArray(this.rules);\r\n          }\r\n      };\r\n      Media.prototype.genCSS = function (context, output) {\r\n          output.add('@media ', this._fileInfo, this._index);\r\n          this.features.genCSS(context, output);\r\n          this.outputRuleset(context, output, this.rules);\r\n      };\r\n      Media.prototype.eval = function (context) {\r\n          if (!context.mediaBlocks) {\r\n              context.mediaBlocks = [];\r\n              context.mediaPath = [];\r\n          }\r\n          var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n          if (this.debugInfo) {\r\n              this.rules[0].debugInfo = this.debugInfo;\r\n              media.debugInfo = this.debugInfo;\r\n          }\r\n          media.features = this.features.eval(context);\r\n          context.mediaPath.push(media);\r\n          context.mediaBlocks.push(media);\r\n          this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n          context.frames.unshift(this.rules[0]);\r\n          media.rules = [this.rules[0].eval(context)];\r\n          context.frames.shift();\r\n          context.mediaPath.pop();\r\n          return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n              media.evalNested(context);\r\n      };\r\n      Media.prototype.evalTop = function (context) {\r\n          var result = this;\r\n          // Render all dependent Media blocks.\r\n          if (context.mediaBlocks.length > 1) {\r\n              var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n              result = new Ruleset(selectors, context.mediaBlocks);\r\n              result.multiMedia = true;\r\n              result.copyVisibilityInfo(this.visibilityInfo());\r\n              this.setParent(result, this);\r\n          }\r\n          delete context.mediaBlocks;\r\n          delete context.mediaPath;\r\n          return result;\r\n      };\r\n      Media.prototype.evalNested = function (context) {\r\n          var i;\r\n          var value;\r\n          var path = context.mediaPath.concat([this]);\r\n          // Extract the media-query conditions separated with `,` (OR).\r\n          for (i = 0; i < path.length; i++) {\r\n              value = path[i].features instanceof Value ?\r\n                  path[i].features.value : path[i].features;\r\n              path[i] = Array.isArray(value) ? value : [value];\r\n          }\r\n          // Trace all permutations to generate the resulting media-query.\r\n          //\r\n          // (a, b and c) with nested (d, e) ->\r\n          //    a and d\r\n          //    a and e\r\n          //    b and c and d\r\n          //    b and c and e\r\n          this.features = new Value(this.permute(path).map(function (path) {\r\n              path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n              for (i = path.length - 1; i > 0; i--) {\r\n                  path.splice(i, 0, new Anonymous('and'));\r\n              }\r\n              return new Expression(path);\r\n          }));\r\n          this.setParent(this.features, this);\r\n          // Fake a tree-node that doesn't output anything.\r\n          return new Ruleset([], []);\r\n      };\r\n      Media.prototype.permute = function (arr) {\r\n          if (arr.length === 0) {\r\n              return [];\r\n          }\r\n          else if (arr.length === 1) {\r\n              return arr[0];\r\n          }\r\n          else {\r\n              var result = [];\r\n              var rest = this.permute(arr.slice(1));\r\n              for (var i = 0; i < rest.length; i++) {\r\n                  for (var j = 0; j < arr[0].length; j++) {\r\n                      result.push([arr[0][j]].concat(rest[i]));\r\n                  }\r\n              }\r\n              return result;\r\n          }\r\n      };\r\n      Media.prototype.bubbleSelectors = function (selectors) {\r\n          if (!selectors) {\r\n              return;\r\n          }\r\n          this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n          this.setParent(this.rules, this);\r\n      };\r\n      return Media;\r\n  }(AtRule));\r\n  Media.prototype.type = 'Media';\n\n  //\r\n  // CSS @import node\r\n  //\r\n  // The general strategy here is that we don't want to wait\r\n  // for the parsing to be completed, before we start importing\r\n  // the file. That's because in the context of a browser,\r\n  // most of the time will be spent waiting for the server to respond.\r\n  //\r\n  // On creation, we push the import path to our import queue, though\r\n  // `import,push`, we also pass it a callback, which it'll call once\r\n  // the file has been fetched, and parsed.\r\n  //\r\n  var Import = /** @class */ (function (_super) {\r\n      __extends(Import, _super);\r\n      function Import(path, features, options, index, currentFileInfo, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.options = options;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.path = path;\r\n          _this.features = features;\r\n          _this.allowRoot = true;\r\n          if (_this.options.less !== undefined || _this.options.inline) {\r\n              _this.css = !_this.options.less || _this.options.inline;\r\n          }\r\n          else {\r\n              var pathValue = _this.getPath();\r\n              if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                  _this.css = true;\r\n              }\r\n          }\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.setParent(_this.features, _this);\r\n          _this.setParent(_this.path, _this);\r\n          return _this;\r\n      }\r\n      Import.prototype.accept = function (visitor) {\r\n          if (this.features) {\r\n              this.features = visitor.visit(this.features);\r\n          }\r\n          this.path = visitor.visit(this.path);\r\n          if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n              this.root = visitor.visit(this.root);\r\n          }\r\n      };\r\n      Import.prototype.genCSS = function (context, output) {\r\n          if (this.css && this.path._fileInfo.reference === undefined) {\r\n              output.add('@import ', this._fileInfo, this._index);\r\n              this.path.genCSS(context, output);\r\n              if (this.features) {\r\n                  output.add(' ');\r\n                  this.features.genCSS(context, output);\r\n              }\r\n              output.add(';');\r\n          }\r\n      };\r\n      Import.prototype.getPath = function () {\r\n          return (this.path instanceof URL) ?\r\n              this.path.value.value : this.path.value;\r\n      };\r\n      Import.prototype.isVariableImport = function () {\r\n          var path = this.path;\r\n          if (path instanceof URL) {\r\n              path = path.value;\r\n          }\r\n          if (path instanceof Quoted) {\r\n              return path.containsVariables();\r\n          }\r\n          return true;\r\n      };\r\n      Import.prototype.evalForImport = function (context) {\r\n          var path = this.path;\r\n          if (path instanceof URL) {\r\n              path = path.value;\r\n          }\r\n          return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n      };\r\n      Import.prototype.evalPath = function (context) {\r\n          var path = this.path.eval(context);\r\n          var fileInfo = this._fileInfo;\r\n          if (!(path instanceof URL)) {\r\n              // Add the rootpath if the URL requires a rewrite\r\n              var pathValue = path.value;\r\n              if (fileInfo &&\r\n                  pathValue &&\r\n                  context.pathRequiresRewrite(pathValue)) {\r\n                  path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n              }\r\n              else {\r\n                  path.value = context.normalizePath(path.value);\r\n              }\r\n          }\r\n          return path;\r\n      };\r\n      Import.prototype.eval = function (context) {\r\n          var result = this.doEval(context);\r\n          if (this.options.reference || this.blocksVisibility()) {\r\n              if (result.length || result.length === 0) {\r\n                  result.forEach(function (node) {\r\n                      node.addVisibilityBlock();\r\n                  });\r\n              }\r\n              else {\r\n                  result.addVisibilityBlock();\r\n              }\r\n          }\r\n          return result;\r\n      };\r\n      Import.prototype.doEval = function (context) {\r\n          var ruleset;\r\n          var registry;\r\n          var features = this.features && this.features.eval(context);\r\n          if (this.options.isPlugin) {\r\n              if (this.root && this.root.eval) {\r\n                  try {\r\n                      this.root.eval(context);\r\n                  }\r\n                  catch (e) {\r\n                      e.message = 'Plugin error during evaluation';\r\n                      throw new LessError(e, this.root.imports, this.root.filename);\r\n                  }\r\n              }\r\n              registry = context.frames[0] && context.frames[0].functionRegistry;\r\n              if (registry && this.root && this.root.functions) {\r\n                  registry.addMultiple(this.root.functions);\r\n              }\r\n              return [];\r\n          }\r\n          if (this.skip) {\r\n              if (typeof this.skip === 'function') {\r\n                  this.skip = this.skip();\r\n              }\r\n              if (this.skip) {\r\n                  return [];\r\n              }\r\n          }\r\n          if (this.options.inline) {\r\n              var contents = new Anonymous(this.root, 0, {\r\n                  filename: this.importedFilename,\r\n                  reference: this.path._fileInfo && this.path._fileInfo.reference\r\n              }, true, true);\r\n              return this.features ? new Media([contents], this.features.value) : [contents];\r\n          }\r\n          else if (this.css) {\r\n              var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n              if (!newImport.css && this.error) {\r\n                  throw this.error;\r\n              }\r\n              return newImport;\r\n          }\r\n          else if (this.root) {\r\n              ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n              ruleset.evalImports(context);\r\n              return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n          }\r\n          else {\r\n              return [];\r\n          }\r\n      };\r\n      return Import;\r\n  }(Node));\r\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode = /** @class */ (function (_super) {\r\n      __extends(JsEvalNode, _super);\r\n      function JsEvalNode() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      JsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\r\n          var result;\r\n          var that = this;\r\n          var evalContext = {};\r\n          if (!context.javascriptEnabled) {\r\n              throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                  filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n          expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) { return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context)); });\r\n          try {\r\n              expression = new Function(\"return (\" + expression + \")\");\r\n          }\r\n          catch (e) {\r\n              throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n          var variables = context.frames[0].variables();\r\n          for (var k in variables) {\r\n              if (variables.hasOwnProperty(k)) {\r\n                  /* jshint loopfunc:true */\r\n                  evalContext[k.slice(1)] = {\r\n                      value: variables[k].value,\r\n                      toJS: function () {\r\n                          return this.value.eval(context).toCSS();\r\n                      }\r\n                  };\r\n              }\r\n          }\r\n          try {\r\n              result = expression.call(evalContext);\r\n          }\r\n          catch (e) {\r\n              throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n                  index: this.getIndex() };\r\n          }\r\n          return result;\r\n      };\r\n      JsEvalNode.prototype.jsify = function (obj) {\r\n          if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n              return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n          }\r\n          else {\r\n              return obj.toCSS();\r\n          }\r\n      };\r\n      return JsEvalNode;\r\n  }(Node));\n\n  var JavaScript = /** @class */ (function (_super) {\r\n      __extends(JavaScript, _super);\r\n      function JavaScript(string, escaped, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.escaped = escaped;\r\n          _this.expression = string;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          return _this;\r\n      }\r\n      JavaScript.prototype.eval = function (context) {\r\n          var result = this.evaluateJavaScript(this.expression, context);\r\n          var type = typeof result;\r\n          if (type === 'number' && !isNaN(result)) {\r\n              return new Dimension(result);\r\n          }\r\n          else if (type === 'string') {\r\n              return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n          }\r\n          else if (Array.isArray(result)) {\r\n              return new Anonymous(result.join(', '));\r\n          }\r\n          else {\r\n              return new Anonymous(result);\r\n          }\r\n      };\r\n      return JavaScript;\r\n  }(JsEvalNode));\r\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment = /** @class */ (function (_super) {\r\n      __extends(Assignment, _super);\r\n      function Assignment(key, val) {\r\n          var _this = _super.call(this) || this;\r\n          _this.key = key;\r\n          _this.value = val;\r\n          return _this;\r\n      }\r\n      Assignment.prototype.accept = function (visitor) {\r\n          this.value = visitor.visit(this.value);\r\n      };\r\n      Assignment.prototype.eval = function (context) {\r\n          if (this.value.eval) {\r\n              return new Assignment(this.key, this.value.eval(context));\r\n          }\r\n          return this;\r\n      };\r\n      Assignment.prototype.genCSS = function (context, output) {\r\n          output.add(this.key + \"=\");\r\n          if (this.value.genCSS) {\r\n              this.value.genCSS(context, output);\r\n          }\r\n          else {\r\n              output.add(this.value);\r\n          }\r\n      };\r\n      return Assignment;\r\n  }(Node));\r\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition = /** @class */ (function (_super) {\r\n      __extends(Condition, _super);\r\n      function Condition(op, l, r, i, negate) {\r\n          var _this = _super.call(this) || this;\r\n          _this.op = op.trim();\r\n          _this.lvalue = l;\r\n          _this.rvalue = r;\r\n          _this._index = i;\r\n          _this.negate = negate;\r\n          return _this;\r\n      }\r\n      Condition.prototype.accept = function (visitor) {\r\n          this.lvalue = visitor.visit(this.lvalue);\r\n          this.rvalue = visitor.visit(this.rvalue);\r\n      };\r\n      Condition.prototype.eval = function (context) {\r\n          var result = (function (op, a, b) {\r\n              switch (op) {\r\n                  case 'and': return a && b;\r\n                  case 'or': return a || b;\r\n                  default:\r\n                      switch (Node.compare(a, b)) {\r\n                          case -1:\r\n                              return op === '<' || op === '=<' || op === '<=';\r\n                          case 0:\r\n                              return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                          case 1:\r\n                              return op === '>' || op === '>=';\r\n                          default:\r\n                              return false;\r\n                      }\r\n              }\r\n          })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n          return this.negate ? !result : result;\r\n      };\r\n      return Condition;\r\n  }(Node));\r\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor = /** @class */ (function (_super) {\r\n      __extends(UnicodeDescriptor, _super);\r\n      function UnicodeDescriptor(value) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = value;\r\n          return _this;\r\n      }\r\n      return UnicodeDescriptor;\r\n  }(Node));\r\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative = /** @class */ (function (_super) {\r\n      __extends(Negative, _super);\r\n      function Negative(node) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = node;\r\n          return _this;\r\n      }\r\n      Negative.prototype.genCSS = function (context, output) {\r\n          output.add('-');\r\n          this.value.genCSS(context, output);\r\n      };\r\n      Negative.prototype.eval = function (context) {\r\n          if (context.isMathOn()) {\r\n              return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n          }\r\n          return new Negative(this.value.eval(context));\r\n      };\r\n      return Negative;\r\n  }(Node));\r\n  Negative.prototype.type = 'Negative';\n\n  var Extend = /** @class */ (function (_super) {\r\n      __extends(Extend, _super);\r\n      function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.selector = selector;\r\n          _this.option = option;\r\n          _this.object_id = Extend.next_id++;\r\n          _this.parent_ids = [_this.object_id];\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.allowRoot = true;\r\n          switch (option) {\r\n              case 'all':\r\n                  _this.allowBefore = true;\r\n                  _this.allowAfter = true;\r\n                  break;\r\n              default:\r\n                  _this.allowBefore = false;\r\n                  _this.allowAfter = false;\r\n                  break;\r\n          }\r\n          _this.setParent(_this.selector, _this);\r\n          return _this;\r\n      }\r\n      Extend.prototype.accept = function (visitor) {\r\n          this.selector = visitor.visit(this.selector);\r\n      };\r\n      Extend.prototype.eval = function (context) {\r\n          return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      };\r\n      Extend.prototype.clone = function (context) {\r\n          return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n      };\r\n      // it concatenates (joins) all selectors in selector array\r\n      Extend.prototype.findSelfSelectors = function (selectors) {\r\n          var selfElements = [];\r\n          var i;\r\n          var selectorElements;\r\n          for (i = 0; i < selectors.length; i++) {\r\n              selectorElements = selectors[i].elements;\r\n              // duplicate the logic in genCSS function inside the selector node.\r\n              // future TODO - move both logics into the selector joiner visitor\r\n              if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                  selectorElements[0].combinator.value = ' ';\r\n              }\r\n              selfElements = selfElements.concat(selectors[i].elements);\r\n          }\r\n          this.selfSelectors = [new Selector(selfElements)];\r\n          this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n      };\r\n      return Extend;\r\n  }(Node));\r\n  Extend.next_id = 0;\r\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall = /** @class */ (function (_super) {\r\n      __extends(VariableCall, _super);\r\n      function VariableCall(variable, index, currentFileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.variable = variable;\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.allowRoot = true;\r\n          return _this;\r\n      }\r\n      VariableCall.prototype.eval = function (context) {\r\n          var rules;\r\n          var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n          var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n          if (!detachedRuleset.ruleset) {\r\n              if (detachedRuleset.rules) {\r\n                  rules = detachedRuleset;\r\n              }\r\n              else if (Array.isArray(detachedRuleset)) {\r\n                  rules = new Ruleset('', detachedRuleset);\r\n              }\r\n              else if (Array.isArray(detachedRuleset.value)) {\r\n                  rules = new Ruleset('', detachedRuleset.value);\r\n              }\r\n              else {\r\n                  throw error;\r\n              }\r\n              detachedRuleset = new DetachedRuleset(rules);\r\n          }\r\n          if (detachedRuleset.ruleset) {\r\n              return detachedRuleset.callEval(context);\r\n          }\r\n          throw error;\r\n      };\r\n      return VariableCall;\r\n  }(Node));\r\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue = /** @class */ (function (_super) {\r\n      __extends(NamespaceValue, _super);\r\n      function NamespaceValue(ruleCall, lookups, index, fileInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.value = ruleCall;\r\n          _this.lookups = lookups;\r\n          _this._index = index;\r\n          _this._fileInfo = fileInfo;\r\n          return _this;\r\n      }\r\n      NamespaceValue.prototype.eval = function (context) {\r\n          var i;\r\n          var name;\r\n          var rules = this.value.eval(context);\r\n          for (i = 0; i < this.lookups.length; i++) {\r\n              name = this.lookups[i];\r\n              /**\r\n               * Eval'd DRs return rulesets.\r\n               * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n               * We need to do this because of late parsing of values\r\n               */\r\n              if (Array.isArray(rules)) {\r\n                  rules = new Ruleset([new Selector()], rules);\r\n              }\r\n              if (name === '') {\r\n                  rules = rules.lastDeclaration();\r\n              }\r\n              else if (name.charAt(0) === '@') {\r\n                  if (name.charAt(1) === '@') {\r\n                      name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                  }\r\n                  if (rules.variables) {\r\n                      rules = rules.variable(name);\r\n                  }\r\n                  if (!rules) {\r\n                      throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                          index: this.getIndex() };\r\n                  }\r\n              }\r\n              else {\r\n                  if (name.substring(0, 2) === '$@') {\r\n                      name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                  }\r\n                  else {\r\n                      name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                  }\r\n                  if (rules.properties) {\r\n                      rules = rules.property(name);\r\n                  }\r\n                  if (!rules) {\r\n                      throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                          index: this.getIndex() };\r\n                  }\r\n                  // Properties are an array of values, since a ruleset can have multiple props.\r\n                  // We pick the last one (the \"cascaded\" value)\r\n                  rules = rules[rules.length - 1];\r\n              }\r\n              if (rules.value) {\r\n                  rules = rules.eval(context).value;\r\n              }\r\n              if (rules.ruleset) {\r\n                  rules = rules.ruleset.eval(context);\r\n              }\r\n          }\r\n          return rules;\r\n      };\r\n      return NamespaceValue;\r\n  }(Node));\r\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition = /** @class */ (function (_super) {\r\n      __extends(Definition, _super);\r\n      function Definition(name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n          var _this = _super.call(this) || this;\r\n          _this.name = name || 'anonymous mixin';\r\n          _this.selectors = [new Selector([new Element(null, name, false, _this._index, _this._fileInfo)])];\r\n          _this.params = params;\r\n          _this.condition = condition;\r\n          _this.variadic = variadic;\r\n          _this.arity = params.length;\r\n          _this.rules = rules;\r\n          _this._lookups = {};\r\n          var optionalParameters = [];\r\n          _this.required = params.reduce(function (count, p) {\r\n              if (!p.name || (p.name && !p.value)) {\r\n                  return count + 1;\r\n              }\r\n              else {\r\n                  optionalParameters.push(p.name);\r\n                  return count;\r\n              }\r\n          }, 0);\r\n          _this.optionalParameters = optionalParameters;\r\n          _this.frames = frames;\r\n          _this.copyVisibilityInfo(visibilityInfo);\r\n          _this.allowRoot = true;\r\n          return _this;\r\n      }\r\n      Definition.prototype.accept = function (visitor) {\r\n          if (this.params && this.params.length) {\r\n              this.params = visitor.visitArray(this.params);\r\n          }\r\n          this.rules = visitor.visitArray(this.rules);\r\n          if (this.condition) {\r\n              this.condition = visitor.visit(this.condition);\r\n          }\r\n      };\r\n      Definition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\r\n          /* jshint boss:true */\r\n          var frame = new Ruleset(null, null);\r\n          var varargs;\r\n          var arg;\r\n          var params = copyArray(this.params);\r\n          var i;\r\n          var j;\r\n          var val;\r\n          var name;\r\n          var isNamedFound;\r\n          var argIndex;\r\n          var argsLength = 0;\r\n          if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n              frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n          }\r\n          mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n          if (args) {\r\n              args = copyArray(args);\r\n              argsLength = args.length;\r\n              for (i = 0; i < argsLength; i++) {\r\n                  arg = args[i];\r\n                  if (name = (arg && arg.name)) {\r\n                      isNamedFound = false;\r\n                      for (j = 0; j < params.length; j++) {\r\n                          if (!evaldArguments[j] && name === params[j].name) {\r\n                              evaldArguments[j] = arg.value.eval(context);\r\n                              frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                              isNamedFound = true;\r\n                              break;\r\n                          }\r\n                      }\r\n                      if (isNamedFound) {\r\n                          args.splice(i, 1);\r\n                          i--;\r\n                          continue;\r\n                      }\r\n                      else {\r\n                          throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          argIndex = 0;\r\n          for (i = 0; i < params.length; i++) {\r\n              if (evaldArguments[i]) {\r\n                  continue;\r\n              }\r\n              arg = args && args[argIndex];\r\n              if (name = params[i].name) {\r\n                  if (params[i].variadic) {\r\n                      varargs = [];\r\n                      for (j = argIndex; j < argsLength; j++) {\r\n                          varargs.push(args[j].value.eval(context));\r\n                      }\r\n                      frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                  }\r\n                  else {\r\n                      val = arg && arg.value;\r\n                      if (val) {\r\n                          // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                          if (Array.isArray(val)) {\r\n                              val = new DetachedRuleset(new Ruleset('', val));\r\n                          }\r\n                          else {\r\n                              val = val.eval(context);\r\n                          }\r\n                      }\r\n                      else if (params[i].value) {\r\n                          val = params[i].value.eval(mixinEnv);\r\n                          frame.resetCache();\r\n                      }\r\n                      else {\r\n                          throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                      }\r\n                      frame.prependRule(new Declaration(name, val));\r\n                      evaldArguments[i] = val;\r\n                  }\r\n              }\r\n              if (params[i].variadic && args) {\r\n                  for (j = argIndex; j < argsLength; j++) {\r\n                      evaldArguments[j] = args[j].value.eval(context);\r\n                  }\r\n              }\r\n              argIndex++;\r\n          }\r\n          return frame;\r\n      };\r\n      Definition.prototype.makeImportant = function () {\r\n          var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n              if (r.makeImportant) {\r\n                  return r.makeImportant(true);\r\n              }\r\n              else {\r\n                  return r;\r\n              }\r\n          });\r\n          var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n          return result;\r\n      };\r\n      Definition.prototype.eval = function (context) {\r\n          return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n      };\r\n      Definition.prototype.evalCall = function (context, args, important) {\r\n          var _arguments = [];\r\n          var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n          var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n          var rules;\r\n          var ruleset;\r\n          frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n          rules = copyArray(this.rules);\r\n          ruleset = new Ruleset(null, rules);\r\n          ruleset.originalRuleset = this;\r\n          ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n          if (important) {\r\n              ruleset = ruleset.makeImportant();\r\n          }\r\n          return ruleset;\r\n      };\r\n      Definition.prototype.matchCondition = function (args, context) {\r\n          if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n              .concat(this.frames || []) // the parent namespace/mixin frames\r\n              .concat(context.frames)))) { // the current environment frames\r\n              return false;\r\n          }\r\n          return true;\r\n      };\r\n      Definition.prototype.matchArgs = function (args, context) {\r\n          var allArgsCnt = (args && args.length) || 0;\r\n          var len;\r\n          var optionalParameters = this.optionalParameters;\r\n          var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n              if (optionalParameters.indexOf(p.name) < 0) {\r\n                  return count + 1;\r\n              }\r\n              else {\r\n                  return count;\r\n              }\r\n          }, 0);\r\n          if (!this.variadic) {\r\n              if (requiredArgsCnt < this.required) {\r\n                  return false;\r\n              }\r\n              if (allArgsCnt > this.params.length) {\r\n                  return false;\r\n              }\r\n          }\r\n          else {\r\n              if (requiredArgsCnt < (this.required - 1)) {\r\n                  return false;\r\n              }\r\n          }\r\n          // check patterns\r\n          len = Math.min(requiredArgsCnt, this.arity);\r\n          for (var i = 0; i < len; i++) {\r\n              if (!this.params[i].name && !this.params[i].variadic) {\r\n                  if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                      return false;\r\n                  }\r\n              }\r\n          }\r\n          return true;\r\n      };\r\n      return Definition;\r\n  }(Ruleset));\r\n  Definition.prototype.type = 'MixinDefinition';\r\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall = /** @class */ (function (_super) {\r\n      __extends(MixinCall, _super);\r\n      function MixinCall(elements, args, index, currentFileInfo, important) {\r\n          var _this = _super.call(this) || this;\r\n          _this.selector = new Selector(elements);\r\n          _this.arguments = args || [];\r\n          _this._index = index;\r\n          _this._fileInfo = currentFileInfo;\r\n          _this.important = important;\r\n          _this.allowRoot = true;\r\n          _this.setParent(_this.selector, _this);\r\n          return _this;\r\n      }\r\n      MixinCall.prototype.accept = function (visitor) {\r\n          if (this.selector) {\r\n              this.selector = visitor.visit(this.selector);\r\n          }\r\n          if (this.arguments.length) {\r\n              this.arguments = visitor.visitArray(this.arguments);\r\n          }\r\n      };\r\n      MixinCall.prototype.eval = function (context) {\r\n          var mixins;\r\n          var mixin;\r\n          var mixinPath;\r\n          var args = [];\r\n          var arg;\r\n          var argValue;\r\n          var rules = [];\r\n          var match = false;\r\n          var i;\r\n          var m;\r\n          var f;\r\n          var isRecursive;\r\n          var isOneFound;\r\n          var candidates = [];\r\n          var candidate;\r\n          var conditionResult = [];\r\n          var defaultResult;\r\n          var defFalseEitherCase = -1;\r\n          var defNone = 0;\r\n          var defTrue = 1;\r\n          var defFalse = 2;\r\n          var count;\r\n          var originalRuleset;\r\n          var noArgumentsFilter;\r\n          this.selector = this.selector.eval(context);\r\n          function calcDefGroup(mixin, mixinPath) {\r\n              var f;\r\n              var p;\r\n              var namespace;\r\n              for (f = 0; f < 2; f++) {\r\n                  conditionResult[f] = true;\r\n                  defaultFunc.value(f);\r\n                  for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                      namespace = mixinPath[p];\r\n                      if (namespace.matchCondition) {\r\n                          conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                      }\r\n                  }\r\n                  if (mixin.matchCondition) {\r\n                      conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                  }\r\n              }\r\n              if (conditionResult[0] || conditionResult[1]) {\r\n                  if (conditionResult[0] != conditionResult[1]) {\r\n                      return conditionResult[1] ?\r\n                          defTrue : defFalse;\r\n                  }\r\n                  return defNone;\r\n              }\r\n              return defFalseEitherCase;\r\n          }\r\n          for (i = 0; i < this.arguments.length; i++) {\r\n              arg = this.arguments[i];\r\n              argValue = arg.value.eval(context);\r\n              if (arg.expand && Array.isArray(argValue.value)) {\r\n                  argValue = argValue.value;\r\n                  for (m = 0; m < argValue.length; m++) {\r\n                      args.push({ value: argValue[m] });\r\n                  }\r\n              }\r\n              else {\r\n                  args.push({ name: arg.name, value: argValue });\r\n              }\r\n          }\r\n          noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n          for (i = 0; i < context.frames.length; i++) {\r\n              if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                  isOneFound = true;\r\n                  // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                  // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                  // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                  // we make a final decision.\r\n                  for (m = 0; m < mixins.length; m++) {\r\n                      mixin = mixins[m].rule;\r\n                      mixinPath = mixins[m].path;\r\n                      isRecursive = false;\r\n                      for (f = 0; f < context.frames.length; f++) {\r\n                          if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                              isRecursive = true;\r\n                              break;\r\n                          }\r\n                      }\r\n                      if (isRecursive) {\r\n                          continue;\r\n                      }\r\n                      if (mixin.matchArgs(args, context)) {\r\n                          candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                          if (candidate.group !== defFalseEitherCase) {\r\n                              candidates.push(candidate);\r\n                          }\r\n                          match = true;\r\n                      }\r\n                  }\r\n                  defaultFunc.reset();\r\n                  count = [0, 0, 0];\r\n                  for (m = 0; m < candidates.length; m++) {\r\n                      count[candidates[m].group]++;\r\n                  }\r\n                  if (count[defNone] > 0) {\r\n                      defaultResult = defFalse;\r\n                  }\r\n                  else {\r\n                      defaultResult = defTrue;\r\n                      if ((count[defTrue] + count[defFalse]) > 1) {\r\n                          throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                      }\r\n                  }\r\n                  for (m = 0; m < candidates.length; m++) {\r\n                      candidate = candidates[m].group;\r\n                      if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                          try {\r\n                              mixin = candidates[m].mixin;\r\n                              if (!(mixin instanceof Definition)) {\r\n                                  originalRuleset = mixin.originalRuleset || mixin;\r\n                                  mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                  mixin.originalRuleset = originalRuleset;\r\n                              }\r\n                              var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                              this._setVisibilityToReplacement(newRules);\r\n                              Array.prototype.push.apply(rules, newRules);\r\n                          }\r\n                          catch (e) {\r\n                              throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                          }\r\n                      }\r\n                  }\r\n                  if (match) {\r\n                      return rules;\r\n                  }\r\n              }\r\n          }\r\n          if (isOneFound) {\r\n              throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n          }\r\n          else {\r\n              throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n          }\r\n      };\r\n      MixinCall.prototype._setVisibilityToReplacement = function (replacement) {\r\n          var i;\r\n          var rule;\r\n          if (this.blocksVisibility()) {\r\n              for (i = 0; i < replacement.length; i++) {\r\n                  rule = replacement[i];\r\n                  rule.addVisibilityBlock();\r\n              }\r\n          }\r\n      };\r\n      MixinCall.prototype.format = function (args) {\r\n          return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n              var argValue = '';\r\n              if (a.name) {\r\n                  argValue += a.name + \":\";\r\n              }\r\n              if (a.value.toCSS) {\r\n                  argValue += a.value.toCSS();\r\n              }\r\n              else {\r\n                  argValue += '???';\r\n              }\r\n              return argValue;\r\n          }).join(', ') : '') + \")\";\r\n      };\r\n      return MixinCall;\r\n  }(Node));\r\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\r\n      Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n      Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n      Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n      Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n      Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n      Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n      Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n      mixin: {\r\n          Call: MixinCall,\r\n          Definition: Definition\r\n      }\r\n  };\n\n  var logger = {\r\n      error: function (msg) {\r\n          this._fireEvent('error', msg);\r\n      },\r\n      warn: function (msg) {\r\n          this._fireEvent('warn', msg);\r\n      },\r\n      info: function (msg) {\r\n          this._fireEvent('info', msg);\r\n      },\r\n      debug: function (msg) {\r\n          this._fireEvent('debug', msg);\r\n      },\r\n      addListener: function (listener) {\r\n          this._listeners.push(listener);\r\n      },\r\n      removeListener: function (listener) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              if (this._listeners[i] === listener) {\r\n                  this._listeners.splice(i, 1);\r\n                  return;\r\n              }\r\n          }\r\n      },\r\n      _fireEvent: function (type, msg) {\r\n          for (var i = 0; i < this._listeners.length; i++) {\r\n              var logFunction = this._listeners[i][type];\r\n              if (logFunction) {\r\n                  logFunction(msg);\r\n              }\r\n          }\r\n      },\r\n      _listeners: []\r\n  };\n\n  /**\r\n   * @todo Document why this abstraction exists, and the relationship between\r\n   *       environment, file managers, and plugin manager\r\n   */\r\n  var environment = /** @class */ (function () {\r\n      function environment(externalEnvironment, fileManagers) {\r\n          this.fileManagers = fileManagers || [];\r\n          externalEnvironment = externalEnvironment || {};\r\n          var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n          var requiredFunctions = [];\r\n          var functions = requiredFunctions.concat(optionalFunctions);\r\n          for (var i = 0; i < functions.length; i++) {\r\n              var propName = functions[i];\r\n              var environmentFunc = externalEnvironment[propName];\r\n              if (environmentFunc) {\r\n                  this[propName] = environmentFunc.bind(externalEnvironment);\r\n              }\r\n              else if (i < requiredFunctions.length) {\r\n                  this.warn(\"missing required function in environment - \" + propName);\r\n              }\r\n          }\r\n      }\r\n      environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n          if (!filename) {\r\n              logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n          }\r\n          if (currentDirectory == null) {\r\n              logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n          }\r\n          var fileManagers = this.fileManagers;\r\n          if (options.pluginManager) {\r\n              fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n          }\r\n          for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n              var fileManager = fileManagers[i];\r\n              if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                  return fileManager;\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      environment.prototype.addFileManager = function (fileManager) {\r\n          this.fileManagers.push(fileManager);\r\n      };\r\n      environment.prototype.clearFileManagers = function () {\r\n          this.fileManagers = [];\r\n      };\r\n      return environment;\r\n  }());\n\n  var AbstractFileManager = /** @class */ (function () {\r\n      function AbstractFileManager() {\r\n      }\r\n      AbstractFileManager.prototype.getPath = function (filename) {\r\n          var j = filename.lastIndexOf('?');\r\n          if (j > 0) {\r\n              filename = filename.slice(0, j);\r\n          }\r\n          j = filename.lastIndexOf('/');\r\n          if (j < 0) {\r\n              j = filename.lastIndexOf('\\\\');\r\n          }\r\n          if (j < 0) {\r\n              return '';\r\n          }\r\n          return filename.slice(0, j + 1);\r\n      };\r\n      AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n          return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n      };\r\n      AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n          return this.tryAppendExtension(path, '.less');\r\n      };\r\n      AbstractFileManager.prototype.supportsSync = function () { return false; };\r\n      AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () { return false; };\r\n      AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n          return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n      };\r\n      // TODO: pull out / replace?\r\n      AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return basePath + laterPath;\r\n      };\r\n      AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n          // diff between two paths to create a relative path\r\n          var urlParts = this.extractUrlParts(url);\r\n          var baseUrlParts = this.extractUrlParts(baseUrl);\r\n          var i;\r\n          var max;\r\n          var urlDirectories;\r\n          var baseUrlDirectories;\r\n          var diff = '';\r\n          if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n              return '';\r\n          }\r\n          max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n          for (i = 0; i < max; i++) {\r\n              if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                  break;\r\n              }\r\n          }\r\n          baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n          urlDirectories = urlParts.directories.slice(i);\r\n          for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n              diff += '../';\r\n          }\r\n          for (i = 0; i < urlDirectories.length - 1; i++) {\r\n              diff += urlDirectories[i] + \"/\";\r\n          }\r\n          return diff;\r\n      };\r\n      // helper function, not part of API\r\n      AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n          // urlParts[1] = protocol://hostname/ OR /\r\n          // urlParts[2] = / if path relative to host base\r\n          // urlParts[3] = directories\r\n          // urlParts[4] = filename\r\n          // urlParts[5] = parameters\r\n          var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n          var urlParts = url.match(urlPartsRegex);\r\n          var returner = {};\r\n          var rawDirectories = [];\r\n          var directories = [];\r\n          var i;\r\n          var baseUrlParts;\r\n          if (!urlParts) {\r\n              throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n          }\r\n          // Stylesheets in IE don't always return the full path\r\n          if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n              baseUrlParts = baseUrl.match(urlPartsRegex);\r\n              if (!baseUrlParts) {\r\n                  throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n              }\r\n              urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n              if (!urlParts[2]) {\r\n                  urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n              }\r\n          }\r\n          if (urlParts[3]) {\r\n              rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n              // collapse '..' and skip '.'\r\n              for (i = 0; i < rawDirectories.length; i++) {\r\n                  if (rawDirectories[i] === '..') {\r\n                      directories.pop();\r\n                  }\r\n                  else if (rawDirectories[i] !== '.') {\r\n                      directories.push(rawDirectories[i]);\r\n                  }\r\n              }\r\n          }\r\n          returner.hostPart = urlParts[1];\r\n          returner.directories = directories;\r\n          returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n          returner.path = (urlParts[1] || '') + directories.join('/');\r\n          returner.filename = urlParts[4];\r\n          returner.fileUrl = returner.path + (urlParts[4] || '');\r\n          returner.url = returner.fileUrl + (urlParts[5] || '');\r\n          return returner;\r\n      };\r\n      return AbstractFileManager;\r\n  }());\n\n  var AbstractPluginLoader = /** @class */ (function () {\r\n      function AbstractPluginLoader() {\r\n          // Implemented by Node.js plugin loader\r\n          this.require = function () { return null; };\r\n      }\r\n      AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n          var loader;\r\n          var registry;\r\n          var pluginObj;\r\n          var localModule;\r\n          var pluginManager;\r\n          var filename;\r\n          var result;\r\n          pluginManager = context.pluginManager;\r\n          if (fileInfo) {\r\n              if (typeof fileInfo === 'string') {\r\n                  filename = fileInfo;\r\n              }\r\n              else {\r\n                  filename = fileInfo.filename;\r\n              }\r\n          }\r\n          var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n          if (filename) {\r\n              pluginObj = pluginManager.get(filename);\r\n              if (pluginObj) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n                  try {\r\n                      if (pluginObj.use) {\r\n                          pluginObj.use.call(this.context, pluginObj);\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      e.message = e.message || 'Error during @plugin call';\r\n                      return new LessError(e, imports, filename);\r\n                  }\r\n                  return pluginObj;\r\n              }\r\n          }\r\n          localModule = {\r\n              exports: {},\r\n              pluginManager: pluginManager,\r\n              fileInfo: fileInfo\r\n          };\r\n          registry = functionRegistry.create();\r\n          var registerPlugin = function (obj) {\r\n              pluginObj = obj;\r\n          };\r\n          try {\r\n              loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n              loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e, imports, filename);\r\n          }\r\n          if (!pluginObj) {\r\n              pluginObj = localModule.exports;\r\n          }\r\n          pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n          if (pluginObj instanceof LessError) {\r\n              return pluginObj;\r\n          }\r\n          if (pluginObj) {\r\n              pluginObj.imports = imports;\r\n              pluginObj.filename = filename;\r\n              // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n              if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                  result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                  if (result) {\r\n                      return result;\r\n                  }\r\n              }\r\n              // Run on first load\r\n              pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n              pluginObj.functions = registry.getLocalFunctions();\r\n              // Need to call setOptions again because the pluginObj might have functions\r\n              result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n              if (result) {\r\n                  return result;\r\n              }\r\n              // Run every @plugin call\r\n              try {\r\n                  if (pluginObj.use) {\r\n                      pluginObj.use.call(this.context, pluginObj);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  e.message = e.message || 'Error during @plugin call';\r\n                  return new LessError(e, imports, filename);\r\n              }\r\n          }\r\n          else {\r\n              return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n          }\r\n          return pluginObj;\r\n      };\r\n      AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n          if (options && !plugin.setOptions) {\r\n              return new LessError({\r\n                  message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n              });\r\n          }\r\n          try {\r\n              plugin.setOptions && plugin.setOptions(options);\r\n          }\r\n          catch (e) {\r\n              return new LessError(e);\r\n          }\r\n      };\r\n      AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n          if (plugin) {\r\n              // support plugins being a function\r\n              // so that the plugin can be more usable programmatically\r\n              if (typeof plugin === 'function') {\r\n                  plugin = new plugin();\r\n              }\r\n              if (plugin.minVersion) {\r\n                  if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                      return new LessError({\r\n                          message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                      });\r\n                  }\r\n              }\r\n              return plugin;\r\n          }\r\n          return null;\r\n      };\r\n      AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n          if (typeof aVersion === 'string') {\r\n              aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n              aVersion.shift();\r\n          }\r\n          for (var i = 0; i < aVersion.length; i++) {\r\n              if (aVersion[i] !== bVersion[i]) {\r\n                  return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n              }\r\n          }\r\n          return 0;\r\n      };\r\n      AbstractPluginLoader.prototype.versionToString = function (version) {\r\n          var versionString = '';\r\n          for (var i = 0; i < version.length; i++) {\r\n              versionString += (versionString ? '.' : '') + version[i];\r\n          }\r\n          return versionString;\r\n      };\r\n      AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n          for (var i = 0; i < plugins.length; i++) {\r\n              var plugin = plugins[i];\r\n              if (plugin.printUsage) {\r\n                  plugin.printUsage();\r\n              }\r\n          }\r\n      };\r\n      return AbstractPluginLoader;\r\n  }());\n\n  var _visitArgs = { visitDeeper: true };\r\n  var _hasIndexed = false;\r\n  function _noop(node) {\r\n      return node;\r\n  }\r\n  function indexNodeTypes(parent, ticker) {\r\n      // add .typeIndex to tree node types for lookup table\r\n      var key;\r\n      var child;\r\n      for (key in parent) {\r\n          /* eslint guard-for-in: 0 */\r\n          child = parent[key];\r\n          switch (typeof child) {\r\n              case 'function':\r\n                  // ignore bound functions directly on tree which do not have a prototype\r\n                  // or aren't nodes\r\n                  if (child.prototype && child.prototype.type) {\r\n                      child.prototype.typeIndex = ticker++;\r\n                  }\r\n                  break;\r\n              case 'object':\r\n                  ticker = indexNodeTypes(child, ticker);\r\n                  break;\r\n          }\r\n      }\r\n      return ticker;\r\n  }\r\n  var Visitor = /** @class */ (function () {\r\n      function Visitor(implementation) {\r\n          this._implementation = implementation;\r\n          this._visitInCache = {};\r\n          this._visitOutCache = {};\r\n          if (!_hasIndexed) {\r\n              indexNodeTypes(tree, 1);\r\n              _hasIndexed = true;\r\n          }\r\n      }\r\n      Visitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          var nodeTypeIndex = node.typeIndex;\r\n          if (!nodeTypeIndex) {\r\n              // MixinCall args aren't a node type?\r\n              if (node.value && node.value.typeIndex) {\r\n                  this.visit(node.value);\r\n              }\r\n              return node;\r\n          }\r\n          var impl = this._implementation;\r\n          var func = this._visitInCache[nodeTypeIndex];\r\n          var funcOut = this._visitOutCache[nodeTypeIndex];\r\n          var visitArgs = _visitArgs;\r\n          var fnName;\r\n          visitArgs.visitDeeper = true;\r\n          if (!func) {\r\n              fnName = \"visit\" + node.type;\r\n              func = impl[fnName] || _noop;\r\n              funcOut = impl[fnName + \"Out\"] || _noop;\r\n              this._visitInCache[nodeTypeIndex] = func;\r\n              this._visitOutCache[nodeTypeIndex] = funcOut;\r\n          }\r\n          if (func !== _noop) {\r\n              var newNode = func.call(impl, node, visitArgs);\r\n              if (node && impl.isReplacing) {\r\n                  node = newNode;\r\n              }\r\n          }\r\n          if (visitArgs.visitDeeper && node) {\r\n              if (node.length) {\r\n                  for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                      if (node[i].accept) {\r\n                          node[i].accept(this);\r\n                      }\r\n                  }\r\n              }\r\n              else if (node.accept) {\r\n                  node.accept(this);\r\n              }\r\n          }\r\n          if (funcOut != _noop) {\r\n              funcOut.call(impl, node);\r\n          }\r\n          return node;\r\n      };\r\n      Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          // Non-replacing\r\n          if (nonReplacing || !this._implementation.isReplacing) {\r\n              for (i = 0; i < cnt; i++) {\r\n                  this.visit(nodes[i]);\r\n              }\r\n              return nodes;\r\n          }\r\n          // Replacing\r\n          var out = [];\r\n          for (i = 0; i < cnt; i++) {\r\n              var evald = this.visit(nodes[i]);\r\n              if (evald === undefined) {\r\n                  continue;\r\n              }\r\n              if (!evald.splice) {\r\n                  out.push(evald);\r\n              }\r\n              else if (evald.length) {\r\n                  this.flatten(evald, out);\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      Visitor.prototype.flatten = function (arr, out) {\r\n          if (!out) {\r\n              out = [];\r\n          }\r\n          var cnt;\r\n          var i;\r\n          var item;\r\n          var nestedCnt;\r\n          var j;\r\n          var nestedItem;\r\n          for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n              item = arr[i];\r\n              if (item === undefined) {\r\n                  continue;\r\n              }\r\n              if (!item.splice) {\r\n                  out.push(item);\r\n                  continue;\r\n              }\r\n              for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                  nestedItem = item[j];\r\n                  if (nestedItem === undefined) {\r\n                      continue;\r\n                  }\r\n                  if (!nestedItem.splice) {\r\n                      out.push(nestedItem);\r\n                  }\r\n                  else if (nestedItem.length) {\r\n                      this.flatten(nestedItem, out);\r\n                  }\r\n              }\r\n          }\r\n          return out;\r\n      };\r\n      return Visitor;\r\n  }());\n\n  var ImportSequencer = /** @class */ (function () {\r\n      function ImportSequencer(onSequencerEmpty) {\r\n          this.imports = [];\r\n          this.variableImports = [];\r\n          this._onSequencerEmpty = onSequencerEmpty;\r\n          this._currentDepth = 0;\r\n      }\r\n      ImportSequencer.prototype.addImport = function (callback) {\r\n          var importSequencer = this;\r\n          var importItem = {\r\n              callback: callback,\r\n              args: null,\r\n              isReady: false\r\n          };\r\n          this.imports.push(importItem);\r\n          return function () {\r\n              var args = [];\r\n              for (var _i = 0; _i < arguments.length; _i++) {\r\n                  args[_i] = arguments[_i];\r\n              }\r\n              importItem.args = Array.prototype.slice.call(args, 0);\r\n              importItem.isReady = true;\r\n              importSequencer.tryRun();\r\n          };\r\n      };\r\n      ImportSequencer.prototype.addVariableImport = function (callback) {\r\n          this.variableImports.push(callback);\r\n      };\r\n      ImportSequencer.prototype.tryRun = function () {\r\n          this._currentDepth++;\r\n          try {\r\n              while (true) {\r\n                  while (this.imports.length > 0) {\r\n                      var importItem = this.imports[0];\r\n                      if (!importItem.isReady) {\r\n                          return;\r\n                      }\r\n                      this.imports = this.imports.slice(1);\r\n                      importItem.callback.apply(null, importItem.args);\r\n                  }\r\n                  if (this.variableImports.length === 0) {\r\n                      break;\r\n                  }\r\n                  var variableImport = this.variableImports[0];\r\n                  this.variableImports = this.variableImports.slice(1);\r\n                  variableImport();\r\n              }\r\n          }\r\n          finally {\r\n              this._currentDepth--;\r\n          }\r\n          if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n              this._onSequencerEmpty();\r\n          }\r\n      };\r\n      return ImportSequencer;\r\n  }());\n\n  var ImportVisitor = function (importer, finish) {\r\n      this._visitor = new Visitor(this);\r\n      this._importer = importer;\r\n      this._finish = finish;\r\n      this.context = new contexts.Eval();\r\n      this.importCount = 0;\r\n      this.onceFileDetectionMap = {};\r\n      this.recursionDetector = {};\r\n      this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n  };\r\n  ImportVisitor.prototype = {\r\n      isReplacing: false,\r\n      run: function (root) {\r\n          try {\r\n              // process the contents\r\n              this._visitor.visit(root);\r\n          }\r\n          catch (e) {\r\n              this.error = e;\r\n          }\r\n          this.isFinished = true;\r\n          this._sequencer.tryRun();\r\n      },\r\n      _onSequencerEmpty: function () {\r\n          if (!this.isFinished) {\r\n              return;\r\n          }\r\n          this._finish(this.error);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          var inlineCSS = importNode.options.inline;\r\n          if (!importNode.css || inlineCSS) {\r\n              var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n              var importParent = context.frames[0];\r\n              this.importCount++;\r\n              if (importNode.isVariableImport()) {\r\n                  this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n              }\r\n              else {\r\n                  this.processImportNode(importNode, context, importParent);\r\n              }\r\n          }\r\n          visitArgs.visitDeeper = false;\r\n      },\r\n      processImportNode: function (importNode, context, importParent) {\r\n          var evaldImportNode;\r\n          var inlineCSS = importNode.options.inline;\r\n          try {\r\n              evaldImportNode = importNode.evalForImport(context);\r\n          }\r\n          catch (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              // attempt to eval properly and treat as css\r\n              importNode.css = true;\r\n              // if that fails, this error will be thrown\r\n              importNode.error = e;\r\n          }\r\n          if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n              if (evaldImportNode.options.multiple) {\r\n                  context.importMultiple = true;\r\n              }\r\n              // try appending if we haven't determined if it is css or not\r\n              var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n              for (var i = 0; i < importParent.rules.length; i++) {\r\n                  if (importParent.rules[i] === importNode) {\r\n                      importParent.rules[i] = evaldImportNode;\r\n                      break;\r\n                  }\r\n              }\r\n              var onImported = this.onImported.bind(this, evaldImportNode, context);\r\n              var sequencedOnImported = this._sequencer.addImport(onImported);\r\n              this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n          }\r\n          else {\r\n              this.importCount--;\r\n              if (this.isFinished) {\r\n                  this._sequencer.tryRun();\r\n              }\r\n          }\r\n      },\r\n      onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n          if (e) {\r\n              if (!e.filename) {\r\n                  e.index = importNode.getIndex();\r\n                  e.filename = importNode.fileInfo().filename;\r\n              }\r\n              this.error = e;\r\n          }\r\n          var importVisitor = this;\r\n          var inlineCSS = importNode.options.inline;\r\n          var isPlugin = importNode.options.isPlugin;\r\n          var isOptional = importNode.options.optional;\r\n          var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n          if (!context.importMultiple) {\r\n              if (duplicateImport) {\r\n                  importNode.skip = true;\r\n              }\r\n              else {\r\n                  importNode.skip = function () {\r\n                      if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                          return true;\r\n                      }\r\n                      importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                      return false;\r\n                  };\r\n              }\r\n          }\r\n          if (!fullPath && isOptional) {\r\n              importNode.skip = true;\r\n          }\r\n          if (root) {\r\n              importNode.root = root;\r\n              importNode.importedFilename = fullPath;\r\n              if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                  importVisitor.recursionDetector[fullPath] = true;\r\n                  var oldContext = this.context;\r\n                  this.context = context;\r\n                  try {\r\n                      this._visitor.visit(root);\r\n                  }\r\n                  catch (e) {\r\n                      this.error = e;\r\n                  }\r\n                  this.context = oldContext;\r\n              }\r\n          }\r\n          importVisitor.importCount--;\r\n          if (importVisitor.isFinished) {\r\n              importVisitor._sequencer.tryRun();\r\n          }\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.unshift(declNode);\r\n          }\r\n          else {\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n      },\r\n      visitDeclarationOut: function (declNode) {\r\n          if (declNode.value.type === 'DetachedRuleset') {\r\n              this.context.frames.shift();\r\n          }\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          this.context.frames.unshift(atRuleNode);\r\n      },\r\n      visitAtRuleOut: function (atRuleNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n          this.context.frames.unshift(mixinDefinitionNode);\r\n      },\r\n      visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          this.context.frames.unshift(rulesetNode);\r\n      },\r\n      visitRulesetOut: function (rulesetNode) {\r\n          this.context.frames.shift();\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          this.context.frames.unshift(mediaNode.rules[0]);\r\n      },\r\n      visitMediaOut: function (mediaNode) {\r\n          this.context.frames.shift();\r\n      }\r\n  };\n\n  var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n      function SetTreeVisibilityVisitor(visible) {\r\n          this.visible = visible;\r\n      }\r\n      SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n          this.visit(root);\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n          if (!nodes) {\r\n              return nodes;\r\n          }\r\n          var cnt = nodes.length;\r\n          var i;\r\n          for (i = 0; i < cnt; i++) {\r\n              this.visit(nodes[i]);\r\n          }\r\n          return nodes;\r\n      };\r\n      SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n          if (!node) {\r\n              return node;\r\n          }\r\n          if (node.constructor === Array) {\r\n              return this.visitArray(node);\r\n          }\r\n          if (!node.blocksVisibility || node.blocksVisibility()) {\r\n              return node;\r\n          }\r\n          if (this.visible) {\r\n              node.ensureVisibility();\r\n          }\r\n          else {\r\n              node.ensureInvisibility();\r\n          }\r\n          node.accept(this);\r\n          return node;\r\n      };\r\n      return SetTreeVisibilityVisitor;\r\n  }());\n\n  /* jshint loopfunc:true */\r\n  var ExtendFinderVisitor = /** @class */ (function () {\r\n      function ExtendFinderVisitor() {\r\n          this._visitor = new Visitor(this);\r\n          this.contexts = [];\r\n          this.allExtendsStack = [[]];\r\n      }\r\n      ExtendFinderVisitor.prototype.run = function (root) {\r\n          root = this._visitor.visit(root);\r\n          root.allExtends = this.allExtendsStack[0];\r\n          return root;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var i;\r\n          var j;\r\n          var extend;\r\n          var allSelectorsExtendList = [];\r\n          var extendList;\r\n          // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n          var rules = rulesetNode.rules;\r\n          var ruleCnt = rules ? rules.length : 0;\r\n          for (i = 0; i < ruleCnt; i++) {\r\n              if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                  allSelectorsExtendList.push(rules[i]);\r\n                  rulesetNode.extendOnEveryPath = true;\r\n              }\r\n          }\r\n          // now find every selector and apply the extends that apply to all extends\r\n          // and the ones which apply to an individual extend\r\n          var paths = rulesetNode.paths;\r\n          for (i = 0; i < paths.length; i++) {\r\n              var selectorPath = paths[i];\r\n              var selector = selectorPath[selectorPath.length - 1];\r\n              var selExtendList = selector.extendList;\r\n              extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                  : allSelectorsExtendList;\r\n              if (extendList) {\r\n                  extendList = extendList.map(function (allSelectorsExtend) { return allSelectorsExtend.clone(); });\r\n              }\r\n              for (j = 0; j < extendList.length; j++) {\r\n                  this.foundExtends = true;\r\n                  extend = extendList[j];\r\n                  extend.findSelfSelectors(selectorPath);\r\n                  extend.ruleset = rulesetNode;\r\n                  if (j === 0) {\r\n                      extend.firstExtendOnThisSelectorPath = true;\r\n                  }\r\n                  this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n              }\r\n          }\r\n          this.contexts.push(rulesetNode.selectors);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          if (!rulesetNode.root) {\r\n              this.contexts.length = this.contexts.length - 1;\r\n          }\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          mediaNode.allExtends = [];\r\n          this.allExtendsStack.push(mediaNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          atRuleNode.allExtends = [];\r\n          this.allExtendsStack.push(atRuleNode.allExtends);\r\n      };\r\n      ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n      };\r\n      return ExtendFinderVisitor;\r\n  }());\r\n  var ProcessExtendsVisitor = /** @class */ (function () {\r\n      function ProcessExtendsVisitor() {\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      ProcessExtendsVisitor.prototype.run = function (root) {\r\n          var extendFinder = new ExtendFinderVisitor();\r\n          this.extendIndices = {};\r\n          extendFinder.run(root);\r\n          if (!extendFinder.foundExtends) {\r\n              return root;\r\n          }\r\n          root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n          this.allExtendsStack = [root.allExtends];\r\n          var newRoot = this._visitor.visit(root);\r\n          this.checkExtendsForNonMatched(root.allExtends);\r\n          return newRoot;\r\n      };\r\n      ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n          var indices = this.extendIndices;\r\n          extendList.filter(function (extend) { return !extend.hasFoundMatches && extend.parent_ids.length == 1; }).forEach(function (extend) {\r\n              var selector = '_unknown_';\r\n              try {\r\n                  selector = extend.selector.toCSS({});\r\n              }\r\n              catch (_) { }\r\n              if (!indices[extend.index + \" \" + selector]) {\r\n                  indices[extend.index + \" \" + selector] = true;\r\n                  logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n              }\r\n          });\r\n      };\r\n      ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n          //\r\n          // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n          // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n          // this means this new extend can then go and alter other extends\r\n          //\r\n          // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n          // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n          // processed if we look at each selector at a time, as is done in visitRuleset\r\n          var extendIndex;\r\n          var targetExtendIndex;\r\n          var matches;\r\n          var extendsToAdd = [];\r\n          var newSelector;\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          var extend;\r\n          var targetExtend;\r\n          var newExtend;\r\n          iterationCount = iterationCount || 0;\r\n          // loop through comparing every extend with every target extend.\r\n          // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n          // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n          // and the second is the target.\r\n          // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n          // case when processing media queries\r\n          for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n              for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                  extend = extendsList[extendIndex];\r\n                  targetExtend = extendsListTarget[targetExtendIndex];\r\n                  // look for circular references\r\n                  if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                      continue;\r\n                  }\r\n                  // find a match in the target extends self selector (the bit before :extend)\r\n                  selectorPath = [targetExtend.selfSelectors[0]];\r\n                  matches = extendVisitor.findMatch(extend, selectorPath);\r\n                  if (matches.length) {\r\n                      extend.hasFoundMatches = true;\r\n                      // we found a match, so for each self selector..\r\n                      extend.selfSelectors.forEach(function (selfSelector) {\r\n                          var info = targetExtend.visibilityInfo();\r\n                          // process the extend as usual\r\n                          newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                          // but now we create a new extend from it\r\n                          newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                          newExtend.selfSelectors = newSelector;\r\n                          // add the extend onto the list of extends for that selector\r\n                          newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                          // record that we need to add it.\r\n                          extendsToAdd.push(newExtend);\r\n                          newExtend.ruleset = targetExtend.ruleset;\r\n                          // remember its parents for circular references\r\n                          newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                          // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                          // extends will look at the same selector path, so when extending\r\n                          // we know that any others will be duplicates in terms of what is added to the css\r\n                          if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                              newExtend.firstExtendOnThisSelectorPath = true;\r\n                              targetExtend.ruleset.paths.push(newSelector);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          if (extendsToAdd.length) {\r\n              // try to detect circular references to stop a stack overflow.\r\n              // may no longer be needed.\r\n              this.extendChainCount++;\r\n              if (iterationCount > 100) {\r\n                  var selectorOne = '{unable to calculate}';\r\n                  var selectorTwo = '{unable to calculate}';\r\n                  try {\r\n                      selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                      selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                  }\r\n                  catch (e) { }\r\n                  throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n              }\r\n              // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n              // d extending e...\r\n              return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n          }\r\n          else {\r\n              return extendsToAdd;\r\n          }\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          if (rulesetNode.root) {\r\n              return;\r\n          }\r\n          var matches;\r\n          var pathIndex;\r\n          var extendIndex;\r\n          var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n          var selectorsToAdd = [];\r\n          var extendVisitor = this;\r\n          var selectorPath;\r\n          // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n          for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n              for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                  selectorPath = rulesetNode.paths[pathIndex];\r\n                  // extending extends happens initially, before the main pass\r\n                  if (rulesetNode.extendOnEveryPath) {\r\n                      continue;\r\n                  }\r\n                  var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                  if (extendList && extendList.length) {\r\n                      continue;\r\n                  }\r\n                  matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                  if (matches.length) {\r\n                      allExtends[extendIndex].hasFoundMatches = true;\r\n                      allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                          var extendedSelectors;\r\n                          extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                          selectorsToAdd.push(extendedSelectors);\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n          rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n      };\r\n      ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n          //\r\n          // look through the haystack selector path to try and find the needle - extend.selector\r\n          // returns an array of selector matches that can then be replaced\r\n          //\r\n          var haystackSelectorIndex;\r\n          var hackstackSelector;\r\n          var hackstackElementIndex;\r\n          var haystackElement;\r\n          var targetCombinator;\r\n          var i;\r\n          var extendVisitor = this;\r\n          var needleElements = extend.selector.elements;\r\n          var potentialMatches = [];\r\n          var potentialMatch;\r\n          var matches = [];\r\n          // loop through the haystack elements\r\n          for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n              hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n              for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                  haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                  // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                  if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                      potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                          initialCombinator: haystackElement.combinator });\r\n                  }\r\n                  for (i = 0; i < potentialMatches.length; i++) {\r\n                      potentialMatch = potentialMatches[i];\r\n                      // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                      // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                      // work out what the resulting combinator will be\r\n                      targetCombinator = haystackElement.combinator.value;\r\n                      if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                          targetCombinator = ' ';\r\n                      }\r\n                      // if we don't match, null our match to indicate failure\r\n                      if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                          (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                          potentialMatch = null;\r\n                      }\r\n                      else {\r\n                          potentialMatch.matched++;\r\n                      }\r\n                      // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                      if (potentialMatch) {\r\n                          potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                          if (potentialMatch.finished &&\r\n                              (!extend.allowAfter &&\r\n                                  (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                              potentialMatch = null;\r\n                          }\r\n                      }\r\n                      // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                      if (potentialMatch) {\r\n                          if (potentialMatch.finished) {\r\n                              potentialMatch.length = needleElements.length;\r\n                              potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                              potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                              potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                              matches.push(potentialMatch);\r\n                          }\r\n                      }\r\n                      else {\r\n                          potentialMatches.splice(i, 1);\r\n                          i--;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return matches;\r\n      };\r\n      ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n          if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          if (elementValue1 instanceof tree.Attribute) {\r\n              if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                  return false;\r\n              }\r\n              if (!elementValue1.value || !elementValue2.value) {\r\n                  if (elementValue1.value || elementValue2.value) {\r\n                      return false;\r\n                  }\r\n                  return true;\r\n              }\r\n              elementValue1 = elementValue1.value.value || elementValue1.value;\r\n              elementValue2 = elementValue2.value.value || elementValue2.value;\r\n              return elementValue1 === elementValue2;\r\n          }\r\n          elementValue1 = elementValue1.value;\r\n          elementValue2 = elementValue2.value;\r\n          if (elementValue1 instanceof tree.Selector) {\r\n              if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                  return false;\r\n              }\r\n              for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                  if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                      if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                          return false;\r\n                      }\r\n                  }\r\n                  if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n          // for a set of matches, replace each match with the replacement selector\r\n          var currentSelectorPathIndex = 0;\r\n          var currentSelectorPathElementIndex = 0;\r\n          var path = [];\r\n          var matchIndex;\r\n          var selector;\r\n          var firstElement;\r\n          var match;\r\n          var newElements;\r\n          for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n              match = matches[matchIndex];\r\n              selector = selectorPath[match.pathIndex];\r\n              firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n              if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                  path[path.length - 1].elements = path[path.length - 1]\r\n                      .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n              newElements = selector.elements\r\n                  .slice(currentSelectorPathElementIndex, match.index)\r\n                  .concat([firstElement])\r\n                  .concat(replacementSelector.elements.slice(1));\r\n              if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                  path[path.length - 1].elements =\r\n                      path[path.length - 1].elements.concat(newElements);\r\n              }\r\n              else {\r\n                  path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                  path.push(new tree.Selector(newElements));\r\n              }\r\n              currentSelectorPathIndex = match.endPathIndex;\r\n              currentSelectorPathElementIndex = match.endPathElementIndex;\r\n              if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                  currentSelectorPathElementIndex = 0;\r\n                  currentSelectorPathIndex++;\r\n              }\r\n          }\r\n          if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n              path[path.length - 1].elements = path[path.length - 1]\r\n                  .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n              currentSelectorPathIndex++;\r\n          }\r\n          path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n          path = path.map(function (currentValue) {\r\n              // we can re-use elements here, because the visibility property matters only for selectors\r\n              var derived = currentValue.createDerived(currentValue.elements);\r\n              if (isVisible) {\r\n                  derived.ensureVisibility();\r\n              }\r\n              else {\r\n                  derived.ensureInvisibility();\r\n              }\r\n              return derived;\r\n          });\r\n          return path;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n          newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n          this.allExtendsStack.push(newAllExtends);\r\n      };\r\n      ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n          var lastIndex = this.allExtendsStack.length - 1;\r\n          this.allExtendsStack.length = lastIndex;\r\n      };\r\n      return ProcessExtendsVisitor;\r\n  }());\n\n  var JoinSelectorVisitor = /** @class */ (function () {\r\n      function JoinSelectorVisitor() {\r\n          this.contexts = [[]];\r\n          this._visitor = new Visitor(this);\r\n      }\r\n      JoinSelectorVisitor.prototype.run = function (root) {\r\n          return this._visitor.visit(root);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n          visitArgs.visitDeeper = false;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          var paths = [];\r\n          var selectors;\r\n          this.contexts.push(paths);\r\n          if (!rulesetNode.root) {\r\n              selectors = rulesetNode.selectors;\r\n              if (selectors) {\r\n                  selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                  rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                  if (selectors) {\r\n                      rulesetNode.joinSelectors(paths, context, selectors);\r\n                  }\r\n              }\r\n              if (!selectors) {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              rulesetNode.paths = paths;\r\n          }\r\n      };\r\n      JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n          this.contexts.length = this.contexts.length - 1;\r\n      };\r\n      JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n      };\r\n      JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n          var context = this.contexts[this.contexts.length - 1];\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n          }\r\n      };\r\n      return JoinSelectorVisitor;\r\n  }());\n\n  var CSSVisitorUtils = /** @class */ (function () {\r\n      function CSSVisitorUtils(context) {\r\n          this._visitor = new Visitor(this);\r\n          this._context = context;\r\n      }\r\n      CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n          var rule;\r\n          if (!bodyRules) {\r\n              return false;\r\n          }\r\n          for (var r = 0; r < bodyRules.length; r++) {\r\n              rule = bodyRules[r];\r\n              if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                  // the atrule contains something that was referenced (likely by extend)\r\n                  // therefore it needs to be shown in output too\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      };\r\n      CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n          if (owner && owner.rules) {\r\n              owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n          }\r\n      };\r\n      CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n          return (owner && owner.rules)\r\n              ? (owner.rules.length === 0) : true;\r\n      };\r\n      CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n          return (rulesetNode && rulesetNode.paths)\r\n              ? (rulesetNode.paths.length > 0) : false;\r\n      };\r\n      CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n          if (!node.blocksVisibility()) {\r\n              if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                  return;\r\n              }\r\n              return node;\r\n          }\r\n          var compiledRulesBody = node.rules[0];\r\n          this.keepOnlyVisibleChilds(compiledRulesBody);\r\n          if (this.isEmpty(compiledRulesBody)) {\r\n              return;\r\n          }\r\n          node.ensureVisibility();\r\n          node.removeVisibilityBlock();\r\n          return node;\r\n      };\r\n      CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n          if (rulesetNode.firstRoot) {\r\n              return true;\r\n          }\r\n          if (this.isEmpty(rulesetNode)) {\r\n              return false;\r\n          }\r\n          if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n              return false;\r\n          }\r\n          return true;\r\n      };\r\n      return CSSVisitorUtils;\r\n  }());\r\n  var ToCSSVisitor = function (context) {\r\n      this._visitor = new Visitor(this);\r\n      this._context = context;\r\n      this.utils = new CSSVisitorUtils(context);\r\n  };\r\n  ToCSSVisitor.prototype = {\r\n      isReplacing: true,\r\n      run: function (root) {\r\n          return this._visitor.visit(root);\r\n      },\r\n      visitDeclaration: function (declNode, visitArgs) {\r\n          if (declNode.blocksVisibility() || declNode.variable) {\r\n              return;\r\n          }\r\n          return declNode;\r\n      },\r\n      visitMixinDefinition: function (mixinNode, visitArgs) {\r\n          // mixin definitions do not get eval'd - this means they keep state\r\n          // so we have to clear that state here so it isn't used if toCSS is called twice\r\n          mixinNode.frames = [];\r\n      },\r\n      visitExtend: function (extendNode, visitArgs) {\r\n      },\r\n      visitComment: function (commentNode, visitArgs) {\r\n          if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n              return;\r\n          }\r\n          return commentNode;\r\n      },\r\n      visitMedia: function (mediaNode, visitArgs) {\r\n          var originalRules = mediaNode.rules[0].rules;\r\n          mediaNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          return this.utils.resolveVisibility(mediaNode, originalRules);\r\n      },\r\n      visitImport: function (importNode, visitArgs) {\r\n          if (importNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          return importNode;\r\n      },\r\n      visitAtRule: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.rules && atRuleNode.rules.length) {\r\n              return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n          }\r\n          else {\r\n              return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n          }\r\n      },\r\n      visitAnonymous: function (anonymousNode, visitArgs) {\r\n          if (!anonymousNode.blocksVisibility()) {\r\n              anonymousNode.accept(this._visitor);\r\n              return anonymousNode;\r\n          }\r\n      },\r\n      visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n          // if there is only one nested ruleset and that one has no path, then it is\r\n          // just fake ruleset\r\n          function hasFakeRuleset(atRuleNode) {\r\n              var bodyRules = atRuleNode.rules;\r\n              return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n          }\r\n          function getBodyRules(atRuleNode) {\r\n              var nodeRules = atRuleNode.rules;\r\n              if (hasFakeRuleset(atRuleNode)) {\r\n                  return nodeRules[0].rules;\r\n              }\r\n              return nodeRules;\r\n          }\r\n          // it is still true that it is only one ruleset in array\r\n          // this is last such moment\r\n          // process childs\r\n          var originalRules = getBodyRules(atRuleNode);\r\n          atRuleNode.accept(this._visitor);\r\n          visitArgs.visitDeeper = false;\r\n          if (!this.utils.isEmpty(atRuleNode)) {\r\n              this._mergeRules(atRuleNode.rules[0].rules);\r\n          }\r\n          return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n      },\r\n      visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n          if (atRuleNode.blocksVisibility()) {\r\n              return;\r\n          }\r\n          if (atRuleNode.name === '@charset') {\r\n              // Only output the debug info together with subsequent @charset definitions\r\n              // a comment (or @media statement) before the actual @charset atrule would\r\n              // be considered illegal css as it has to be on the first line\r\n              if (this.charset) {\r\n                  if (atRuleNode.debugInfo) {\r\n                      var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                      comment.debugInfo = atRuleNode.debugInfo;\r\n                      return this._visitor.visit(comment);\r\n                  }\r\n                  return;\r\n              }\r\n              this.charset = true;\r\n          }\r\n          return atRuleNode;\r\n      },\r\n      checkValidNodes: function (rules, isRoot) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var ruleNode = rules[i];\r\n              if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                  throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                      index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode instanceof tree.Call) {\r\n                  throw { message: \"Function '\" + ruleNode.name + \"' is undefined\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n              if (ruleNode.type && !ruleNode.allowRoot) {\r\n                  throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n              }\r\n          }\r\n      },\r\n      visitRuleset: function (rulesetNode, visitArgs) {\r\n          // at this point rulesets are nested into each other\r\n          var rule;\r\n          var rulesets = [];\r\n          this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n          if (!rulesetNode.root) {\r\n              // remove invisible paths\r\n              this._compileRulesetPaths(rulesetNode);\r\n              // remove rulesets from this ruleset body and compile them separately\r\n              var nodeRules = rulesetNode.rules;\r\n              var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n              for (var i = 0; i < nodeRuleCnt;) {\r\n                  rule = nodeRules[i];\r\n                  if (rule && rule.rules) {\r\n                      // visit because we are moving them out from being a child\r\n                      rulesets.push(this._visitor.visit(rule));\r\n                      nodeRules.splice(i, 1);\r\n                      nodeRuleCnt--;\r\n                      continue;\r\n                  }\r\n                  i++;\r\n              }\r\n              // accept the visitor to remove rules and refactor itself\r\n              // then we can decide nogw whether we want it or not\r\n              // compile body\r\n              if (nodeRuleCnt > 0) {\r\n                  rulesetNode.accept(this._visitor);\r\n              }\r\n              else {\r\n                  rulesetNode.rules = null;\r\n              }\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          else { // if (! rulesetNode.root) {\r\n              rulesetNode.accept(this._visitor);\r\n              visitArgs.visitDeeper = false;\r\n          }\r\n          if (rulesetNode.rules) {\r\n              this._mergeRules(rulesetNode.rules);\r\n              this._removeDuplicateRules(rulesetNode.rules);\r\n          }\r\n          // now decide whether we keep the ruleset\r\n          if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n              rulesetNode.ensureVisibility();\r\n              rulesets.splice(0, 0, rulesetNode);\r\n          }\r\n          if (rulesets.length === 1) {\r\n              return rulesets[0];\r\n          }\r\n          return rulesets;\r\n      },\r\n      _compileRulesetPaths: function (rulesetNode) {\r\n          if (rulesetNode.paths) {\r\n              rulesetNode.paths = rulesetNode.paths\r\n                  .filter(function (p) {\r\n                  var i;\r\n                  if (p[0].elements[0].combinator.value === ' ') {\r\n                      p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                  }\r\n                  for (i = 0; i < p.length; i++) {\r\n                      if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                          return true;\r\n                      }\r\n                  }\r\n                  return false;\r\n              });\r\n          }\r\n      },\r\n      _removeDuplicateRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          // remove duplicates\r\n          var ruleCache = {};\r\n          var ruleList;\r\n          var rule;\r\n          var i;\r\n          for (i = rules.length - 1; i >= 0; i--) {\r\n              rule = rules[i];\r\n              if (rule instanceof tree.Declaration) {\r\n                  if (!ruleCache[rule.name]) {\r\n                      ruleCache[rule.name] = rule;\r\n                  }\r\n                  else {\r\n                      ruleList = ruleCache[rule.name];\r\n                      if (ruleList instanceof tree.Declaration) {\r\n                          ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                      }\r\n                      var ruleCSS = rule.toCSS(this._context);\r\n                      if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                          rules.splice(i, 1);\r\n                      }\r\n                      else {\r\n                          ruleList.push(ruleCSS);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      _mergeRules: function (rules) {\r\n          if (!rules) {\r\n              return;\r\n          }\r\n          var groups = {};\r\n          var groupsArr = [];\r\n          for (var i = 0; i < rules.length; i++) {\r\n              var rule = rules[i];\r\n              if (rule.merge) {\r\n                  var key = rule.name;\r\n                  groups[key] ? rules.splice(i--, 1) :\r\n                      groupsArr.push(groups[key] = []);\r\n                  groups[key].push(rule);\r\n              }\r\n          }\r\n          groupsArr.forEach(function (group) {\r\n              if (group.length > 0) {\r\n                  var result_1 = group[0];\r\n                  var space_1 = [];\r\n                  var comma_1 = [new tree.Expression(space_1)];\r\n                  group.forEach(function (rule) {\r\n                      if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                          comma_1.push(new tree.Expression(space_1 = []));\r\n                      }\r\n                      space_1.push(rule.value);\r\n                      result_1.important = result_1.important || rule.important;\r\n                  });\r\n                  result_1.value = new tree.Value(comma_1);\r\n              }\r\n          });\r\n      }\r\n  };\n\n  var visitors = {\r\n      Visitor: Visitor,\r\n      ImportVisitor: ImportVisitor,\r\n      MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n      ExtendVisitor: ProcessExtendsVisitor,\r\n      JoinSelectorVisitor: JoinSelectorVisitor,\r\n      ToCSSVisitor: ToCSSVisitor\r\n  };\n\n  // Split the input into chunks.\r\n  var chunker = (function (input, fail) {\r\n      var len = input.length;\r\n      var level = 0;\r\n      var parenLevel = 0;\r\n      var lastOpening;\r\n      var lastOpeningParen;\r\n      var lastMultiComment;\r\n      var lastMultiCommentEndBrace;\r\n      var chunks = [];\r\n      var emitFrom = 0;\r\n      var chunkerCurrentIndex;\r\n      var currentChunkStartIndex;\r\n      var cc;\r\n      var cc2;\r\n      var matched;\r\n      function emitChunk(force) {\r\n          var len = chunkerCurrentIndex - emitFrom;\r\n          if (((len < 512) && !force) || !len) {\r\n              return;\r\n          }\r\n          chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n          emitFrom = chunkerCurrentIndex + 1;\r\n      }\r\n      for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n          cc = input.charCodeAt(chunkerCurrentIndex);\r\n          if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n              // a-z or whitespace\r\n              continue;\r\n          }\r\n          switch (cc) {\r\n              case 40: // (\r\n                  parenLevel++;\r\n                  lastOpeningParen = chunkerCurrentIndex;\r\n                  continue;\r\n              case 41: // )\r\n                  if (--parenLevel < 0) {\r\n                      return fail('missing opening `(`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n              case 59: // ;\r\n                  if (!parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 123: // {\r\n                  level++;\r\n                  lastOpening = chunkerCurrentIndex;\r\n                  continue;\r\n              case 125: // }\r\n                  if (--level < 0) {\r\n                      return fail('missing opening `{`', chunkerCurrentIndex);\r\n                  }\r\n                  if (!level && !parenLevel) {\r\n                      emitChunk();\r\n                  }\r\n                  continue;\r\n              case 92: // \\\r\n                  if (chunkerCurrentIndex < len - 1) {\r\n                      chunkerCurrentIndex++;\r\n                      continue;\r\n                  }\r\n                  return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n              case 34:\r\n              case 39:\r\n              case 96: // \", ' and `\r\n                  matched = 0;\r\n                  currentChunkStartIndex = chunkerCurrentIndex;\r\n                  for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                      cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                      if (cc2 > 96) {\r\n                          continue;\r\n                      }\r\n                      if (cc2 == cc) {\r\n                          matched = 1;\r\n                          break;\r\n                      }\r\n                      if (cc2 == 92) { // \\\r\n                          if (chunkerCurrentIndex == len - 1) {\r\n                              return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                          }\r\n                          chunkerCurrentIndex++;\r\n                      }\r\n                  }\r\n                  if (matched) {\r\n                      continue;\r\n                  }\r\n                  return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n              case 47: // /, check for comment\r\n                  if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                      continue;\r\n                  }\r\n                  cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                  if (cc2 == 47) {\r\n                      // //, find lnfeed\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  else if (cc2 == 42) {\r\n                      // /*, find */\r\n                      lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                      for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                          cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                          if (cc2 == 125) {\r\n                              lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                          }\r\n                          if (cc2 != 42) {\r\n                              continue;\r\n                          }\r\n                          if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      if (chunkerCurrentIndex == len - 1) {\r\n                          return fail('missing closing `*/`', currentChunkStartIndex);\r\n                      }\r\n                      chunkerCurrentIndex++;\r\n                  }\r\n                  continue;\r\n              case 42: // *, check for unmatched */\r\n                  if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                      return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                  }\r\n                  continue;\r\n          }\r\n      }\r\n      if (level !== 0) {\r\n          if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n              return fail('missing closing `}` or `*/`', lastOpening);\r\n          }\r\n          else {\r\n              return fail('missing closing `}`', lastOpening);\r\n          }\r\n      }\r\n      else if (parenLevel !== 0) {\r\n          return fail('missing closing `)`', lastOpeningParen);\r\n      }\r\n      emitChunk(true);\r\n      return chunks;\r\n  });\n\n  var getParserInput = (function () {\r\n      var // Less input string\r\n      input;\r\n      var // current chunk\r\n      j;\r\n      var // holds state for backtracking\r\n      saveStack = [];\r\n      var // furthest index the parser has gone to\r\n      furthest;\r\n      var // if this is furthest we got to, this is the probably cause\r\n      furthestPossibleErrorMessage;\r\n      var // chunkified input\r\n      chunks;\r\n      var // current chunk\r\n      current;\r\n      var // index of current chunk, in `input`\r\n      currentPos;\r\n      var parserInput = {};\r\n      var CHARCODE_SPACE = 32;\r\n      var CHARCODE_TAB = 9;\r\n      var CHARCODE_LF = 10;\r\n      var CHARCODE_CR = 13;\r\n      var CHARCODE_PLUS = 43;\r\n      var CHARCODE_COMMA = 44;\r\n      var CHARCODE_FORWARD_SLASH = 47;\r\n      var CHARCODE_9 = 57;\r\n      function skipWhitespace(length) {\r\n          var oldi = parserInput.i;\r\n          var oldj = j;\r\n          var curr = parserInput.i - currentPos;\r\n          var endIndex = parserInput.i + current.length - curr;\r\n          var mem = (parserInput.i += length);\r\n          var inp = input;\r\n          var c;\r\n          var nextChar;\r\n          var comment;\r\n          for (; parserInput.i < endIndex; parserInput.i++) {\r\n              c = inp.charCodeAt(parserInput.i);\r\n              if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                  nextChar = inp.charAt(parserInput.i + 1);\r\n                  if (nextChar === '/') {\r\n                      comment = { index: parserInput.i, isLineComment: true };\r\n                      var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                      if (nextNewLine < 0) {\r\n                          nextNewLine = endIndex;\r\n                      }\r\n                      parserInput.i = nextNewLine;\r\n                      comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                      parserInput.commentStore.push(comment);\r\n                      continue;\r\n                  }\r\n                  else if (nextChar === '*') {\r\n                      var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                      if (nextStarSlash >= 0) {\r\n                          comment = {\r\n                              index: parserInput.i,\r\n                              text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                              isLineComment: false\r\n                          };\r\n                          parserInput.i += comment.text.length - 1;\r\n                          parserInput.commentStore.push(comment);\r\n                          continue;\r\n                      }\r\n                  }\r\n                  break;\r\n              }\r\n              if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                  break;\r\n              }\r\n          }\r\n          current = current.slice(length + parserInput.i - mem + curr);\r\n          currentPos = parserInput.i;\r\n          if (!current.length) {\r\n              if (j < chunks.length - 1) {\r\n                  current = chunks[++j];\r\n                  skipWhitespace(0); // skip space at the beginning of a chunk\r\n                  return true; // things changed\r\n              }\r\n              parserInput.finished = true;\r\n          }\r\n          return oldi !== parserInput.i || oldj !== j;\r\n      }\r\n      parserInput.save = function () {\r\n          currentPos = parserInput.i;\r\n          saveStack.push({ current: current, i: parserInput.i, j: j });\r\n      };\r\n      parserInput.restore = function (possibleErrorMessage) {\r\n          if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n              furthest = parserInput.i;\r\n              furthestPossibleErrorMessage = possibleErrorMessage;\r\n          }\r\n          var state = saveStack.pop();\r\n          current = state.current;\r\n          currentPos = parserInput.i = state.i;\r\n          j = state.j;\r\n      };\r\n      parserInput.forget = function () {\r\n          saveStack.pop();\r\n      };\r\n      parserInput.isWhitespace = function (offset) {\r\n          var pos = parserInput.i + (offset || 0);\r\n          var code = input.charCodeAt(pos);\r\n          return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n      };\r\n      // Specialization of $(tok)\r\n      parserInput.$re = function (tok) {\r\n          if (parserInput.i > currentPos) {\r\n              current = current.slice(parserInput.i - currentPos);\r\n              currentPos = parserInput.i;\r\n          }\r\n          var m = tok.exec(current);\r\n          if (!m) {\r\n              return null;\r\n          }\r\n          skipWhitespace(m[0].length);\r\n          if (typeof m === 'string') {\r\n              return m;\r\n          }\r\n          return m.length === 1 ? m[0] : m;\r\n      };\r\n      parserInput.$char = function (tok) {\r\n          if (input.charAt(parserInput.i) !== tok) {\r\n              return null;\r\n          }\r\n          skipWhitespace(1);\r\n          return tok;\r\n      };\r\n      parserInput.$str = function (tok) {\r\n          var tokLength = tok.length;\r\n          // https://jsperf.com/string-startswith/21\r\n          for (var i = 0; i < tokLength; i++) {\r\n              if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                  return null;\r\n              }\r\n          }\r\n          skipWhitespace(tokLength);\r\n          return tok;\r\n      };\r\n      parserInput.$quoted = function (loc) {\r\n          var pos = loc || parserInput.i;\r\n          var startChar = input.charAt(pos);\r\n          if (startChar !== '\\'' && startChar !== '\"') {\r\n              return;\r\n          }\r\n          var length = input.length;\r\n          var currentPosition = pos;\r\n          for (var i = 1; i + currentPosition < length; i++) {\r\n              var nextChar = input.charAt(i + currentPosition);\r\n              switch (nextChar) {\r\n                  case '\\\\':\r\n                      i++;\r\n                      continue;\r\n                  case '\\r':\r\n                  case '\\n':\r\n                      break;\r\n                  case startChar:\r\n                      var str = input.substr(currentPosition, i + 1);\r\n                      if (!loc && loc !== 0) {\r\n                          skipWhitespace(i + 1);\r\n                          return str;\r\n                      }\r\n                      return [startChar, str];\r\n              }\r\n          }\r\n          return null;\r\n      };\r\n      /**\r\n       * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n       * until matching token (outside of blocks)\r\n       */\r\n      parserInput.$parseUntil = function (tok) {\r\n          var quote = '';\r\n          var returnVal = null;\r\n          var inComment = false;\r\n          var blockDepth = 0;\r\n          var blockStack = [];\r\n          var parseGroups = [];\r\n          var length = input.length;\r\n          var startPos = parserInput.i;\r\n          var lastPos = parserInput.i;\r\n          var i = parserInput.i;\r\n          var loop = true;\r\n          var testChar;\r\n          if (typeof tok === 'string') {\r\n              testChar = function (char) { return char === tok; };\r\n          }\r\n          else {\r\n              testChar = function (char) { return tok.test(char); };\r\n          }\r\n          do {\r\n              var nextChar = input.charAt(i);\r\n              if (blockDepth === 0 && testChar(nextChar)) {\r\n                  returnVal = input.substr(lastPos, i - lastPos);\r\n                  if (returnVal) {\r\n                      parseGroups.push(returnVal);\r\n                  }\r\n                  else {\r\n                      parseGroups.push(' ');\r\n                  }\r\n                  returnVal = parseGroups;\r\n                  skipWhitespace(i - startPos);\r\n                  loop = false;\r\n              }\r\n              else {\r\n                  if (inComment) {\r\n                      if (nextChar === '*' &&\r\n                          input.charAt(i + 1) === '/') {\r\n                          i++;\r\n                          blockDepth--;\r\n                          inComment = false;\r\n                      }\r\n                      i++;\r\n                      continue;\r\n                  }\r\n                  switch (nextChar) {\r\n                      case '\\\\':\r\n                          i++;\r\n                          nextChar = input.charAt(i);\r\n                          parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                          lastPos = i + 1;\r\n                          break;\r\n                      case '/':\r\n                          if (input.charAt(i + 1) === '*') {\r\n                              i++;\r\n                              inComment = true;\r\n                              blockDepth++;\r\n                          }\r\n                          break;\r\n                      case '\\'':\r\n                      case '\"':\r\n                          quote = parserInput.$quoted(i);\r\n                          if (quote) {\r\n                              parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                              i += quote[1].length - 1;\r\n                              lastPos = i + 1;\r\n                          }\r\n                          else {\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = nextChar;\r\n                              loop = false;\r\n                          }\r\n                          break;\r\n                      case '{':\r\n                          blockStack.push('}');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '(':\r\n                          blockStack.push(')');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '[':\r\n                          blockStack.push(']');\r\n                          blockDepth++;\r\n                          break;\r\n                      case '}':\r\n                      case ')':\r\n                      case ']':\r\n                          var expected = blockStack.pop();\r\n                          if (nextChar === expected) {\r\n                              blockDepth--;\r\n                          }\r\n                          else {\r\n                              // move the parser to the error and return expected\r\n                              skipWhitespace(i - startPos);\r\n                              returnVal = expected;\r\n                              loop = false;\r\n                          }\r\n                  }\r\n                  i++;\r\n                  if (i > length) {\r\n                      loop = false;\r\n                  }\r\n              }\r\n          } while (loop);\r\n          return returnVal ? returnVal : null;\r\n      };\r\n      parserInput.autoCommentAbsorb = true;\r\n      parserInput.commentStore = [];\r\n      parserInput.finished = false;\r\n      // Same as $(), but don't change the state of the parser,\r\n      // just return the match.\r\n      parserInput.peek = function (tok) {\r\n          if (typeof tok === 'string') {\r\n              // https://jsperf.com/string-startswith/21\r\n              for (var i = 0; i < tok.length; i++) {\r\n                  if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                      return false;\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          else {\r\n              return tok.test(current);\r\n          }\r\n      };\r\n      // Specialization of peek()\r\n      // TODO remove or change some currentChar calls to peekChar\r\n      parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n      parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n      parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n      parserInput.getInput = function () { return input; };\r\n      parserInput.peekNotNumeric = function () {\r\n          var c = input.charCodeAt(parserInput.i);\r\n          // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n          return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n      };\r\n      parserInput.start = function (str, chunkInput, failFunction) {\r\n          input = str;\r\n          parserInput.i = j = currentPos = furthest = 0;\r\n          // chunking apparently makes things quicker (but my tests indicate\r\n          // it might actually make things slower in node at least)\r\n          // and it is a non-perfect parse - it can't recognise\r\n          // unquoted urls, meaning it can't distinguish comments\r\n          // meaning comments with quotes or {}() in them get 'counted'\r\n          // and then lead to parse errors.\r\n          // In addition if the chunking chunks in the wrong place we might\r\n          // not be able to parse a parser statement in one go\r\n          // this is officially deprecated but can be switched on via an option\r\n          // in the case it causes too much performance issues.\r\n          if (chunkInput) {\r\n              chunks = chunker(str, failFunction);\r\n          }\r\n          else {\r\n              chunks = [str];\r\n          }\r\n          current = chunks[0];\r\n          skipWhitespace(0);\r\n      };\r\n      parserInput.end = function () {\r\n          var message;\r\n          var isFinished = parserInput.i >= input.length;\r\n          if (parserInput.i < furthest) {\r\n              message = furthestPossibleErrorMessage;\r\n              parserInput.i = furthest;\r\n          }\r\n          return {\r\n              isFinished: isFinished,\r\n              furthest: parserInput.i,\r\n              furthestPossibleErrorMessage: message,\r\n              furthestReachedEnd: parserInput.i >= input.length - 1,\r\n              furthestChar: input[parserInput.i]\r\n          };\r\n      };\r\n      return parserInput;\r\n  });\n\n  //\r\n  // less.js - parser\r\n  //\r\n  //    A relatively straight-forward predictive parser.\r\n  //    There is no tokenization/lexing stage, the input is parsed\r\n  //    in one sweep.\r\n  //\r\n  //    To make the parser fast enough to run in the browser, several\r\n  //    optimization had to be made:\r\n  //\r\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n  //      The solution is to chunkify the input into smaller strings.\r\n  //      The chunks are stored in the `chunks` var,\r\n  //      `j` holds the current chunk index, and `currentPos` holds\r\n  //      the index of the current chunk in relation to `input`.\r\n  //      This gives us an almost 4x speed-up.\r\n  //\r\n  //    - In many cases, we don't need to match individual tokens;\r\n  //      for example, if a value doesn't hold any variables, operations\r\n  //      or dynamic references, the parser can effectively 'skip' it,\r\n  //      treating it as a literal.\r\n  //      An example would be '1px solid #000' - which evaluates to itself,\r\n  //      we don't need to know what the individual components are.\r\n  //      The drawback, of course is that you don't get the benefits of\r\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n  //      and a smaller speed-up in the code-gen.\r\n  //\r\n  //\r\n  //    Token matching is done with the `$` function, which either takes\r\n  //    a terminal string or regexp, or a non-terminal function to call.\r\n  //    It also takes care of moving all the indices forwards.\r\n  //\r\n  var Parser = function Parser(context, imports, fileInfo) {\r\n      var parsers;\r\n      var parserInput = getParserInput();\r\n      function error(msg, type) {\r\n          throw new LessError({\r\n              index: parserInput.i,\r\n              filename: fileInfo.filename,\r\n              type: type || 'Syntax',\r\n              message: msg\r\n          }, imports);\r\n      }\r\n      function expect(arg, msg) {\r\n          // some older browsers return typeof 'function' for RegExp\r\n          var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n          if (result) {\r\n              return result;\r\n          }\r\n          error(msg || (typeof arg === 'string'\r\n              ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n              : 'unexpected token'));\r\n      }\r\n      // Specialization of expect()\r\n      function expectChar(arg, msg) {\r\n          if (parserInput.$char(arg)) {\r\n              return arg;\r\n          }\r\n          error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n      }\r\n      function getDebugInfo(index) {\r\n          var filename = fileInfo.filename;\r\n          return {\r\n              lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n              fileName: filename\r\n          };\r\n      }\r\n      /**\r\n       *  Used after initial parsing to create nodes on the fly\r\n       *\r\n       *  @param {String} str          - string to parse\r\n       *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n       *  @param {Number} currentIndex - start number to begin indexing\r\n       *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n       */\r\n      function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n          var result;\r\n          var returnNodes = [];\r\n          var parser = parserInput;\r\n          try {\r\n              parser.start(str, false, function fail(msg, index) {\r\n                  callback({\r\n                      message: msg,\r\n                      index: index + currentIndex\r\n                  });\r\n              });\r\n              for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                  i = parser.i;\r\n                  result = parsers[p]();\r\n                  if (result) {\r\n                      try {\r\n                          result._index = i + currentIndex;\r\n                          result._fileInfo = fileInfo;\r\n                      }\r\n                      catch (e) { }\r\n                      returnNodes.push(result);\r\n                  }\r\n                  else {\r\n                      returnNodes.push(null);\r\n                  }\r\n              }\r\n              var endInfo = parser.end();\r\n              if (endInfo.isFinished) {\r\n                  callback(null, returnNodes);\r\n              }\r\n              else {\r\n                  callback(true, null);\r\n              }\r\n          }\r\n          catch (e) {\r\n              throw new LessError({\r\n                  index: e.index + currentIndex,\r\n                  message: e.message\r\n              }, imports, fileInfo.filename);\r\n          }\r\n      }\r\n      //\r\n      // The Parser\r\n      //\r\n      return {\r\n          parserInput: parserInput,\r\n          imports: imports,\r\n          fileInfo: fileInfo,\r\n          parseNode: parseNode,\r\n          //\r\n          // Parse an input string into an abstract syntax tree,\r\n          // @param str A string containing 'less' markup\r\n          // @param callback call `callback` when done.\r\n          // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n          //\r\n          parse: function (str, callback, additionalData) {\r\n              var root;\r\n              var error = null;\r\n              var globalVars;\r\n              var modifyVars;\r\n              var ignored;\r\n              var preText = '';\r\n              globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n              modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n              if (context.pluginManager) {\r\n                  var preProcessors = context.pluginManager.getPreProcessors();\r\n                  for (var i = 0; i < preProcessors.length; i++) {\r\n                      str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                  }\r\n              }\r\n              if (globalVars || (additionalData && additionalData.banner)) {\r\n                  preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                  ignored = imports.contentsIgnoredChars;\r\n                  ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                  ignored[fileInfo.filename] += preText.length;\r\n              }\r\n              str = str.replace(/\\r\\n?/g, '\\n');\r\n              // Remove potential UTF Byte Order Mark\r\n              str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n              imports.contents[fileInfo.filename] = str;\r\n              // Start with the primary rule.\r\n              // The whole syntax tree is held under a Ruleset node,\r\n              // with the `root` property set to true, so no `{}` are\r\n              // output. The callback is called when the input is parsed.\r\n              try {\r\n                  parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                      throw new LessError({\r\n                          index: index,\r\n                          type: 'Parse',\r\n                          message: msg,\r\n                          filename: fileInfo.filename\r\n                      }, imports);\r\n                  });\r\n                  tree.Node.prototype.parse = this;\r\n                  root = new tree.Ruleset(null, this.parsers.primary());\r\n                  tree.Node.prototype.rootNode = root;\r\n                  root.root = true;\r\n                  root.firstRoot = true;\r\n                  root.functionRegistry = functionRegistry.inherit();\r\n              }\r\n              catch (e) {\r\n                  return callback(new LessError(e, imports, fileInfo.filename));\r\n              }\r\n              // If `i` is smaller than the `input.length - 1`,\r\n              // it means the parser wasn't able to parse the whole\r\n              // string, so we've got a parsing error.\r\n              //\r\n              // We try to extract a \\n delimited string,\r\n              // showing the line where the parse error occurred.\r\n              // We split it up into two parts (the part which parsed,\r\n              // and the part which didn't), so we can color them differently.\r\n              var endInfo = parserInput.end();\r\n              if (!endInfo.isFinished) {\r\n                  var message = endInfo.furthestPossibleErrorMessage;\r\n                  if (!message) {\r\n                      message = 'Unrecognised input';\r\n                      if (endInfo.furthestChar === '}') {\r\n                          message += '. Possibly missing opening \\'{\\'';\r\n                      }\r\n                      else if (endInfo.furthestChar === ')') {\r\n                          message += '. Possibly missing opening \\'(\\'';\r\n                      }\r\n                      else if (endInfo.furthestReachedEnd) {\r\n                          message += '. Possibly missing something';\r\n                      }\r\n                  }\r\n                  error = new LessError({\r\n                      type: 'Parse',\r\n                      message: message,\r\n                      index: endInfo.furthest,\r\n                      filename: fileInfo.filename\r\n                  }, imports);\r\n              }\r\n              var finish = function (e) {\r\n                  e = error || e || imports.error;\r\n                  if (e) {\r\n                      if (!(e instanceof LessError)) {\r\n                          e = new LessError(e, imports, fileInfo.filename);\r\n                      }\r\n                      return callback(e);\r\n                  }\r\n                  else {\r\n                      return callback(null, root);\r\n                  }\r\n              };\r\n              if (context.processImports !== false) {\r\n                  new visitors.ImportVisitor(imports, finish)\r\n                      .run(root);\r\n              }\r\n              else {\r\n                  return finish();\r\n              }\r\n          },\r\n          //\r\n          // Here in, the parsing rules/functions\r\n          //\r\n          // The basic structure of the syntax tree generated is as follows:\r\n          //\r\n          //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n          //\r\n          // Here's some Less code:\r\n          //\r\n          //    .class {\r\n          //      color: #fff;\r\n          //      border: 1px solid #000;\r\n          //      width: @w + 4px;\r\n          //      > .child {...}\r\n          //    }\r\n          //\r\n          // And here's what the parse tree might look like:\r\n          //\r\n          //     Ruleset (Selector '.class', [\r\n          //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n          //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n          //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n          //         Ruleset (Selector [Element '>', '.child'], [...])\r\n          //     ])\r\n          //\r\n          //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n          //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n          //  first, before parsing, that's when we use `peek()`.\r\n          //\r\n          parsers: parsers = {\r\n              //\r\n              // The `primary` rule is the *entry* and *exit* point of the parser.\r\n              // The rules here can appear at any level of the parse tree.\r\n              //\r\n              // The recursive nature of the grammar is an interplay between the `block`\r\n              // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n              // as represented by this simplified grammar:\r\n              //\r\n              //     primary  →  (ruleset | declaration)+\r\n              //     ruleset  →  selector+ block\r\n              //     block    →  '{' primary '}'\r\n              //\r\n              // Only at one point is the primary rule not called from the\r\n              // block rule: at the root level.\r\n              //\r\n              primary: function () {\r\n                  var mixin = this.mixin;\r\n                  var root = [];\r\n                  var node;\r\n                  while (true) {\r\n                      while (true) {\r\n                          node = this.comment();\r\n                          if (!node) {\r\n                              break;\r\n                          }\r\n                          root.push(node);\r\n                      }\r\n                      // always process comments before deciding if finished\r\n                      if (parserInput.finished) {\r\n                          break;\r\n                      }\r\n                      if (parserInput.peek('}')) {\r\n                          break;\r\n                      }\r\n                      node = this.extendRule();\r\n                      if (node) {\r\n                          root = root.concat(node);\r\n                          continue;\r\n                      }\r\n                      node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                          this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                      if (node) {\r\n                          root.push(node);\r\n                      }\r\n                      else {\r\n                          var foundSemiColon = false;\r\n                          while (parserInput.$char(';')) {\r\n                              foundSemiColon = true;\r\n                          }\r\n                          if (!foundSemiColon) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  }\r\n                  return root;\r\n              },\r\n              // comments are collected by the main parsing mechanism and then assigned to nodes\r\n              // where the current structure allows it\r\n              comment: function () {\r\n                  if (parserInput.commentStore.length) {\r\n                      var comment = parserInput.commentStore.shift();\r\n                      return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Entities are tokens which can be found inside an Expression\r\n              //\r\n              entities: {\r\n                  mixinLookup: function () {\r\n                      return parsers.mixin.call(true, true);\r\n                  },\r\n                  //\r\n                  // A string, which supports escaping \" and '\r\n                  //\r\n                  //     \"milky way\" 'he\\'s the one!'\r\n                  //\r\n                  quoted: function (forceEscaped) {\r\n                      var str;\r\n                      var index = parserInput.i;\r\n                      var isEscaped = false;\r\n                      parserInput.save();\r\n                      if (parserInput.$char('~')) {\r\n                          isEscaped = true;\r\n                      }\r\n                      else if (forceEscaped) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      str = parserInput.$quoted();\r\n                      if (!str) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A catch-all word, such as:\r\n                  //\r\n                  //     black border-collapse\r\n                  //\r\n                  keyword: function () {\r\n                      var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                      if (k) {\r\n                          return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A function call\r\n                  //\r\n                  //     rgb(255, 0, 255)\r\n                  //\r\n                  // The arguments are parsed with the `entities.arguments` parser.\r\n                  //\r\n                  call: function () {\r\n                      var name;\r\n                      var args;\r\n                      var func;\r\n                      var index = parserInput.i;\r\n                      // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                      if (parserInput.peek(/^url\\(/i)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\r\n                      if (!name) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      name = name[1];\r\n                      func = this.customFuncCall(name);\r\n                      if (func) {\r\n                          args = func.parse();\r\n                          if (args && func.stop) {\r\n                              parserInput.forget();\r\n                              return args;\r\n                          }\r\n                      }\r\n                      args = this.arguments(args);\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return new (tree.Call)(name, args, index, fileInfo);\r\n                  },\r\n                  //\r\n                  // Parsing rules for functions with non-standard args, e.g.:\r\n                  //\r\n                  //     boolean(not(2 > 1))\r\n                  //\r\n                  //     This is a quick prototype, to be modified/improved when\r\n                  //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                  //\r\n                  customFuncCall: function (name) {\r\n                      /* Ideally the table is to be moved out of here for faster perf.,\r\n                         but it's quite tricky since it relies on all these `parsers`\r\n                         and `expect` available only here */\r\n                      return {\r\n                          alpha: f(parsers.ieAlpha, true),\r\n                          boolean: f(condition),\r\n                          'if': f(condition)\r\n                      }[name.toLowerCase()];\r\n                      function f(parse, stop) {\r\n                          return {\r\n                              parse: parse,\r\n                              stop: stop // when true - stop after parse() and return its result, \r\n                              // otherwise continue for plain args\r\n                          };\r\n                      }\r\n                      function condition() {\r\n                          return [expect(parsers.condition, 'expected condition')];\r\n                      }\r\n                  },\r\n                  arguments: function (prevArgs) {\r\n                      var argsComma = prevArgs || [];\r\n                      var argsSemiColon = [];\r\n                      var isSemiColonSeparated;\r\n                      var value;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (prevArgs) {\r\n                              prevArgs = false;\r\n                          }\r\n                          else {\r\n                              value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                              if (!value) {\r\n                                  break;\r\n                              }\r\n                              if (value.value && value.value.length == 1) {\r\n                                  value = value.value[0];\r\n                              }\r\n                              argsComma.push(value);\r\n                          }\r\n                          if (parserInput.$char(',')) {\r\n                              continue;\r\n                          }\r\n                          if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                              isSemiColonSeparated = true;\r\n                              value = (argsComma.length < 1) ? argsComma[0]\r\n                                  : new tree.Value(argsComma);\r\n                              argsSemiColon.push(value);\r\n                              argsComma = [];\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                  },\r\n                  literal: function () {\r\n                      return this.dimension() ||\r\n                          this.color() ||\r\n                          this.quoted() ||\r\n                          this.unicodeDescriptor();\r\n                  },\r\n                  // Assignments are argument entities for calls.\r\n                  // They are present in ie filter properties as shown below.\r\n                  //\r\n                  //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                  //\r\n                  assignment: function () {\r\n                      var key;\r\n                      var value;\r\n                      parserInput.save();\r\n                      key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                      if (!key) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char('=')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      value = parsers.entity();\r\n                      if (value) {\r\n                          parserInput.forget();\r\n                          return new (tree.Assignment)(key, value);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  //\r\n                  // Parse url() tokens\r\n                  //\r\n                  // We use a specific rule for urls, because they don't really behave like\r\n                  // standard function calls. The difference is that the argument doesn't have\r\n                  // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                  //\r\n                  url: function () {\r\n                      var value;\r\n                      var index = parserInput.i;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      if (!parserInput.$str('url(')) {\r\n                          parserInput.autoCommentAbsorb = true;\r\n                          return;\r\n                      }\r\n                      value = this.quoted() || this.variable() || this.property() ||\r\n                          parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                      parserInput.autoCommentAbsorb = true;\r\n                      expectChar(')');\r\n                      return new (tree.URL)((value.value != null ||\r\n                          value instanceof tree.Variable ||\r\n                          value instanceof tree.Property) ?\r\n                          value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                  },\r\n                  //\r\n                  // A Variable entity, such as `@fink`, in\r\n                  //\r\n                  //     width: @fink + 2px\r\n                  //\r\n                  // We use a different parser for variable definitions,\r\n                  // see `parsers.variable`.\r\n                  //\r\n                  variable: function () {\r\n                      var ch;\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                          ch = parserInput.currentChar();\r\n                          if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                              // this may be a VariableCall lookup\r\n                              var result = parsers.variableCall(name);\r\n                              if (result) {\r\n                                  parserInput.forget();\r\n                                  return result;\r\n                              }\r\n                          }\r\n                          parserInput.forget();\r\n                          return new (tree.Variable)(name, index, fileInfo);\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  // A variable entity using the protective {} e.g. @{var}\r\n                  variableCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Property accessor, such as `$color`, in\r\n                  //\r\n                  //     background-color: $color\r\n                  //\r\n                  property: function () {\r\n                      var name;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                          return new (tree.Property)(name, index, fileInfo);\r\n                      }\r\n                  },\r\n                  // A property entity useing the protective {} e.g. ${prop}\r\n                  propertyCurly: function () {\r\n                      var curly;\r\n                      var index = parserInput.i;\r\n                      if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                          return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Hexadecimal color\r\n                  //\r\n                  //     #4F3C2F\r\n                  //\r\n                  // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                  //\r\n                  color: function () {\r\n                      var rgb;\r\n                      parserInput.save();\r\n                      if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                          if (!rgb[2]) {\r\n                              parserInput.forget();\r\n                              return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  colorKeyword: function () {\r\n                      parserInput.save();\r\n                      var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                      parserInput.autoCommentAbsorb = false;\r\n                      var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                      parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                      if (!k) {\r\n                          parserInput.forget();\r\n                          return;\r\n                      }\r\n                      parserInput.restore();\r\n                      var color = tree.Color.fromKeyword(k);\r\n                      if (color) {\r\n                          parserInput.$str(k);\r\n                          return color;\r\n                      }\r\n                  },\r\n                  //\r\n                  // A Dimension, that is, a number and a unit\r\n                  //\r\n                  //     0.5em 95%\r\n                  //\r\n                  dimension: function () {\r\n                      if (parserInput.peekNotNumeric()) {\r\n                          return;\r\n                      }\r\n                      var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                      if (value) {\r\n                          return new (tree.Dimension)(value[1], value[2]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // A unicode descriptor, as is used in unicode-range\r\n                  //\r\n                  // U+0??  or U+00A1-00A9\r\n                  //\r\n                  unicodeDescriptor: function () {\r\n                      var ud;\r\n                      ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                      if (ud) {\r\n                          return new (tree.UnicodeDescriptor)(ud[0]);\r\n                      }\r\n                  },\r\n                  //\r\n                  // JavaScript code to be evaluated\r\n                  //\r\n                  //     `window.location.href`\r\n                  //\r\n                  javascript: function () {\r\n                      var js;\r\n                      var index = parserInput.i;\r\n                      parserInput.save();\r\n                      var escape = parserInput.$char('~');\r\n                      var jsQuote = parserInput.$char('`');\r\n                      if (!jsQuote) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      js = parserInput.$re(/^[^`]*`/);\r\n                      if (js) {\r\n                          parserInput.forget();\r\n                          return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                      }\r\n                      parserInput.restore('invalid javascript definition');\r\n                  }\r\n              },\r\n              //\r\n              // The variable part of a variable definition. Used in the `rule` parser\r\n              //\r\n              //     @fink:\r\n              //\r\n              variable: function () {\r\n                  var name;\r\n                  if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              //\r\n              // Call a variable value to retrieve a detached ruleset\r\n              // or a value from a detached ruleset's rules.\r\n              //\r\n              //     @fink();\r\n              //     @fink;\r\n              //     color: @fink[@color];\r\n              //\r\n              variableCall: function (parsedName) {\r\n                  var lookups;\r\n                  var i = parserInput.i;\r\n                  var inValue = !!parsedName;\r\n                  var name = parsedName;\r\n                  parserInput.save();\r\n                  if (name || (parserInput.currentChar() === '@'\r\n                      && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                      lookups = this.mixin.ruleLookups();\r\n                      if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                          parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                          return;\r\n                      }\r\n                      if (!inValue) {\r\n                          name = name[1];\r\n                      }\r\n                      var call = new tree.VariableCall(name, i, fileInfo);\r\n                      if (!inValue && parsers.end()) {\r\n                          parserInput.forget();\r\n                          return call;\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                          return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                      }\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // extend syntax - used to extend selectors\r\n              //\r\n              extend: function (isRule) {\r\n                  var elements;\r\n                  var e;\r\n                  var index = parserInput.i;\r\n                  var option;\r\n                  var extendList;\r\n                  var extend;\r\n                  if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                      return;\r\n                  }\r\n                  do {\r\n                      option = null;\r\n                      elements = null;\r\n                      while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                          e = this.element();\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                      }\r\n                      option = option && option[1];\r\n                      if (!elements) {\r\n                          error('Missing target selector for :extend().');\r\n                      }\r\n                      extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                      if (extendList) {\r\n                          extendList.push(extend);\r\n                      }\r\n                      else {\r\n                          extendList = [extend];\r\n                      }\r\n                  } while (parserInput.$char(','));\r\n                  expect(/^\\)/);\r\n                  if (isRule) {\r\n                      expect(/^;/);\r\n                  }\r\n                  return extendList;\r\n              },\r\n              //\r\n              // extendRule - used in a rule to extend all the parent selectors\r\n              //\r\n              extendRule: function () {\r\n                  return this.extend(true);\r\n              },\r\n              //\r\n              // Mixins\r\n              //\r\n              mixin: {\r\n                  //\r\n                  // A Mixin call, with an optional argument list\r\n                  //\r\n                  //     #mixins > .square(#fff);\r\n                  //     #mixins.square(#fff);\r\n                  //     .rounded(4px, black);\r\n                  //     .button;\r\n                  //\r\n                  // We can lookup / return a value using the lookup syntax:\r\n                  //\r\n                  //     color: #mixin.square(#fff)[@color];\r\n                  //\r\n                  // The `while` loop is there because mixins can be\r\n                  // namespaced, but we only support the child and descendant\r\n                  // selector for now.\r\n                  //\r\n                  call: function (inValue, getLookup) {\r\n                      var s = parserInput.currentChar();\r\n                      var important = false;\r\n                      var lookups;\r\n                      var index = parserInput.i;\r\n                      var elements;\r\n                      var args;\r\n                      var hasParens;\r\n                      if (s !== '.' && s !== '#') {\r\n                          return;\r\n                      }\r\n                      parserInput.save(); // stop us absorbing part of an invalid selector\r\n                      elements = this.elements();\r\n                      if (elements) {\r\n                          if (parserInput.$char('(')) {\r\n                              args = this.args(true).args;\r\n                              expectChar(')');\r\n                              hasParens = true;\r\n                          }\r\n                          if (getLookup !== false) {\r\n                              lookups = this.ruleLookups();\r\n                          }\r\n                          if (getLookup === true && !lookups) {\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (inValue && !lookups && !hasParens) {\r\n                              // This isn't a valid in-value mixin call\r\n                              parserInput.restore();\r\n                              return;\r\n                          }\r\n                          if (!inValue && parsers.important()) {\r\n                              important = true;\r\n                          }\r\n                          if (inValue || parsers.end()) {\r\n                              parserInput.forget();\r\n                              var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                              if (lookups) {\r\n                                  return new tree.NamespaceValue(mixin, lookups);\r\n                              }\r\n                              else {\r\n                                  return mixin;\r\n                              }\r\n                          }\r\n                      }\r\n                      parserInput.restore();\r\n                  },\r\n                  /**\r\n                   * Matching elements for mixins\r\n                   * (Start with . or # and can have > )\r\n                   */\r\n                  elements: function () {\r\n                      var elements;\r\n                      var e;\r\n                      var c;\r\n                      var elem;\r\n                      var elemIndex;\r\n                      var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                      while (true) {\r\n                          elemIndex = parserInput.i;\r\n                          e = parserInput.$re(re);\r\n                          if (!e) {\r\n                              break;\r\n                          }\r\n                          elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                          if (elements) {\r\n                              elements.push(elem);\r\n                          }\r\n                          else {\r\n                              elements = [elem];\r\n                          }\r\n                          c = parserInput.$char('>');\r\n                      }\r\n                      return elements;\r\n                  },\r\n                  args: function (isCall) {\r\n                      var entities = parsers.entities;\r\n                      var returner = { args: null, variadic: false };\r\n                      var expressions = [];\r\n                      var argsSemiColon = [];\r\n                      var argsComma = [];\r\n                      var isSemiColonSeparated;\r\n                      var expressionContainsNamed;\r\n                      var name;\r\n                      var nameLoop;\r\n                      var value;\r\n                      var arg;\r\n                      var expand;\r\n                      var hasSep = true;\r\n                      parserInput.save();\r\n                      while (true) {\r\n                          if (isCall) {\r\n                              arg = parsers.detachedRuleset() || parsers.expression();\r\n                          }\r\n                          else {\r\n                              parserInput.commentStore.length = 0;\r\n                              if (parserInput.$str('...')) {\r\n                                  returner.variadic = true;\r\n                                  if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                      isSemiColonSeparated = true;\r\n                                  }\r\n                                  (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                      .push({ variadic: true });\r\n                                  break;\r\n                              }\r\n                              arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                          }\r\n                          if (!arg || !hasSep) {\r\n                              break;\r\n                          }\r\n                          nameLoop = null;\r\n                          if (arg.throwAwayComments) {\r\n                              arg.throwAwayComments();\r\n                          }\r\n                          value = arg;\r\n                          var val = null;\r\n                          if (isCall) {\r\n                              // Variable\r\n                              if (arg.value && arg.value.length == 1) {\r\n                                  val = arg.value[0];\r\n                              }\r\n                          }\r\n                          else {\r\n                              val = arg;\r\n                          }\r\n                          if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                              if (parserInput.$char(':')) {\r\n                                  if (expressions.length > 0) {\r\n                                      if (isSemiColonSeparated) {\r\n                                          error('Cannot mix ; and , as delimiter types');\r\n                                      }\r\n                                      expressionContainsNamed = true;\r\n                                  }\r\n                                  value = parsers.detachedRuleset() || parsers.expression();\r\n                                  if (!value) {\r\n                                      if (isCall) {\r\n                                          error('could not understand value for named argument');\r\n                                      }\r\n                                      else {\r\n                                          parserInput.restore();\r\n                                          returner.args = [];\r\n                                          return returner;\r\n                                      }\r\n                                  }\r\n                                  nameLoop = (name = val.name);\r\n                              }\r\n                              else if (parserInput.$str('...')) {\r\n                                  if (!isCall) {\r\n                                      returner.variadic = true;\r\n                                      if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                          isSemiColonSeparated = true;\r\n                                      }\r\n                                      (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                          .push({ name: arg.name, variadic: true });\r\n                                      break;\r\n                                  }\r\n                                  else {\r\n                                      expand = true;\r\n                                  }\r\n                              }\r\n                              else if (!isCall) {\r\n                                  name = nameLoop = val.name;\r\n                                  value = null;\r\n                              }\r\n                          }\r\n                          if (value) {\r\n                              expressions.push(value);\r\n                          }\r\n                          argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                          if (parserInput.$char(',')) {\r\n                              hasSep = true;\r\n                              continue;\r\n                          }\r\n                          hasSep = parserInput.$char(';') === ';';\r\n                          if (hasSep || isSemiColonSeparated) {\r\n                              if (expressionContainsNamed) {\r\n                                  error('Cannot mix ; and , as delimiter types');\r\n                              }\r\n                              isSemiColonSeparated = true;\r\n                              if (expressions.length > 1) {\r\n                                  value = new (tree.Value)(expressions);\r\n                              }\r\n                              argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                              name = null;\r\n                              expressions = [];\r\n                              expressionContainsNamed = false;\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                      return returner;\r\n                  },\r\n                  //\r\n                  // A Mixin definition, with a list of parameters\r\n                  //\r\n                  //     .rounded (@radius: 2px, @color) {\r\n                  //        ...\r\n                  //     }\r\n                  //\r\n                  // Until we have a finer grained state-machine, we have to\r\n                  // do a look-ahead, to make sure we don't have a mixin call.\r\n                  // See the `rule` function for more information.\r\n                  //\r\n                  // We start by matching `.rounded (`, and then proceed on to\r\n                  // the argument list, which has optional default values.\r\n                  // We store the parameters in `params`, with a `value` key,\r\n                  // if there is a value, such as in the case of `@radius`.\r\n                  //\r\n                  // Once we've got our params list, and a closing `)`, we parse\r\n                  // the `{...}` block.\r\n                  //\r\n                  definition: function () {\r\n                      var name;\r\n                      var params = [];\r\n                      var match;\r\n                      var ruleset;\r\n                      var cond;\r\n                      var variadic = false;\r\n                      if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                          parserInput.peek(/^[^{]*\\}/)) {\r\n                          return;\r\n                      }\r\n                      parserInput.save();\r\n                      match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                      if (match) {\r\n                          name = match[1];\r\n                          var argInfo = this.args(false);\r\n                          params = argInfo.args;\r\n                          variadic = argInfo.variadic;\r\n                          // .mixincall(\"@{a}\");\r\n                          // looks a bit like a mixin definition..\r\n                          // also\r\n                          // .mixincall(@a: {rule: set;});\r\n                          // so we have to be nice and restore\r\n                          if (!parserInput.$char(')')) {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                              return;\r\n                          }\r\n                          parserInput.commentStore.length = 0;\r\n                          if (parserInput.$str('when')) { // Guard\r\n                              cond = expect(parsers.conditions, 'expected condition');\r\n                          }\r\n                          ruleset = parsers.block();\r\n                          if (ruleset) {\r\n                              parserInput.forget();\r\n                              return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                          }\r\n                          else {\r\n                              parserInput.restore();\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  },\r\n                  ruleLookups: function () {\r\n                      var rule;\r\n                      var lookups = [];\r\n                      if (parserInput.currentChar() !== '[') {\r\n                          return;\r\n                      }\r\n                      while (true) {\r\n                          parserInput.save();\r\n                          rule = this.lookupValue();\r\n                          if (!rule && rule !== '') {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          lookups.push(rule);\r\n                          parserInput.forget();\r\n                      }\r\n                      if (lookups.length > 0) {\r\n                          return lookups;\r\n                      }\r\n                  },\r\n                  lookupValue: function () {\r\n                      parserInput.save();\r\n                      if (!parserInput.$char('[')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                      if (!parserInput.$char(']')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (name || name === '') {\r\n                          parserInput.forget();\r\n                          return name;\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              //\r\n              // Entities are the smallest recognized token,\r\n              // and can be found inside a rule's value.\r\n              //\r\n              entity: function () {\r\n                  var entities = this.entities;\r\n                  return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                      entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                      entities.javascript();\r\n              },\r\n              //\r\n              // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n              // because the `block` rule will be expecting it, but we still need to make sure\r\n              // it's there, if ';' was omitted.\r\n              //\r\n              end: function () {\r\n                  return parserInput.$char(';') || parserInput.peek('}');\r\n              },\r\n              //\r\n              // IE's alpha function\r\n              //\r\n              //     alpha(opacity=88)\r\n              //\r\n              ieAlpha: function () {\r\n                  var value;\r\n                  // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                  if (!parserInput.$re(/^opacity=/i)) {\r\n                      return;\r\n                  }\r\n                  value = parserInput.$re(/^\\d+/);\r\n                  if (!value) {\r\n                      value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                      value = \"@{\" + value.name.slice(1) + \"}\";\r\n                  }\r\n                  expectChar(')');\r\n                  return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n              },\r\n              //\r\n              // A Selector Element\r\n              //\r\n              //     div\r\n              //     + h1\r\n              //     #socks\r\n              //     input[type=\"text\"]\r\n              //\r\n              // Elements are the building blocks for Selectors,\r\n              // they are made out of a `Combinator` (see combinator rule),\r\n              // and an element name, such as a tag a class, or `*`.\r\n              //\r\n              element: function () {\r\n                  var e;\r\n                  var c;\r\n                  var v;\r\n                  var index = parserInput.i;\r\n                  c = this.combinator();\r\n                  e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                      parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                      parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                      parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                      this.entities.variableCurly();\r\n                  if (!e) {\r\n                      parserInput.save();\r\n                      if (parserInput.$char('(')) {\r\n                          if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                              e = new (tree.Paren)(v);\r\n                              parserInput.forget();\r\n                          }\r\n                          else {\r\n                              parserInput.restore('Missing closing \\')\\'');\r\n                          }\r\n                      }\r\n                      else {\r\n                          parserInput.forget();\r\n                      }\r\n                  }\r\n                  if (e) {\r\n                      return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                  }\r\n              },\r\n              //\r\n              // Combinators combine elements together, in a Selector.\r\n              //\r\n              // Because our parser isn't white-space sensitive, special care\r\n              // has to be taken, when parsing the descendant combinator, ` `,\r\n              // as it's an empty space. We have to check the previous character\r\n              // in the input, to see if it's a ` ` character. More info on how\r\n              // we deal with this in *combinator.js*.\r\n              //\r\n              combinator: function () {\r\n                  var c = parserInput.currentChar();\r\n                  if (c === '/') {\r\n                      parserInput.save();\r\n                      var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                      if (slashedCombinator) {\r\n                          parserInput.forget();\r\n                          return new (tree.Combinator)(slashedCombinator);\r\n                      }\r\n                      parserInput.restore();\r\n                  }\r\n                  if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                      parserInput.i++;\r\n                      if (c === '^' && parserInput.currentChar() === '^') {\r\n                          c = '^^';\r\n                          parserInput.i++;\r\n                      }\r\n                      while (parserInput.isWhitespace()) {\r\n                          parserInput.i++;\r\n                      }\r\n                      return new (tree.Combinator)(c);\r\n                  }\r\n                  else if (parserInput.isWhitespace(-1)) {\r\n                      return new (tree.Combinator)(' ');\r\n                  }\r\n                  else {\r\n                      return new (tree.Combinator)(null);\r\n                  }\r\n              },\r\n              //\r\n              // A CSS Selector\r\n              // with less extensions e.g. the ability to extend and guard\r\n              //\r\n              //     .class > div + h1\r\n              //     li a:hover\r\n              //\r\n              // Selectors are made out of one or more Elements, see above.\r\n              //\r\n              selector: function (isLess) {\r\n                  var index = parserInput.i;\r\n                  var elements;\r\n                  var extendList;\r\n                  var c;\r\n                  var e;\r\n                  var allExtends;\r\n                  var when;\r\n                  var condition;\r\n                  isLess = isLess !== false;\r\n                  while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                      if (when) {\r\n                          condition = expect(this.conditions, 'expected condition');\r\n                      }\r\n                      else if (condition) {\r\n                          error('CSS guard can only be used at the end of selector');\r\n                      }\r\n                      else if (extendList) {\r\n                          if (allExtends) {\r\n                              allExtends = allExtends.concat(extendList);\r\n                          }\r\n                          else {\r\n                              allExtends = extendList;\r\n                          }\r\n                      }\r\n                      else {\r\n                          if (allExtends) {\r\n                              error('Extend can only be used at the end of selector');\r\n                          }\r\n                          c = parserInput.currentChar();\r\n                          if (elements) {\r\n                              elements.push(e);\r\n                          }\r\n                          else {\r\n                              elements = [e];\r\n                          }\r\n                          e = null;\r\n                      }\r\n                      if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if (elements) {\r\n                      return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                  }\r\n                  if (allExtends) {\r\n                      error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                  }\r\n              },\r\n              selectors: function () {\r\n                  var s;\r\n                  var selectors;\r\n                  while (true) {\r\n                      s = this.selector();\r\n                      if (!s) {\r\n                          break;\r\n                      }\r\n                      if (selectors) {\r\n                          selectors.push(s);\r\n                      }\r\n                      else {\r\n                          selectors = [s];\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (s.condition && selectors.length > 1) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      if (!parserInput.$char(',')) {\r\n                          break;\r\n                      }\r\n                      if (s.condition) {\r\n                          error(\"Guards are only currently allowed on a single selector.\");\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                  }\r\n                  return selectors;\r\n              },\r\n              attribute: function () {\r\n                  if (!parserInput.$char('[')) {\r\n                      return;\r\n                  }\r\n                  var entities = this.entities;\r\n                  var key;\r\n                  var val;\r\n                  var op;\r\n                  if (!(key = entities.variableCurly())) {\r\n                      key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                  }\r\n                  op = parserInput.$re(/^[|~*$^]?=/);\r\n                  if (op) {\r\n                      val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                  }\r\n                  expectChar(']');\r\n                  return new (tree.Attribute)(key, op, val);\r\n              },\r\n              //\r\n              // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n              // It's a wrapper around the `primary` rule, with added `{}`.\r\n              //\r\n              block: function () {\r\n                  var content;\r\n                  if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                      return content;\r\n                  }\r\n              },\r\n              blockRuleset: function () {\r\n                  var block = this.block();\r\n                  if (block) {\r\n                      block = new tree.Ruleset(null, block);\r\n                  }\r\n                  return block;\r\n              },\r\n              detachedRuleset: function () {\r\n                  var argInfo;\r\n                  var params;\r\n                  var variadic;\r\n                  parserInput.save();\r\n                  if (parserInput.$re(/^[.#]\\(/)) {\r\n                      /**\r\n                       * DR args currently only implemented for each() function, and not\r\n                       * yet settable as `@dr: #(@arg) {}`\r\n                       * This should be done when DRs are merged with mixins.\r\n                       * See: https://github.com/less/less-meta/issues/16\r\n                       */\r\n                      argInfo = this.mixin.args(false);\r\n                      params = argInfo.args;\r\n                      variadic = argInfo.variadic;\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                  }\r\n                  var blockRuleset = this.blockRuleset();\r\n                  if (blockRuleset) {\r\n                      parserInput.forget();\r\n                      if (params) {\r\n                          return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                      }\r\n                      return new tree.DetachedRuleset(blockRuleset);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // div, .class, body > p {...}\r\n              //\r\n              ruleset: function () {\r\n                  var selectors;\r\n                  var rules;\r\n                  var debugInfo;\r\n                  parserInput.save();\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(parserInput.i);\r\n                  }\r\n                  selectors = this.selectors();\r\n                  if (selectors && (rules = this.block())) {\r\n                      parserInput.forget();\r\n                      var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                      if (context.dumpLineNumbers) {\r\n                          ruleset.debugInfo = debugInfo;\r\n                      }\r\n                      return ruleset;\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              declaration: function () {\r\n                  var name;\r\n                  var value;\r\n                  var index = parserInput.i;\r\n                  var hasDR;\r\n                  var c = parserInput.currentChar();\r\n                  var important;\r\n                  var merge;\r\n                  var isVariable;\r\n                  if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                      return;\r\n                  }\r\n                  parserInput.save();\r\n                  name = this.variable() || this.ruleProperty();\r\n                  if (name) {\r\n                      isVariable = typeof name === 'string';\r\n                      if (isVariable) {\r\n                          value = this.detachedRuleset();\r\n                          if (value) {\r\n                              hasDR = true;\r\n                          }\r\n                      }\r\n                      parserInput.commentStore.length = 0;\r\n                      if (!value) {\r\n                          // a name returned by this.ruleProperty() is always an array of the form:\r\n                          // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                          // where each item is a tree.Keyword or tree.Variable\r\n                          merge = !isVariable && name.length > 1 && name.pop().value;\r\n                          // Custom property values get permissive parsing\r\n                          if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                              value = this.permissiveValue();\r\n                          }\r\n                          // Try to store values as anonymous\r\n                          // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                          else {\r\n                              value = this.anonymousValue();\r\n                          }\r\n                          if (value) {\r\n                              parserInput.forget();\r\n                              // anonymous values absorb the end ';' which is required for them to work\r\n                              return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                          }\r\n                          if (!value) {\r\n                              value = this.value();\r\n                          }\r\n                          if (value) {\r\n                              important = this.important();\r\n                          }\r\n                          else if (isVariable) {\r\n                              // As a last resort, try permissiveValue\r\n                              value = this.permissiveValue();\r\n                          }\r\n                      }\r\n                      if (value && (this.end() || hasDR)) {\r\n                          parserInput.forget();\r\n                          return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.restore();\r\n                      }\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                  }\r\n              },\r\n              anonymousValue: function () {\r\n                  var index = parserInput.i;\r\n                  var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                  if (match) {\r\n                      return new (tree.Anonymous)(match[1], index);\r\n                  }\r\n              },\r\n              /**\r\n               * Used for custom properties, at-rules, and variables (as fallback)\r\n               * Parses almost anything inside of {} [] () \"\" blocks\r\n               * until it reaches outer-most tokens.\r\n               *\r\n               * First, it will try to parse comments and entities to reach\r\n               * the end. This is mostly like the Expression parser except no\r\n               * math is allowed.\r\n               */\r\n              permissiveValue: function (untilTokens) {\r\n                  var i;\r\n                  var e;\r\n                  var done;\r\n                  var value;\r\n                  var tok = untilTokens || ';';\r\n                  var index = parserInput.i;\r\n                  var result = [];\r\n                  function testCurrentChar() {\r\n                      var char = parserInput.currentChar();\r\n                      if (typeof tok === 'string') {\r\n                          return char === tok;\r\n                      }\r\n                      else {\r\n                          return tok.test(char);\r\n                      }\r\n                  }\r\n                  if (testCurrentChar()) {\r\n                      return;\r\n                  }\r\n                  value = [];\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          value.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.entity();\r\n                      if (e) {\r\n                          value.push(e);\r\n                      }\r\n                  } while (e);\r\n                  done = testCurrentChar();\r\n                  if (value.length > 0) {\r\n                      value = new (tree.Expression)(value);\r\n                      if (done) {\r\n                          return value;\r\n                      }\r\n                      else {\r\n                          result.push(value);\r\n                      }\r\n                      // Preserve space before $parseUntil as it will not\r\n                      if (parserInput.prevChar() === ' ') {\r\n                          result.push(new tree.Anonymous(' ', index));\r\n                      }\r\n                  }\r\n                  parserInput.save();\r\n                  value = parserInput.$parseUntil(tok);\r\n                  if (value) {\r\n                      if (typeof value === 'string') {\r\n                          error(\"Expected '\" + value + \"'\", 'Parse');\r\n                      }\r\n                      if (value.length === 1 && value[0] === ' ') {\r\n                          parserInput.forget();\r\n                          return new tree.Anonymous('', index);\r\n                      }\r\n                      var item = void 0;\r\n                      for (i = 0; i < value.length; i++) {\r\n                          item = value[i];\r\n                          if (Array.isArray(item)) {\r\n                              // Treat actual quotes as normal quoted values\r\n                              result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                          }\r\n                          else {\r\n                              if (i === value.length - 1) {\r\n                                  item = item.trim();\r\n                              }\r\n                              // Treat like quoted values, but replace vars like unquoted expressions\r\n                              var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                              quote.variableRegex = /@([\\w-]+)/g;\r\n                              quote.propRegex = /\\$([\\w-]+)/g;\r\n                              result.push(quote);\r\n                          }\r\n                      }\r\n                      parserInput.forget();\r\n                      return new tree.Expression(result, true);\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // An @import atrule\r\n              //\r\n              //     @import \"lib\";\r\n              //\r\n              // Depending on our environment, importing is done differently:\r\n              // In the browser, it's an XHR request, in Node, it would be a\r\n              // file-system operation. The function used for importing is\r\n              // stored in `import`, which we pass to the Import constructor.\r\n              //\r\n              'import': function () {\r\n                  var path;\r\n                  var features;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@import?\\s+/);\r\n                  if (dir) {\r\n                      var options = (dir ? this.importOptions() : null) || {};\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          features = this.mediaFeatures();\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon or unrecognised media features on import');\r\n                          }\r\n                          features = features && new (tree.Value)(features);\r\n                          return new (tree.Import)(path, features, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed import statement');\r\n                      }\r\n                  }\r\n              },\r\n              importOptions: function () {\r\n                  var o;\r\n                  var options = {};\r\n                  var optionName;\r\n                  var value;\r\n                  // list of options, surrounded by parens\r\n                  if (!parserInput.$char('(')) {\r\n                      return null;\r\n                  }\r\n                  do {\r\n                      o = this.importOption();\r\n                      if (o) {\r\n                          optionName = o;\r\n                          value = true;\r\n                          switch (optionName) {\r\n                              case 'css':\r\n                                  optionName = 'less';\r\n                                  value = false;\r\n                                  break;\r\n                              case 'once':\r\n                                  optionName = 'multiple';\r\n                                  value = false;\r\n                                  break;\r\n                          }\r\n                          options[optionName] = value;\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (o);\r\n                  expectChar(')');\r\n                  return options;\r\n              },\r\n              importOption: function () {\r\n                  var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                  if (opt) {\r\n                      return opt[1];\r\n                  }\r\n              },\r\n              mediaFeature: function () {\r\n                  var entities = this.entities;\r\n                  var nodes = [];\r\n                  var e;\r\n                  var p;\r\n                  parserInput.save();\r\n                  do {\r\n                      e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                      if (e) {\r\n                          nodes.push(e);\r\n                      }\r\n                      else if (parserInput.$char('(')) {\r\n                          p = this.property();\r\n                          e = this.value();\r\n                          if (parserInput.$char(')')) {\r\n                              if (p && e) {\r\n                                  nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                              }\r\n                              else if (e) {\r\n                                  nodes.push(new (tree.Paren)(e));\r\n                              }\r\n                              else {\r\n                                  error('badly formed media feature definition');\r\n                              }\r\n                          }\r\n                          else {\r\n                              error('Missing closing \\')\\'', 'Parse');\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  parserInput.forget();\r\n                  if (nodes.length > 0) {\r\n                      return new (tree.Expression)(nodes);\r\n                  }\r\n              },\r\n              mediaFeatures: function () {\r\n                  var entities = this.entities;\r\n                  var features = [];\r\n                  var e;\r\n                  do {\r\n                      e = this.mediaFeature();\r\n                      if (e) {\r\n                          features.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                      else {\r\n                          e = entities.variable() || entities.mixinLookup();\r\n                          if (e) {\r\n                              features.push(e);\r\n                              if (!parserInput.$char(',')) {\r\n                                  break;\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  return features.length > 0 ? features : null;\r\n              },\r\n              media: function () {\r\n                  var features;\r\n                  var rules;\r\n                  var media;\r\n                  var debugInfo;\r\n                  var index = parserInput.i;\r\n                  if (context.dumpLineNumbers) {\r\n                      debugInfo = getDebugInfo(index);\r\n                  }\r\n                  parserInput.save();\r\n                  if (parserInput.$str('@media')) {\r\n                      features = this.mediaFeatures();\r\n                      rules = this.block();\r\n                      if (!rules) {\r\n                          error('media definitions require block statements after any features');\r\n                      }\r\n                      parserInput.forget();\r\n                      media = new (tree.Media)(rules, features, index, fileInfo);\r\n                      if (context.dumpLineNumbers) {\r\n                          media.debugInfo = debugInfo;\r\n                      }\r\n                      return media;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              //\r\n              // A @plugin directive, used to import plugins dynamically.\r\n              //\r\n              //     @plugin (args) \"lib\";\r\n              //\r\n              plugin: function () {\r\n                  var path;\r\n                  var args;\r\n                  var options;\r\n                  var index = parserInput.i;\r\n                  var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                  if (dir) {\r\n                      args = this.pluginArgs();\r\n                      if (args) {\r\n                          options = {\r\n                              pluginArgs: args,\r\n                              isPlugin: true\r\n                          };\r\n                      }\r\n                      else {\r\n                          options = { isPlugin: true };\r\n                      }\r\n                      if ((path = this.entities.quoted() || this.entities.url())) {\r\n                          if (!parserInput.$char(';')) {\r\n                              parserInput.i = index;\r\n                              error('missing semi-colon on @plugin');\r\n                          }\r\n                          return new (tree.Import)(path, null, options, index, fileInfo);\r\n                      }\r\n                      else {\r\n                          parserInput.i = index;\r\n                          error('malformed @plugin statement');\r\n                      }\r\n                  }\r\n              },\r\n              pluginArgs: function () {\r\n                  // list of options, surrounded by parens\r\n                  parserInput.save();\r\n                  if (!parserInput.$char('(')) {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n                  var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                  if (args[1]) {\r\n                      parserInput.forget();\r\n                      return args[1].trim();\r\n                  }\r\n                  else {\r\n                      parserInput.restore();\r\n                      return null;\r\n                  }\r\n              },\r\n              //\r\n              // A CSS AtRule\r\n              //\r\n              //     @charset \"utf-8\";\r\n              //\r\n              atrule: function () {\r\n                  var index = parserInput.i;\r\n                  var name;\r\n                  var value;\r\n                  var rules;\r\n                  var nonVendorSpecificName;\r\n                  var hasIdentifier;\r\n                  var hasExpression;\r\n                  var hasUnknown;\r\n                  var hasBlock = true;\r\n                  var isRooted = true;\r\n                  if (parserInput.currentChar() !== '@') {\r\n                      return;\r\n                  }\r\n                  value = this['import']() || this.plugin() || this.media();\r\n                  if (value) {\r\n                      return value;\r\n                  }\r\n                  parserInput.save();\r\n                  name = parserInput.$re(/^@[a-z-]+/);\r\n                  if (!name) {\r\n                      return;\r\n                  }\r\n                  nonVendorSpecificName = name;\r\n                  if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                      nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                  }\r\n                  switch (nonVendorSpecificName) {\r\n                      case '@charset':\r\n                          hasIdentifier = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@namespace':\r\n                          hasExpression = true;\r\n                          hasBlock = false;\r\n                          break;\r\n                      case '@keyframes':\r\n                      case '@counter-style':\r\n                          hasIdentifier = true;\r\n                          break;\r\n                      case '@document':\r\n                      case '@supports':\r\n                          hasUnknown = true;\r\n                          isRooted = false;\r\n                          break;\r\n                      default:\r\n                          hasUnknown = true;\r\n                          break;\r\n                  }\r\n                  parserInput.commentStore.length = 0;\r\n                  if (hasIdentifier) {\r\n                      value = this.entity();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" identifier\");\r\n                      }\r\n                  }\r\n                  else if (hasExpression) {\r\n                      value = this.expression();\r\n                      if (!value) {\r\n                          error(\"expected \" + name + \" expression\");\r\n                      }\r\n                  }\r\n                  else if (hasUnknown) {\r\n                      value = this.permissiveValue(/^[{;]/);\r\n                      hasBlock = (parserInput.currentChar() === '{');\r\n                      if (!value) {\r\n                          if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                              error(name + \" rule is missing block or ending semi-colon\");\r\n                          }\r\n                      }\r\n                      else if (!value.value) {\r\n                          value = null;\r\n                      }\r\n                  }\r\n                  if (hasBlock) {\r\n                      rules = this.blockRuleset();\r\n                  }\r\n                  if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                      parserInput.forget();\r\n                      return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                  }\r\n                  parserInput.restore('at-rule options not recognised');\r\n              },\r\n              //\r\n              // A Value is a comma-delimited list of Expressions\r\n              //\r\n              //     font-family: Baskerville, Georgia, serif;\r\n              //\r\n              // In a Rule, a Value represents everything after the `:`,\r\n              // and before the `;`.\r\n              //\r\n              value: function () {\r\n                  var e;\r\n                  var expressions = [];\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.expression();\r\n                      if (e) {\r\n                          expressions.push(e);\r\n                          if (!parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (expressions.length > 0) {\r\n                      return new (tree.Value)(expressions, index);\r\n                  }\r\n              },\r\n              important: function () {\r\n                  if (parserInput.currentChar() === '!') {\r\n                      return parserInput.$re(/^! *important/);\r\n                  }\r\n              },\r\n              sub: function () {\r\n                  var a;\r\n                  var e;\r\n                  parserInput.save();\r\n                  if (parserInput.$char('(')) {\r\n                      a = this.addition();\r\n                      if (a && parserInput.$char(')')) {\r\n                          parserInput.forget();\r\n                          e = new (tree.Expression)([a]);\r\n                          e.parens = true;\r\n                          return e;\r\n                      }\r\n                      parserInput.restore('Expected \\')\\'');\r\n                      return;\r\n                  }\r\n                  parserInput.restore();\r\n              },\r\n              multiplication: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.operand();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                              break;\r\n                          }\r\n                          parserInput.save();\r\n                          op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                          if (!op) {\r\n                              parserInput.forget();\r\n                              break;\r\n                          }\r\n                          a = this.operand();\r\n                          if (!a) {\r\n                              parserInput.restore();\r\n                              break;\r\n                          }\r\n                          parserInput.forget();\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              addition: function () {\r\n                  var m;\r\n                  var a;\r\n                  var op;\r\n                  var operation;\r\n                  var isSpaced;\r\n                  m = this.multiplication();\r\n                  if (m) {\r\n                      isSpaced = parserInput.isWhitespace(-1);\r\n                      while (true) {\r\n                          op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                          if (!op) {\r\n                              break;\r\n                          }\r\n                          a = this.multiplication();\r\n                          if (!a) {\r\n                              break;\r\n                          }\r\n                          m.parensInOp = true;\r\n                          a.parensInOp = true;\r\n                          operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                          isSpaced = parserInput.isWhitespace(-1);\r\n                      }\r\n                      return operation || m;\r\n                  }\r\n              },\r\n              conditions: function () {\r\n                  var a;\r\n                  var b;\r\n                  var index = parserInput.i;\r\n                  var condition;\r\n                  a = this.condition(true);\r\n                  if (a) {\r\n                      while (true) {\r\n                          if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                              break;\r\n                          }\r\n                          b = this.condition(true);\r\n                          if (!b) {\r\n                              break;\r\n                          }\r\n                          condition = new (tree.Condition)('or', condition || a, b, index);\r\n                      }\r\n                      return condition || a;\r\n                  }\r\n              },\r\n              condition: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  function or() {\r\n                      return parserInput.$str('or');\r\n                  }\r\n                  result = this.conditionAnd(needsParens);\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = or();\r\n                  if (logical) {\r\n                      next = this.condition(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              conditionAnd: function (needsParens) {\r\n                  var result;\r\n                  var logical;\r\n                  var next;\r\n                  var self = this;\r\n                  function insideCondition() {\r\n                      var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                      if (!cond && !needsParens) {\r\n                          return self.atomicCondition(needsParens);\r\n                      }\r\n                      return cond;\r\n                  }\r\n                  function and() {\r\n                      return parserInput.$str('and');\r\n                  }\r\n                  result = insideCondition();\r\n                  if (!result) {\r\n                      return;\r\n                  }\r\n                  logical = and();\r\n                  if (logical) {\r\n                      next = this.conditionAnd(needsParens);\r\n                      if (next) {\r\n                          result = new (tree.Condition)(logical, result, next);\r\n                      }\r\n                      else {\r\n                          return;\r\n                      }\r\n                  }\r\n                  return result;\r\n              },\r\n              negatedCondition: function (needsParens) {\r\n                  if (parserInput.$str('not')) {\r\n                      var result = this.parenthesisCondition(needsParens);\r\n                      if (result) {\r\n                          result.negate = !result.negate;\r\n                      }\r\n                      return result;\r\n                  }\r\n              },\r\n              parenthesisCondition: function (needsParens) {\r\n                  function tryConditionFollowedByParenthesis(me) {\r\n                      var body;\r\n                      parserInput.save();\r\n                      body = me.condition(needsParens);\r\n                      if (!body) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      if (!parserInput.$char(')')) {\r\n                          parserInput.restore();\r\n                          return;\r\n                      }\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  var body;\r\n                  parserInput.save();\r\n                  if (!parserInput.$str('(')) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  body = tryConditionFollowedByParenthesis(this);\r\n                  if (body) {\r\n                      parserInput.forget();\r\n                      return body;\r\n                  }\r\n                  body = this.atomicCondition(needsParens);\r\n                  if (!body) {\r\n                      parserInput.restore();\r\n                      return;\r\n                  }\r\n                  if (!parserInput.$char(')')) {\r\n                      parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                      return;\r\n                  }\r\n                  parserInput.forget();\r\n                  return body;\r\n              },\r\n              atomicCondition: function (needsParens) {\r\n                  var entities = this.entities;\r\n                  var index = parserInput.i;\r\n                  var a;\r\n                  var b;\r\n                  var c;\r\n                  var op;\r\n                  function cond() {\r\n                      return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                  }\r\n                  cond = cond.bind(this);\r\n                  a = cond();\r\n                  if (a) {\r\n                      if (parserInput.$char('>')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '>=';\r\n                          }\r\n                          else {\r\n                              op = '>';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('<')) {\r\n                          if (parserInput.$char('=')) {\r\n                              op = '<=';\r\n                          }\r\n                          else {\r\n                              op = '<';\r\n                          }\r\n                      }\r\n                      else if (parserInput.$char('=')) {\r\n                          if (parserInput.$char('>')) {\r\n                              op = '=>';\r\n                          }\r\n                          else if (parserInput.$char('<')) {\r\n                              op = '=<';\r\n                          }\r\n                          else {\r\n                              op = '=';\r\n                          }\r\n                      }\r\n                      if (op) {\r\n                          b = cond();\r\n                          if (b) {\r\n                              c = new (tree.Condition)(op, a, b, index, false);\r\n                          }\r\n                          else {\r\n                              error('expected expression');\r\n                          }\r\n                      }\r\n                      else {\r\n                          c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                      }\r\n                      return c;\r\n                  }\r\n              },\r\n              //\r\n              // An operand is anything that can be part of an operation,\r\n              // such as a Color, or a Variable\r\n              //\r\n              operand: function () {\r\n                  var entities = this.entities;\r\n                  var negate;\r\n                  if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                      negate = parserInput.$char('-');\r\n                  }\r\n                  var o = this.sub() || entities.dimension() ||\r\n                      entities.color() || entities.variable() ||\r\n                      entities.property() || entities.call() ||\r\n                      entities.quoted(true) || entities.colorKeyword() ||\r\n                      entities.mixinLookup();\r\n                  if (negate) {\r\n                      o.parensInOp = true;\r\n                      o = new (tree.Negative)(o);\r\n                  }\r\n                  return o;\r\n              },\r\n              //\r\n              // Expressions either represent mathematical operations,\r\n              // or white-space delimited Entities.\r\n              //\r\n              //     1px solid black\r\n              //     @var * 2\r\n              //\r\n              expression: function () {\r\n                  var entities = [];\r\n                  var e;\r\n                  var delim;\r\n                  var index = parserInput.i;\r\n                  do {\r\n                      e = this.comment();\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          continue;\r\n                      }\r\n                      e = this.addition() || this.entity();\r\n                      if (e instanceof tree.Comment) {\r\n                          e = null;\r\n                      }\r\n                      if (e) {\r\n                          entities.push(e);\r\n                          // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                          if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                              delim = parserInput.$char('/');\r\n                              if (delim) {\r\n                                  entities.push(new (tree.Anonymous)(delim, index));\r\n                              }\r\n                          }\r\n                      }\r\n                  } while (e);\r\n                  if (entities.length > 0) {\r\n                      return new (tree.Expression)(entities);\r\n                  }\r\n              },\r\n              property: function () {\r\n                  var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (name) {\r\n                      return name[1];\r\n                  }\r\n              },\r\n              ruleProperty: function () {\r\n                  var name = [];\r\n                  var index = [];\r\n                  var s;\r\n                  var k;\r\n                  parserInput.save();\r\n                  var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                  if (simpleProperty) {\r\n                      name = [new (tree.Keyword)(simpleProperty[1])];\r\n                      parserInput.forget();\r\n                      return name;\r\n                  }\r\n                  function match(re) {\r\n                      var i = parserInput.i;\r\n                      var chunk = parserInput.$re(re);\r\n                      if (chunk) {\r\n                          index.push(i);\r\n                          return name.push(chunk[1]);\r\n                      }\r\n                  }\r\n                  match(/^(\\*?)/);\r\n                  while (true) {\r\n                      if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                          break;\r\n                      }\r\n                  }\r\n                  if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                      parserInput.forget();\r\n                      // at last, we have the complete match now. move forward,\r\n                      // convert name particles to tree objects and return:\r\n                      if (name[0] === '') {\r\n                          name.shift();\r\n                          index.shift();\r\n                      }\r\n                      for (k = 0; k < name.length; k++) {\r\n                          s = name[k];\r\n                          name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                              new (tree.Keyword)(s) :\r\n                              (s.charAt(0) === '@' ?\r\n                                  new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                  new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                      }\r\n                      return name;\r\n                  }\r\n                  parserInput.restore();\r\n              }\r\n          }\r\n      };\r\n  };\r\n  Parser.serializeVars = function (vars) {\r\n      var s = '';\r\n      for (var name_1 in vars) {\r\n          if (Object.hasOwnProperty.call(vars, name_1)) {\r\n              var value = vars[name_1];\r\n              s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n          }\r\n      }\r\n      return s;\r\n  };\n\n  function boolean(condition) {\r\n      return condition ? Keyword.True : Keyword.False;\r\n  }\r\n  /**\r\n   * Functions with evalArgs set to false are sent context\r\n   * as the first argument.\r\n   */\r\n  function If(context, condition, trueValue, falseValue) {\r\n      return condition.eval(context) ? trueValue.eval(context)\r\n          : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n  }\r\n  If.evalArgs = false;\r\n  var boolean$1 = { boolean: boolean, 'if': If };\n\n  var colorFunctions;\r\n  function clamp$1(val) {\r\n      return Math.min(1, Math.max(0, val));\r\n  }\r\n  function hsla(origColor, hsl) {\r\n      var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n      if (color) {\r\n          if (origColor.value &&\r\n              /^(rgb|hsl)/.test(origColor.value)) {\r\n              color.value = origColor.value;\r\n          }\r\n          else {\r\n              color.value = 'rgb';\r\n          }\r\n          return color;\r\n      }\r\n  }\r\n  function toHSL(color) {\r\n      if (color.toHSL) {\r\n          return color.toHSL();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function toHSV(color) {\r\n      if (color.toHSV) {\r\n          return color.toHSV();\r\n      }\r\n      else {\r\n          throw new Error('Argument cannot be evaluated to a color');\r\n      }\r\n  }\r\n  function number(n) {\r\n      if (n instanceof Dimension) {\r\n          return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n      }\r\n      else if (typeof n === 'number') {\r\n          return n;\r\n      }\r\n      else {\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'color functions take numbers as parameters'\r\n          };\r\n      }\r\n  }\r\n  function scaled(n, size) {\r\n      if (n instanceof Dimension && n.unit.is('%')) {\r\n          return parseFloat(n.value * size / 100);\r\n      }\r\n      else {\r\n          return number(n);\r\n      }\r\n  }\r\n  colorFunctions = {\r\n      rgb: function (r, g, b) {\r\n          var color = colorFunctions.rgba(r, g, b, 1.0);\r\n          if (color) {\r\n              color.value = 'rgb';\r\n              return color;\r\n          }\r\n      },\r\n      rgba: function (r, g, b, a) {\r\n          try {\r\n              if (r instanceof Color) {\r\n                  if (g) {\r\n                      a = number(g);\r\n                  }\r\n                  else {\r\n                      a = r.alpha;\r\n                  }\r\n                  return new Color(r.rgb, a, 'rgba');\r\n              }\r\n              var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n              a = number(a);\r\n              return new Color(rgb, a, 'rgba');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsl: function (h, s, l) {\r\n          var color = colorFunctions.hsla(h, s, l, 1.0);\r\n          if (color) {\r\n              color.value = 'hsl';\r\n              return color;\r\n          }\r\n      },\r\n      hsla: function (h, s, l, a) {\r\n          try {\r\n              if (h instanceof Color) {\r\n                  if (s) {\r\n                      a = number(s);\r\n                  }\r\n                  else {\r\n                      a = h.alpha;\r\n                  }\r\n                  return new Color(h.rgb, a, 'hsla');\r\n              }\r\n              var m1_1;\r\n              var m2_1;\r\n              function hue(h) {\r\n                  h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                  if (h * 6 < 1) {\r\n                      return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                  }\r\n                  else if (h * 2 < 1) {\r\n                      return m2_1;\r\n                  }\r\n                  else if (h * 3 < 2) {\r\n                      return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                  }\r\n                  else {\r\n                      return m1_1;\r\n                  }\r\n              }\r\n              h = (number(h) % 360) / 360;\r\n              s = clamp$1(number(s));\r\n              l = clamp$1(number(l));\r\n              a = clamp$1(number(a));\r\n              m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n              m1_1 = l * 2 - m2_1;\r\n              var rgb = [\r\n                  hue(h + 1 / 3) * 255,\r\n                  hue(h) * 255,\r\n                  hue(h - 1 / 3) * 255\r\n              ];\r\n              a = number(a);\r\n              return new Color(rgb, a, 'hsla');\r\n          }\r\n          catch (e) { }\r\n      },\r\n      hsv: function (h, s, v) {\r\n          return colorFunctions.hsva(h, s, v, 1.0);\r\n      },\r\n      hsva: function (h, s, v, a) {\r\n          h = ((number(h) % 360) / 360) * 360;\r\n          s = number(s);\r\n          v = number(v);\r\n          a = number(a);\r\n          var i;\r\n          var f;\r\n          i = Math.floor((h / 60) % 6);\r\n          f = (h / 60) - i;\r\n          var vs = [v,\r\n              v * (1 - s),\r\n              v * (1 - f * s),\r\n              v * (1 - (1 - f) * s)];\r\n          var perm = [[0, 3, 1],\r\n              [2, 0, 1],\r\n              [1, 0, 3],\r\n              [1, 2, 0],\r\n              [3, 1, 0],\r\n              [0, 1, 2]];\r\n          return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n      },\r\n      hue: function (color) {\r\n          return new Dimension(toHSL(color).h);\r\n      },\r\n      saturation: function (color) {\r\n          return new Dimension(toHSL(color).s * 100, '%');\r\n      },\r\n      lightness: function (color) {\r\n          return new Dimension(toHSL(color).l * 100, '%');\r\n      },\r\n      hsvhue: function (color) {\r\n          return new Dimension(toHSV(color).h);\r\n      },\r\n      hsvsaturation: function (color) {\r\n          return new Dimension(toHSV(color).s * 100, '%');\r\n      },\r\n      hsvvalue: function (color) {\r\n          return new Dimension(toHSV(color).v * 100, '%');\r\n      },\r\n      red: function (color) {\r\n          return new Dimension(color.rgb[0]);\r\n      },\r\n      green: function (color) {\r\n          return new Dimension(color.rgb[1]);\r\n      },\r\n      blue: function (color) {\r\n          return new Dimension(color.rgb[2]);\r\n      },\r\n      alpha: function (color) {\r\n          return new Dimension(toHSL(color).a);\r\n      },\r\n      luma: function (color) {\r\n          return new Dimension(color.luma() * color.alpha * 100, '%');\r\n      },\r\n      luminance: function (color) {\r\n          var luminance = (0.2126 * color.rgb[0] / 255) +\r\n              (0.7152 * color.rgb[1] / 255) +\r\n              (0.0722 * color.rgb[2] / 255);\r\n          return new Dimension(luminance * color.alpha * 100, '%');\r\n      },\r\n      saturate: function (color, amount, method) {\r\n          // filter: saturate(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s += hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s += amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      desaturate: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.s -= hsl.s * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.s -= amount.value / 100;\r\n          }\r\n          hsl.s = clamp$1(hsl.s);\r\n          return hsla(color, hsl);\r\n      },\r\n      lighten: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l += hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l += amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      darken: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.l -= hsl.l * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.l -= amount.value / 100;\r\n          }\r\n          hsl.l = clamp$1(hsl.l);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadein: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a += hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a += amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fadeout: function (color, amount, method) {\r\n          var hsl = toHSL(color);\r\n          if (typeof method !== 'undefined' && method.value === 'relative') {\r\n              hsl.a -= hsl.a * amount.value / 100;\r\n          }\r\n          else {\r\n              hsl.a -= amount.value / 100;\r\n          }\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      fade: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          hsl.a = amount.value / 100;\r\n          hsl.a = clamp$1(hsl.a);\r\n          return hsla(color, hsl);\r\n      },\r\n      spin: function (color, amount) {\r\n          var hsl = toHSL(color);\r\n          var hue = (hsl.h + amount.value) % 360;\r\n          hsl.h = hue < 0 ? 360 + hue : hue;\r\n          return hsla(color, hsl);\r\n      },\r\n      //\r\n      // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n      // http://sass-lang.com\r\n      //\r\n      mix: function (color1, color2, weight) {\r\n          if (!weight) {\r\n              weight = new Dimension(50);\r\n          }\r\n          var p = weight.value / 100.0;\r\n          var w = p * 2 - 1;\r\n          var a = toHSL(color1).a - toHSL(color2).a;\r\n          var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n          var w2 = 1 - w1;\r\n          var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n              color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n              color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n          var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n          return new Color(rgb, alpha);\r\n      },\r\n      greyscale: function (color) {\r\n          return colorFunctions.desaturate(color, new Dimension(100));\r\n      },\r\n      contrast: function (color, dark, light, threshold) {\r\n          // filter: contrast(3.2);\r\n          // should be kept as is, so check for color\r\n          if (!color.rgb) {\r\n              return null;\r\n          }\r\n          if (typeof light === 'undefined') {\r\n              light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n          }\r\n          if (typeof dark === 'undefined') {\r\n              dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n          }\r\n          // Figure out which is actually light and dark:\r\n          if (dark.luma() > light.luma()) {\r\n              var t = light;\r\n              light = dark;\r\n              dark = t;\r\n          }\r\n          if (typeof threshold === 'undefined') {\r\n              threshold = 0.43;\r\n          }\r\n          else {\r\n              threshold = number(threshold);\r\n          }\r\n          if (color.luma() < threshold) {\r\n              return light;\r\n          }\r\n          else {\r\n              return dark;\r\n          }\r\n      },\r\n      // Changes made in 2.7.0 - Reverted in 3.0.0\r\n      // contrast: function (color, color1, color2, threshold) {\r\n      //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n      //     // according to the standard WCAG contrast ratio calculation.\r\n      //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n      //     // The threshold param is no longer used, in line with SASS.\r\n      //     // filter: contrast(3.2);\r\n      //     // should be kept as is, so check for color\r\n      //     if (!color.rgb) {\r\n      //         return null;\r\n      //     }\r\n      //     if (typeof color1 === 'undefined') {\r\n      //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n      //     }\r\n      //     if (typeof color2 === 'undefined') {\r\n      //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n      //     }\r\n      //     var contrast1, contrast2;\r\n      //     var luma = color.luma();\r\n      //     var luma1 = color1.luma();\r\n      //     var luma2 = color2.luma();\r\n      //     // Calculate contrast ratios for each color\r\n      //     if (luma > luma1) {\r\n      //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n      //     } else {\r\n      //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (luma > luma2) {\r\n      //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n      //     } else {\r\n      //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n      //     }\r\n      //     if (contrast1 > contrast2) {\r\n      //         return color1;\r\n      //     } else {\r\n      //         return color2;\r\n      //     }\r\n      // },\r\n      argb: function (color) {\r\n          return new Anonymous(color.toARGB());\r\n      },\r\n      color: function (c) {\r\n          if ((c instanceof Quoted) &&\r\n              (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n              var val = c.value.slice(1);\r\n              return new Color(val, undefined, \"#\" + val);\r\n          }\r\n          if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n              c.value = undefined;\r\n              return c;\r\n          }\r\n          throw {\r\n              type: 'Argument',\r\n              message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n          };\r\n      },\r\n      tint: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n      },\r\n      shade: function (color, amount) {\r\n          return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n      }\r\n  };\r\n  var color = colorFunctions;\n\n  // Color Blending\r\n  // ref: http://www.w3.org/TR/compositing-1\r\n  function colorBlend(mode, color1, color2) {\r\n      var ab = color1.alpha; // result\r\n      var // backdrop\r\n      cb;\r\n      var as = color2.alpha;\r\n      var // source\r\n      cs;\r\n      var ar;\r\n      var cr;\r\n      var r = [];\r\n      ar = as + ab * (1 - as);\r\n      for (var i = 0; i < 3; i++) {\r\n          cb = color1.rgb[i] / 255;\r\n          cs = color2.rgb[i] / 255;\r\n          cr = mode(cb, cs);\r\n          if (ar) {\r\n              cr = (as * cs + ab * (cb -\r\n                  as * (cb + cs - cr))) / ar;\r\n          }\r\n          r[i] = cr * 255;\r\n      }\r\n      return new Color(r, ar);\r\n  }\r\n  var colorBlendModeFunctions = {\r\n      multiply: function (cb, cs) {\r\n          return cb * cs;\r\n      },\r\n      screen: function (cb, cs) {\r\n          return cb + cs - cb * cs;\r\n      },\r\n      overlay: function (cb, cs) {\r\n          cb *= 2;\r\n          return (cb <= 1) ?\r\n              colorBlendModeFunctions.multiply(cb, cs) :\r\n              colorBlendModeFunctions.screen(cb - 1, cs);\r\n      },\r\n      softlight: function (cb, cs) {\r\n          var d = 1;\r\n          var e = cb;\r\n          if (cs > 0.5) {\r\n              e = 1;\r\n              d = (cb > 0.25) ? Math.sqrt(cb)\r\n                  : ((16 * cb - 12) * cb + 4) * cb;\r\n          }\r\n          return cb - (1 - 2 * cs) * e * (d - cb);\r\n      },\r\n      hardlight: function (cb, cs) {\r\n          return colorBlendModeFunctions.overlay(cs, cb);\r\n      },\r\n      difference: function (cb, cs) {\r\n          return Math.abs(cb - cs);\r\n      },\r\n      exclusion: function (cb, cs) {\r\n          return cb + cs - 2 * cb * cs;\r\n      },\r\n      // non-w3c functions:\r\n      average: function (cb, cs) {\r\n          return (cb + cs) / 2;\r\n      },\r\n      negation: function (cb, cs) {\r\n          return 1 - Math.abs(cb + cs - 1);\r\n      }\r\n  };\r\n  for (var f in colorBlendModeFunctions) {\r\n      if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n          colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n      }\r\n  }\n\n  var dataUri = (function (environment) {\r\n      var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n      return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n              if (!filePathNode) {\r\n                  filePathNode = mimetypeNode;\r\n                  mimetypeNode = null;\r\n              }\r\n              var mimetype = mimetypeNode && mimetypeNode.value;\r\n              var filePath = filePathNode.value;\r\n              var currentFileInfo = this.currentFileInfo;\r\n              var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                  currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n              var fragmentStart = filePath.indexOf('#');\r\n              var fragment = '';\r\n              if (fragmentStart !== -1) {\r\n                  fragment = filePath.slice(fragmentStart);\r\n                  filePath = filePath.slice(0, fragmentStart);\r\n              }\r\n              var context = clone(this.context);\r\n              context.rawBuffer = true;\r\n              var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n              if (!fileManager) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              var useBase64 = false;\r\n              // detect the mimetype if not given\r\n              if (!mimetypeNode) {\r\n                  mimetype = environment.mimeLookup(filePath);\r\n                  if (mimetype === 'image/svg+xml') {\r\n                      useBase64 = false;\r\n                  }\r\n                  else {\r\n                      // use base 64 unless it's an ASCII or UTF-8 format\r\n                      var charset = environment.charsetLookup(mimetype);\r\n                      useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                  }\r\n                  if (useBase64) {\r\n                      mimetype += ';base64';\r\n                  }\r\n              }\r\n              else {\r\n                  useBase64 = /;base64$/.test(mimetype);\r\n              }\r\n              var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n              if (!fileSync.contents) {\r\n                  logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                  return fallback(this, filePathNode || mimetypeNode);\r\n              }\r\n              var buf = fileSync.contents;\r\n              if (useBase64 && !environment.encodeBase64) {\r\n                  return fallback(this, filePathNode);\r\n              }\r\n              buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n              var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n              return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var getItemsFromNode = function (node) {\r\n      // handle non-array values as an array of length 1\r\n      // return 'undefined' if index is invalid\r\n      var items = Array.isArray(node.value) ?\r\n          node.value : Array(node);\r\n      return items;\r\n  };\r\n  var list = {\r\n      _SELF: function (n) {\r\n          return n;\r\n      },\r\n      extract: function (values, index) {\r\n          // (1-based index)\r\n          index = index.value - 1;\r\n          return getItemsFromNode(values)[index];\r\n      },\r\n      length: function (values) {\r\n          return new Dimension(getItemsFromNode(values).length);\r\n      },\r\n      /**\r\n       * Creates a Less list of incremental values.\r\n       * Modeled after Lodash's range function, also exists natively in PHP\r\n       *\r\n       * @param {Dimension} [start=1]\r\n       * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n       * @param {Dimension} [step=1]\r\n       */\r\n      range: function (start, end, step) {\r\n          var from;\r\n          var to;\r\n          var stepValue = 1;\r\n          var list = [];\r\n          if (end) {\r\n              to = end;\r\n              from = start.value;\r\n              if (step) {\r\n                  stepValue = step.value;\r\n              }\r\n          }\r\n          else {\r\n              from = 1;\r\n              to = start;\r\n          }\r\n          for (var i = from; i <= to.value; i += stepValue) {\r\n              list.push(new Dimension(i, to.unit));\r\n          }\r\n          return new Expression(list);\r\n      },\r\n      each: function (list, rs) {\r\n          var rules = [];\r\n          var newRules;\r\n          var iterator;\r\n          if (list.value && !(list instanceof Quoted)) {\r\n              if (Array.isArray(list.value)) {\r\n                  iterator = list.value;\r\n              }\r\n              else {\r\n                  iterator = [list.value];\r\n              }\r\n          }\r\n          else if (list.ruleset) {\r\n              iterator = list.ruleset.rules;\r\n          }\r\n          else if (list.rules) {\r\n              iterator = list.rules;\r\n          }\r\n          else if (Array.isArray(list)) {\r\n              iterator = list;\r\n          }\r\n          else {\r\n              iterator = [list];\r\n          }\r\n          var valueName = '@value';\r\n          var keyName = '@key';\r\n          var indexName = '@index';\r\n          if (rs.params) {\r\n              valueName = rs.params[0] && rs.params[0].name;\r\n              keyName = rs.params[1] && rs.params[1].name;\r\n              indexName = rs.params[2] && rs.params[2].name;\r\n              rs = rs.rules;\r\n          }\r\n          else {\r\n              rs = rs.ruleset;\r\n          }\r\n          for (var i = 0; i < iterator.length; i++) {\r\n              var key = void 0;\r\n              var value = void 0;\r\n              var item = iterator[i];\r\n              if (item instanceof Declaration) {\r\n                  key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                  value = item.value;\r\n              }\r\n              else {\r\n                  key = new Dimension(i + 1);\r\n                  value = item;\r\n              }\r\n              if (item instanceof Comment) {\r\n                  continue;\r\n              }\r\n              newRules = rs.rules.slice(0);\r\n              if (valueName) {\r\n                  newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (indexName) {\r\n                  newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n              }\r\n              if (keyName) {\r\n                  newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n              }\r\n              rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n          }\r\n          return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n      }\r\n  };\n\n  var MathHelper = function (fn, unit, n) {\r\n      if (!(n instanceof Dimension)) {\r\n          throw { type: 'Argument', message: 'argument must be a number' };\r\n      }\r\n      if (unit == null) {\r\n          unit = n.unit;\r\n      }\r\n      else {\r\n          n = n.unify();\r\n      }\r\n      return new Dimension(fn(parseFloat(n.value)), unit);\r\n  };\n\n  var mathFunctions = {\r\n      // name,  unit\r\n      ceil: null,\r\n      floor: null,\r\n      sqrt: null,\r\n      abs: null,\r\n      tan: '',\r\n      sin: '',\r\n      cos: '',\r\n      atan: 'rad',\r\n      asin: 'rad',\r\n      acos: 'rad'\r\n  };\r\n  for (var f$1 in mathFunctions) {\r\n      if (mathFunctions.hasOwnProperty(f$1)) {\r\n          mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n      }\r\n  }\r\n  mathFunctions.round = function (n, f) {\r\n      var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n      return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n  };\n\n  var minMax = function (isMin, args) {\r\n      args = Array.prototype.slice.call(args);\r\n      switch (args.length) {\r\n          case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n      }\r\n      var i; // key is the unit.toString() for unified Dimension values,\r\n      var j;\r\n      var current;\r\n      var currentUnified;\r\n      var referenceUnified;\r\n      var unit;\r\n      var unitStatic;\r\n      var unitClone;\r\n      var // elems only contains original argument values.\r\n      order = [];\r\n      var values = {};\r\n      // value is the index into the order array.\r\n      for (i = 0; i < args.length; i++) {\r\n          current = args[i];\r\n          if (!(current instanceof Dimension)) {\r\n              if (Array.isArray(args[i].value)) {\r\n                  Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n              }\r\n              continue;\r\n          }\r\n          currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n          unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n          unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n          unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n          j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n          if (j === undefined) {\r\n              if (unitStatic !== undefined && unit !== unitStatic) {\r\n                  throw { type: 'Argument', message: 'incompatible types' };\r\n              }\r\n              values[unit] = order.length;\r\n              order.push(current);\r\n              continue;\r\n          }\r\n          referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n          if (isMin && currentUnified.value < referenceUnified.value ||\r\n              !isMin && currentUnified.value > referenceUnified.value) {\r\n              order[j] = current;\r\n          }\r\n      }\r\n      if (order.length == 1) {\r\n          return order[0];\r\n      }\r\n      args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n      return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n  };\r\n  var number$1 = {\r\n      min: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(true, args);\r\n      },\r\n      max: function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return minMax(false, args);\r\n      },\r\n      convert: function (val, unit) {\r\n          return val.convertTo(unit.value);\r\n      },\r\n      pi: function () {\r\n          return new Dimension(Math.PI);\r\n      },\r\n      mod: function (a, b) {\r\n          return new Dimension(a.value % b.value, a.unit);\r\n      },\r\n      pow: function (x, y) {\r\n          if (typeof x === 'number' && typeof y === 'number') {\r\n              x = new Dimension(x);\r\n              y = new Dimension(y);\r\n          }\r\n          else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n              throw { type: 'Argument', message: 'arguments must be numbers' };\r\n          }\r\n          return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n      },\r\n      percentage: function (n) {\r\n          var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n          return result;\r\n      }\r\n  };\n\n  var string = {\r\n      e: function (str) {\r\n          return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n      },\r\n      escape: function (str) {\r\n          return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n              .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n      },\r\n      replace: function (string, pattern, replacement, flags) {\r\n          var result = string.value;\r\n          replacement = (replacement.type === 'Quoted') ?\r\n              replacement.value : replacement.toCSS();\r\n          result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      },\r\n      '%': function (string /* arg, arg, ... */) {\r\n          var args = Array.prototype.slice.call(arguments, 1);\r\n          var result = string.value;\r\n          var _loop_1 = function (i) {\r\n              /* jshint loopfunc:true */\r\n              result = result.replace(/%[sda]/i, function (token) {\r\n                  var value = ((args[i].type === 'Quoted') &&\r\n                      token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                  return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n              });\r\n          };\r\n          for (var i = 0; i < args.length; i++) {\r\n              _loop_1(i);\r\n          }\r\n          result = result.replace(/%%/g, '%');\r\n          return new Quoted(string.quote || '', result, string.escaped);\r\n      }\r\n  };\n\n  var svg = (function (environment) {\r\n      return { 'svg-gradient': function (direction) {\r\n              var stops;\r\n              var gradientDirectionSvg;\r\n              var gradientType = 'linear';\r\n              var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n              var renderEnv = { compress: false };\r\n              var returner;\r\n              var directionValue = direction.toCSS(renderEnv);\r\n              var i;\r\n              var color;\r\n              var position;\r\n              var positionValue;\r\n              var alpha;\r\n              function throwArgumentDescriptor() {\r\n                  throw { type: 'Argument',\r\n                      message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                          ' end_color [end_position] or direction, color list' };\r\n              }\r\n              if (arguments.length == 2) {\r\n                  if (arguments[1].value.length < 2) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  stops = arguments[1].value;\r\n              }\r\n              else if (arguments.length < 3) {\r\n                  throwArgumentDescriptor();\r\n              }\r\n              else {\r\n                  stops = Array.prototype.slice.call(arguments, 1);\r\n              }\r\n              switch (directionValue) {\r\n                  case 'to bottom':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'to bottom right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                      break;\r\n                  case 'to top right':\r\n                      gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                      break;\r\n                  case 'ellipse':\r\n                  case 'ellipse at center':\r\n                      gradientType = 'radial';\r\n                      gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                      rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                      break;\r\n                  default:\r\n                      throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                              ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n              }\r\n              returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n              for (i = 0; i < stops.length; i += 1) {\r\n                  if (stops[i] instanceof Expression) {\r\n                      color = stops[i].value[0];\r\n                      position = stops[i].value[1];\r\n                  }\r\n                  else {\r\n                      color = stops[i];\r\n                      position = undefined;\r\n                  }\r\n                  if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                      throwArgumentDescriptor();\r\n                  }\r\n                  positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                  alpha = color.alpha;\r\n                  returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n              }\r\n              returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n              returner = encodeURIComponent(returner);\r\n              returner = \"data:image/svg+xml,\" + returner;\r\n              return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n          } };\r\n  });\n\n  var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n  var isunit = function (n, unit) {\r\n      if (unit === undefined) {\r\n          throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n      }\r\n      unit = typeof unit.value === 'string' ? unit.value : unit;\r\n      if (typeof unit !== 'string') {\r\n          throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n      }\r\n      return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n  };\r\n  var types = {\r\n      isruleset: function (n) {\r\n          return isa(n, DetachedRuleset);\r\n      },\r\n      iscolor: function (n) {\r\n          return isa(n, Color);\r\n      },\r\n      isnumber: function (n) {\r\n          return isa(n, Dimension);\r\n      },\r\n      isstring: function (n) {\r\n          return isa(n, Quoted);\r\n      },\r\n      iskeyword: function (n) {\r\n          return isa(n, Keyword);\r\n      },\r\n      isurl: function (n) {\r\n          return isa(n, URL);\r\n      },\r\n      ispixel: function (n) {\r\n          return isunit(n, 'px');\r\n      },\r\n      ispercentage: function (n) {\r\n          return isunit(n, '%');\r\n      },\r\n      isem: function (n) {\r\n          return isunit(n, 'em');\r\n      },\r\n      isunit: isunit,\r\n      unit: function (val, unit) {\r\n          if (!(val instanceof Dimension)) {\r\n              throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n          }\r\n          if (unit) {\r\n              if (unit instanceof Keyword) {\r\n                  unit = unit.value;\r\n              }\r\n              else {\r\n                  unit = unit.toCSS();\r\n              }\r\n          }\r\n          else {\r\n              unit = '';\r\n          }\r\n          return new Dimension(val.value, unit);\r\n      },\r\n      'get-unit': function (n) {\r\n          return new Anonymous(n.unit);\r\n      }\r\n  };\n\n  var Functions = (function (environment) {\r\n      var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n      // register functions\r\n      functionRegistry.addMultiple(boolean$1);\r\n      functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n      functionRegistry.addMultiple(color);\r\n      functionRegistry.addMultiple(colorBlend);\r\n      functionRegistry.addMultiple(dataUri(environment));\r\n      functionRegistry.addMultiple(list);\r\n      functionRegistry.addMultiple(mathFunctions);\r\n      functionRegistry.addMultiple(number$1);\r\n      functionRegistry.addMultiple(string);\r\n      functionRegistry.addMultiple(svg());\r\n      functionRegistry.addMultiple(types);\r\n      return functions;\r\n  });\n\n  var sourceMapOutput = (function (environment) {\r\n      var SourceMapOutput = /** @class */ (function () {\r\n          function SourceMapOutput(options) {\r\n              this._css = [];\r\n              this._rootNode = options.rootNode;\r\n              this._contentsMap = options.contentsMap;\r\n              this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n              if (options.sourceMapFilename) {\r\n                  this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n              }\r\n              this._outputFilename = options.outputFilename;\r\n              this.sourceMapURL = options.sourceMapURL;\r\n              if (options.sourceMapBasepath) {\r\n                  this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n              }\r\n              if (options.sourceMapRootpath) {\r\n                  this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                  if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                      this._sourceMapRootpath += '/';\r\n                  }\r\n              }\r\n              else {\r\n                  this._sourceMapRootpath = '';\r\n              }\r\n              this._outputSourceFiles = options.outputSourceFiles;\r\n              this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n              this._lineNumber = 0;\r\n              this._column = 0;\r\n          }\r\n          SourceMapOutput.prototype.removeBasepath = function (path) {\r\n              if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                  path = path.substring(this._sourceMapBasepath.length);\r\n                  if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                      path = path.substring(1);\r\n                  }\r\n              }\r\n              return path;\r\n          };\r\n          SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n              filename = filename.replace(/\\\\/g, '/');\r\n              filename = this.removeBasepath(filename);\r\n              return (this._sourceMapRootpath || '') + filename;\r\n          };\r\n          SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n              // ignore adding empty strings\r\n              if (!chunk) {\r\n                  return;\r\n              }\r\n              var lines;\r\n              var sourceLines;\r\n              var columns;\r\n              var sourceColumns;\r\n              var i;\r\n              if (fileInfo && fileInfo.filename) {\r\n                  var inputSource = this._contentsMap[fileInfo.filename];\r\n                  // remove vars/banner added to the top of the file\r\n                  if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                      // adjust the index\r\n                      index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                      if (index < 0) {\r\n                          index = 0;\r\n                      }\r\n                      // adjust the source\r\n                      inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                  }\r\n                  // ignore empty content\r\n                  if (inputSource === undefined) {\r\n                      return;\r\n                  }\r\n                  inputSource = inputSource.substring(0, index);\r\n                  sourceLines = inputSource.split('\\n');\r\n                  sourceColumns = sourceLines[sourceLines.length - 1];\r\n              }\r\n              lines = chunk.split('\\n');\r\n              columns = lines[lines.length - 1];\r\n              if (fileInfo && fileInfo.filename) {\r\n                  if (!mapLines) {\r\n                      this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                          original: { line: sourceLines.length, column: sourceColumns.length },\r\n                          source: this.normalizeFilename(fileInfo.filename) });\r\n                  }\r\n                  else {\r\n                      for (i = 0; i < lines.length; i++) {\r\n                          this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                              original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                              source: this.normalizeFilename(fileInfo.filename) });\r\n                      }\r\n                  }\r\n              }\r\n              if (lines.length === 1) {\r\n                  this._column += columns.length;\r\n              }\r\n              else {\r\n                  this._lineNumber += lines.length - 1;\r\n                  this._column = columns.length;\r\n              }\r\n              this._css.push(chunk);\r\n          };\r\n          SourceMapOutput.prototype.isEmpty = function () {\r\n              return this._css.length === 0;\r\n          };\r\n          SourceMapOutput.prototype.toCSS = function (context) {\r\n              this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n              if (this._outputSourceFiles) {\r\n                  for (var filename in this._contentsMap) {\r\n                      if (this._contentsMap.hasOwnProperty(filename)) {\r\n                          var source = this._contentsMap[filename];\r\n                          if (this._contentsIgnoredCharsMap[filename]) {\r\n                              source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                          }\r\n                          this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                      }\r\n                  }\r\n              }\r\n              this._rootNode.genCSS(context, this);\r\n              if (this._css.length > 0) {\r\n                  var sourceMapURL = void 0;\r\n                  var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                  if (this.sourceMapURL) {\r\n                      sourceMapURL = this.sourceMapURL;\r\n                  }\r\n                  else if (this._sourceMapFilename) {\r\n                      sourceMapURL = this._sourceMapFilename;\r\n                  }\r\n                  this.sourceMapURL = sourceMapURL;\r\n                  this.sourceMap = sourceMapContent;\r\n              }\r\n              return this._css.join('');\r\n          };\r\n          return SourceMapOutput;\r\n      }());\r\n      return SourceMapOutput;\r\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\r\n      var SourceMapBuilder = /** @class */ (function () {\r\n          function SourceMapBuilder(options) {\r\n              this.options = options;\r\n          }\r\n          SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n              var sourceMapOutput = new SourceMapOutput({\r\n                  contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                  rootNode: rootNode,\r\n                  contentsMap: imports.contents,\r\n                  sourceMapFilename: this.options.sourceMapFilename,\r\n                  sourceMapURL: this.options.sourceMapURL,\r\n                  outputFilename: this.options.sourceMapOutputFilename,\r\n                  sourceMapBasepath: this.options.sourceMapBasepath,\r\n                  sourceMapRootpath: this.options.sourceMapRootpath,\r\n                  outputSourceFiles: this.options.outputSourceFiles,\r\n                  sourceMapGenerator: this.options.sourceMapGenerator,\r\n                  sourceMapFileInline: this.options.sourceMapFileInline,\r\n                  disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n              });\r\n              var css = sourceMapOutput.toCSS(options);\r\n              this.sourceMap = sourceMapOutput.sourceMap;\r\n              this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n              if (this.options.sourceMapInputFilename) {\r\n                  this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n              }\r\n              if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                  this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n              }\r\n              return css + this.getCSSAppendage();\r\n          };\r\n          SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n              var sourceMapURL = this.sourceMapURL;\r\n              if (this.options.sourceMapFileInline) {\r\n                  if (this.sourceMap === undefined) {\r\n                      return '';\r\n                  }\r\n                  sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n              }\r\n              if (this.options.disableSourcemapAnnotation) {\r\n                  return '';\r\n              }\r\n              if (sourceMapURL) {\r\n                  return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n              }\r\n              return '';\r\n          };\r\n          SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n              return this.sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n              this.sourceMap = sourceMap;\r\n          };\r\n          SourceMapBuilder.prototype.isInline = function () {\r\n              return this.options.sourceMapFileInline;\r\n          };\r\n          SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n              return this.sourceMapURL;\r\n          };\r\n          SourceMapBuilder.prototype.getOutputFilename = function () {\r\n              return this.options.sourceMapOutputFilename;\r\n          };\r\n          SourceMapBuilder.prototype.getInputFilename = function () {\r\n              return this.sourceMapInputFilename;\r\n          };\r\n          return SourceMapBuilder;\r\n      }());\r\n      return SourceMapBuilder;\r\n  });\n\n  var transformTree = (function (root, options) {\r\n      if (options === void 0) { options = {}; }\r\n      var evaldRoot;\r\n      var variables = options.variables;\r\n      var evalEnv = new contexts.Eval(options);\r\n      //\r\n      // Allows setting variables with a hash, so:\r\n      //\r\n      //   `{ color: new tree.Color('#f01') }` will become:\r\n      //\r\n      //   new tree.Declaration('@color',\r\n      //     new tree.Value([\r\n      //       new tree.Expression([\r\n      //         new tree.Color('#f01')\r\n      //       ])\r\n      //     ])\r\n      //   )\r\n      //\r\n      if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n          variables = Object.keys(variables).map(function (k) {\r\n              var value = variables[k];\r\n              if (!(value instanceof tree.Value)) {\r\n                  if (!(value instanceof tree.Expression)) {\r\n                      value = new tree.Expression([value]);\r\n                  }\r\n                  value = new tree.Value([value]);\r\n              }\r\n              return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n          });\r\n          evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n      }\r\n      var visitors$1 = [\r\n          new visitors.JoinSelectorVisitor(),\r\n          new visitors.MarkVisibleSelectorsVisitor(true),\r\n          new visitors.ExtendVisitor(),\r\n          new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n      ];\r\n      var preEvalVisitors = [];\r\n      var v;\r\n      var visitorIterator;\r\n      /**\r\n       * first() / get() allows visitors to be added while visiting\r\n       *\r\n       * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n       */\r\n      if (options.pluginManager) {\r\n          visitorIterator = options.pluginManager.visitor();\r\n          for (var i = 0; i < 2; i++) {\r\n              visitorIterator.first();\r\n              while ((v = visitorIterator.get())) {\r\n                  if (v.isPreEvalVisitor) {\r\n                      if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                          preEvalVisitors.push(v);\r\n                          v.run(root);\r\n                      }\r\n                  }\r\n                  else {\r\n                      if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                          if (v.isPreVisitor) {\r\n                              visitors$1.unshift(v);\r\n                          }\r\n                          else {\r\n                              visitors$1.push(v);\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      evaldRoot = root.eval(evalEnv);\r\n      for (var i = 0; i < visitors$1.length; i++) {\r\n          visitors$1[i].run(evaldRoot);\r\n      }\r\n      // Run any remaining visitors added after eval pass\r\n      if (options.pluginManager) {\r\n          visitorIterator.first();\r\n          while ((v = visitorIterator.get())) {\r\n              if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                  v.run(evaldRoot);\r\n              }\r\n          }\r\n      }\r\n      return evaldRoot;\r\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\r\n      var ParseTree = /** @class */ (function () {\r\n          function ParseTree(root, imports) {\r\n              this.root = root;\r\n              this.imports = imports;\r\n          }\r\n          ParseTree.prototype.toCSS = function (options) {\r\n              var evaldRoot;\r\n              var result = {};\r\n              var sourceMapBuilder;\r\n              try {\r\n                  evaldRoot = transformTree(this.root, options);\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              try {\r\n                  var compress = Boolean(options.compress);\r\n                  if (compress) {\r\n                      logger.warn('The compress option has been deprecated. ' +\r\n                          'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                  }\r\n                  var toCSSOptions = {\r\n                      compress: compress,\r\n                      dumpLineNumbers: options.dumpLineNumbers,\r\n                      strictUnits: Boolean(options.strictUnits),\r\n                      numPrecision: 8\r\n                  };\r\n                  if (options.sourceMap) {\r\n                      sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                      result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                  }\r\n                  else {\r\n                      result.css = evaldRoot.toCSS(toCSSOptions);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  throw new LessError(e, this.imports);\r\n              }\r\n              if (options.pluginManager) {\r\n                  var postProcessors = options.pluginManager.getPostProcessors();\r\n                  for (var i = 0; i < postProcessors.length; i++) {\r\n                      result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                  }\r\n              }\r\n              if (options.sourceMap) {\r\n                  result.map = sourceMapBuilder.getExternalSourceMap();\r\n              }\r\n              var rootFilename = this.imports.rootFilename;\r\n              result.imports = this.imports.files.filter(function (file) { return file !== rootFilename; });\r\n              return result;\r\n          };\r\n          return ParseTree;\r\n      }());\r\n      return ParseTree;\r\n  });\n\n  var importManager = (function (environment) {\r\n      // FileInfo = {\r\n      //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n      //  'filename' - full resolved filename of current file\r\n      //  'rootpath' - path to append to normal URLs for this node\r\n      //  'currentDirectory' - path to the current file, absolute\r\n      //  'rootFilename' - filename of the base file\r\n      //  'entryPath' - absolute path to the entry file\r\n      //  'reference' - whether the file should not be output and only output parts that are referenced\r\n      var ImportManager = /** @class */ (function () {\r\n          function ImportManager(less, context, rootFileInfo) {\r\n              this.less = less;\r\n              this.rootFilename = rootFileInfo.filename;\r\n              this.paths = context.paths || []; // Search paths, when importing\r\n              this.contents = {}; // map - filename to contents of all the files\r\n              this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n              this.mime = context.mime;\r\n              this.error = null;\r\n              this.context = context;\r\n              // Deprecated? Unused outside of here, could be useful.\r\n              this.queue = []; // Files which haven't been imported yet\r\n              this.files = []; // List of files imported\r\n          }\r\n          /**\r\n           * Add an import to be imported\r\n           * @param path - the raw path\r\n           * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n           * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n           * @param importOptions - import options\r\n           * @param callback - callback for when it is imported\r\n           */\r\n          ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n              var importManager = this;\r\n              var pluginLoader = this.context.pluginManager.Loader;\r\n              this.queue.push(path);\r\n              var fileParsedFunc = function (e, root, fullPath) {\r\n                  importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                  var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                  if (importOptions.optional && e) {\r\n                      callback(null, { rules: [] }, false, null);\r\n                      logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                  }\r\n                  else {\r\n                      var files = importManager.files;\r\n                      if (files.indexOf(fullPath) === -1) {\r\n                          files.push(fullPath);\r\n                      }\r\n                      if (e && !importManager.error) {\r\n                          importManager.error = e;\r\n                      }\r\n                      callback(e, root, importedEqualsRoot, fullPath);\r\n                  }\r\n              };\r\n              var newFileInfo = {\r\n                  rewriteUrls: this.context.rewriteUrls,\r\n                  entryPath: currentFileInfo.entryPath,\r\n                  rootpath: currentFileInfo.rootpath,\r\n                  rootFilename: currentFileInfo.rootFilename\r\n              };\r\n              var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n              if (!fileManager) {\r\n                  fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                  return;\r\n              }\r\n              var loadFileCallback = function (loadedFile) {\r\n                  var plugin;\r\n                  var resolvedFilename = loadedFile.filename;\r\n                  var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                  // Pass on an updated rootpath if path of imported file is relative and file\r\n                  // is in a (sub|sup) directory\r\n                  //\r\n                  // Examples:\r\n                  // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/module/nav/'\r\n                  // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                  //   then rootpath should become 'less/../'\r\n                  newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                  if (newFileInfo.rewriteUrls) {\r\n                      newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                      if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                          newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                      }\r\n                  }\r\n                  newFileInfo.filename = resolvedFilename;\r\n                  var newEnv = new contexts.Parse(importManager.context);\r\n                  newEnv.processImports = false;\r\n                  importManager.contents[resolvedFilename] = contents;\r\n                  if (currentFileInfo.reference || importOptions.reference) {\r\n                      newFileInfo.reference = true;\r\n                  }\r\n                  if (importOptions.isPlugin) {\r\n                      plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                      if (plugin instanceof LessError) {\r\n                          fileParsedFunc(plugin, null, resolvedFilename);\r\n                      }\r\n                      else {\r\n                          fileParsedFunc(null, plugin, resolvedFilename);\r\n                      }\r\n                  }\r\n                  else if (importOptions.inline) {\r\n                      fileParsedFunc(null, contents, resolvedFilename);\r\n                  }\r\n                  else {\r\n                      new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                          fileParsedFunc(e, root, resolvedFilename);\r\n                      });\r\n                  }\r\n              };\r\n              var loadedFile;\r\n              var promise;\r\n              var context = clone(this.context);\r\n              if (tryAppendExtension) {\r\n                  context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n              }\r\n              if (importOptions.isPlugin) {\r\n                  context.mime = 'application/javascript';\r\n                  if (context.syncImport) {\r\n                      loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n                  else {\r\n                      promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                  }\r\n              }\r\n              else {\r\n                  if (context.syncImport) {\r\n                      loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                  }\r\n                  else {\r\n                      promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                          if (err) {\r\n                              fileParsedFunc(err);\r\n                          }\r\n                          else {\r\n                              loadFileCallback(loadedFile);\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n              if (loadedFile) {\r\n                  if (!loadedFile.filename) {\r\n                      fileParsedFunc(loadedFile);\r\n                  }\r\n                  else {\r\n                      loadFileCallback(loadedFile);\r\n                  }\r\n              }\r\n              else if (promise) {\r\n                  promise.then(loadFileCallback, fileParsedFunc);\r\n              }\r\n          };\r\n          return ImportManager;\r\n      }());\r\n      return ImportManager;\r\n  });\n\n  var Render = (function (environment, ParseTree, ImportManager) {\r\n      var render = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  render.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              this.parse(input, options, function (err, root, imports, options) {\r\n                  if (err) {\r\n                      return callback(err);\r\n                  }\r\n                  var result;\r\n                  try {\r\n                      var parseTree = new ParseTree(root, imports);\r\n                      result = parseTree.toCSS(options);\r\n                  }\r\n                  catch (err) {\r\n                      return callback(err);\r\n                  }\r\n                  callback(null, result);\r\n              });\r\n          }\r\n      };\r\n      return render;\r\n  });\n\n  /**\r\n   * Plugin Manager\r\n   */\r\n  var PluginManager = /** @class */ (function () {\r\n      function PluginManager(less) {\r\n          this.less = less;\r\n          this.visitors = [];\r\n          this.preProcessors = [];\r\n          this.postProcessors = [];\r\n          this.installedPlugins = [];\r\n          this.fileManagers = [];\r\n          this.iterator = -1;\r\n          this.pluginCache = {};\r\n          this.Loader = new less.PluginLoader(less);\r\n      }\r\n      /**\r\n       * Adds all the plugins in the array\r\n       * @param {Array} plugins\r\n       */\r\n      PluginManager.prototype.addPlugins = function (plugins) {\r\n          if (plugins) {\r\n              for (var i = 0; i < plugins.length; i++) {\r\n                  this.addPlugin(plugins[i]);\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param plugin\r\n       * @param {String} filename\r\n       */\r\n      PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n          this.installedPlugins.push(plugin);\r\n          if (filename) {\r\n              this.pluginCache[filename] = plugin;\r\n          }\r\n          if (plugin.install) {\r\n              plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n          }\r\n      };\r\n      /**\r\n       *\r\n       * @param filename\r\n       */\r\n      PluginManager.prototype.get = function (filename) {\r\n          return this.pluginCache[filename];\r\n      };\r\n      /**\r\n       * Adds a visitor. The visitor object has options on itself to determine\r\n       * when it should run.\r\n       * @param visitor\r\n       */\r\n      PluginManager.prototype.addVisitor = function (visitor) {\r\n          this.visitors.push(visitor);\r\n      };\r\n      /**\r\n       * Adds a pre processor object\r\n       * @param {object} preProcessor\r\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n       */\r\n      PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n              if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n      };\r\n      /**\r\n       * Adds a post processor object\r\n       * @param {object} postProcessor\r\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n       */\r\n      PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n          var indexToInsertAt;\r\n          for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n              if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                  break;\r\n              }\r\n          }\r\n          this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n      };\r\n      /**\r\n       *\r\n       * @param manager\r\n       */\r\n      PluginManager.prototype.addFileManager = function (manager) {\r\n          this.fileManagers.push(manager);\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPreProcessors = function () {\r\n          var preProcessors = [];\r\n          for (var i = 0; i < this.preProcessors.length; i++) {\r\n              preProcessors.push(this.preProcessors[i].preProcessor);\r\n          }\r\n          return preProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getPostProcessors = function () {\r\n          var postProcessors = [];\r\n          for (var i = 0; i < this.postProcessors.length; i++) {\r\n              postProcessors.push(this.postProcessors[i].postProcessor);\r\n          }\r\n          return postProcessors;\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getVisitors = function () {\r\n          return this.visitors;\r\n      };\r\n      PluginManager.prototype.visitor = function () {\r\n          var self = this;\r\n          return {\r\n              first: function () {\r\n                  self.iterator = -1;\r\n                  return self.visitors[self.iterator];\r\n              },\r\n              get: function () {\r\n                  self.iterator += 1;\r\n                  return self.visitors[self.iterator];\r\n              }\r\n          };\r\n      };\r\n      /**\r\n       *\r\n       * @returns {Array}\r\n       * @private\r\n       */\r\n      PluginManager.prototype.getFileManagers = function () {\r\n          return this.fileManagers;\r\n      };\r\n      return PluginManager;\r\n  }());\r\n  var pm;\r\n  function PluginManagerFactory(less, newFactory) {\r\n      if (newFactory || !pm) {\r\n          pm = new PluginManager(less);\r\n      }\r\n      return pm;\r\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\r\n      var parse = function (input, options, callback) {\r\n          if (typeof options === 'function') {\r\n              callback = options;\r\n              options = copyOptions(this.options, {});\r\n          }\r\n          else {\r\n              options = copyOptions(this.options, options || {});\r\n          }\r\n          if (!callback) {\r\n              var self_1 = this;\r\n              return new Promise(function (resolve, reject) {\r\n                  parse.call(self_1, input, options, function (err, output) {\r\n                      if (err) {\r\n                          reject(err);\r\n                      }\r\n                      else {\r\n                          resolve(output);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n          else {\r\n              var context_1;\r\n              var rootFileInfo = void 0;\r\n              var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n              options.pluginManager = pluginManager_1;\r\n              context_1 = new contexts.Parse(options);\r\n              if (options.rootFileInfo) {\r\n                  rootFileInfo = options.rootFileInfo;\r\n              }\r\n              else {\r\n                  var filename = options.filename || 'input';\r\n                  var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                  rootFileInfo = {\r\n                      filename: filename,\r\n                      rewriteUrls: context_1.rewriteUrls,\r\n                      rootpath: context_1.rootpath || '',\r\n                      currentDirectory: entryPath,\r\n                      entryPath: entryPath,\r\n                      rootFilename: filename\r\n                  };\r\n                  // add in a missing trailing slash\r\n                  if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                      rootFileInfo.rootpath += '/';\r\n                  }\r\n              }\r\n              var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n              this.importManager = imports_1;\r\n              // TODO: allow the plugins to be just a list of paths or names\r\n              // Do an async plugin queue like lessc\r\n              if (options.plugins) {\r\n                  options.plugins.forEach(function (plugin) {\r\n                      var evalResult;\r\n                      var contents;\r\n                      if (plugin.fileContent) {\r\n                          contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                          evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                          if (evalResult instanceof LessError) {\r\n                              return callback(evalResult);\r\n                          }\r\n                      }\r\n                      else {\r\n                          pluginManager_1.addPlugin(plugin);\r\n                      }\r\n                  });\r\n              }\r\n              new Parser(context_1, imports_1, rootFileInfo)\r\n                  .parse(input, function (e, root) {\r\n                  if (e) {\r\n                      return callback(e);\r\n                  }\r\n                  callback(null, root, imports_1, options);\r\n              }, options);\r\n          }\r\n      };\r\n      return parse;\r\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\r\n      /**\r\n       * @todo\r\n       * This original code could be improved quite a bit.\r\n       * Many classes / modules currently add side-effects / mutations to passed in objects,\r\n       * which makes it hard to refactor and reason about.\r\n       */\r\n      environment$1 = new environment(environment$1, fileManagers);\r\n      var SourceMapOutput = sourceMapOutput(environment$1);\r\n      var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\r\n      var ParseTree = parseTree(SourceMapBuilder);\r\n      var ImportManager = importManager(environment$1);\r\n      var render = Render(environment$1, ParseTree);\r\n      var parse = Parse(environment$1, ParseTree, ImportManager);\r\n      var functions = Functions(environment$1);\r\n      /**\r\n       * @todo\r\n       * This root properties / methods need to be organized.\r\n       * It's not clear what should / must be public and why.\r\n       */\r\n      var initial = {\r\n          version: [3, 12, 2],\r\n          data: data,\r\n          tree: tree,\r\n          Environment: environment,\r\n          AbstractFileManager: AbstractFileManager,\r\n          AbstractPluginLoader: AbstractPluginLoader,\r\n          environment: environment$1,\r\n          visitors: visitors,\r\n          Parser: Parser,\r\n          functions: functions,\r\n          contexts: contexts,\r\n          SourceMapOutput: SourceMapOutput,\r\n          SourceMapBuilder: SourceMapBuilder,\r\n          ParseTree: ParseTree,\r\n          ImportManager: ImportManager,\r\n          render: render,\r\n          parse: parse,\r\n          LessError: LessError,\r\n          transformTree: transformTree,\r\n          utils: utils,\r\n          PluginManager: PluginManagerFactory,\r\n          logger: logger\r\n      };\r\n      // Create a public API\r\n      var ctor = function (t) { return function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          return new (t.bind.apply(t, __spreadArrays([void 0], args)))();\r\n      }; };\r\n      var t;\r\n      var api = Object.create(initial);\r\n      for (var n in initial.tree) {\r\n          /* eslint guard-for-in: 0 */\r\n          t = initial.tree[n];\r\n          if (typeof t === 'function') {\r\n              api[n.toLowerCase()] = ctor(t);\r\n          }\r\n          else {\r\n              api[n] = Object.create(null);\r\n              for (var o in t) {\r\n                  /* eslint guard-for-in: 0 */\r\n                  api[n][o.toLowerCase()] = ctor(t[o]);\r\n              }\r\n          }\r\n      }\r\n      /**\r\n       * Some of the functions assume a `this` context of the API object,\r\n       * which causes it to fail when wrapped for ES6 imports.\r\n       *\r\n       * An assumed `this` should be removed in the future.\r\n       */\r\n      initial.parse = initial.parse.bind(api);\r\n      initial.render = initial.render.bind(api);\r\n      return api;\r\n  });\n\n  /* global window, XMLHttpRequest */\r\n  var options;\r\n  var logger$1;\r\n  var fileCache = {};\r\n  // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n  var FileManager = /** @class */ (function (_super) {\r\n      __extends(FileManager, _super);\r\n      function FileManager() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      FileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.join = function (basePath, laterPath) {\r\n          if (!basePath) {\r\n              return laterPath;\r\n          }\r\n          return this.extractUrlParts(laterPath, basePath).path;\r\n      };\r\n      FileManager.prototype.doXHR = function (url, type, callback, errback) {\r\n          var xhr = new XMLHttpRequest();\r\n          var async = options.isFileProtocol ? options.fileAsync : true;\r\n          if (typeof xhr.overrideMimeType === 'function') {\r\n              xhr.overrideMimeType('text/css');\r\n          }\r\n          logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n          xhr.open('GET', url, async);\r\n          xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n          xhr.send(null);\r\n          function handleResponse(xhr, callback, errback) {\r\n              if (xhr.status >= 200 && xhr.status < 300) {\r\n                  callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n              }\r\n              else if (typeof errback === 'function') {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          if (options.isFileProtocol && !options.fileAsync) {\r\n              if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                  callback(xhr.responseText);\r\n              }\r\n              else {\r\n                  errback(xhr.status, url);\r\n              }\r\n          }\r\n          else if (async) {\r\n              xhr.onreadystatechange = function () {\r\n                  if (xhr.readyState == 4) {\r\n                      handleResponse(xhr, callback, errback);\r\n                  }\r\n              };\r\n          }\r\n          else {\r\n              handleResponse(xhr, callback, errback);\r\n          }\r\n      };\r\n      FileManager.prototype.supports = function () {\r\n          return true;\r\n      };\r\n      FileManager.prototype.clearFileCache = function () {\r\n          fileCache = {};\r\n      };\r\n      FileManager.prototype.loadFile = function (filename, currentDirectory, options, environment) {\r\n          // TODO: Add prefix support like less-node?\r\n          // What about multiple paths?\r\n          if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n              filename = currentDirectory + filename;\r\n          }\r\n          filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n          options = options || {};\r\n          // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n          // some context variables for imports\r\n          var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n          var href = hrefParts.url;\r\n          var self = this;\r\n          return new Promise(function (resolve, reject) {\r\n              if (options.useFileCache && fileCache[href]) {\r\n                  try {\r\n                      var lessText = fileCache[href];\r\n                      return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                  }\r\n                  catch (e) {\r\n                      return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                  }\r\n              }\r\n              self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                  // per file cache\r\n                  fileCache[href] = data;\r\n                  // Use remote copy (re-parse)\r\n                  resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n              }, function doXHRError(status, url) {\r\n                  reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n              });\r\n          });\r\n      };\r\n      return FileManager;\r\n  }(AbstractFileManager));\r\n  var FM = (function (opts, log) {\r\n      options = opts;\r\n      logger$1 = log;\r\n      return FileManager;\r\n  });\n\n  // TODO: Add tests for browser @plugin\r\n  /**\r\n   * Browser Plugin Loader\r\n   */\r\n  var PluginLoader = /** @class */ (function (_super) {\r\n      __extends(PluginLoader, _super);\r\n      function PluginLoader(less) {\r\n          var _this = _super.call(this) || this;\r\n          _this.less = less;\r\n          return _this;\r\n          // Should we shim this.require for browser? Probably not?\r\n      }\r\n      PluginLoader.prototype.loadPlugin = function (filename, basePath, context, environment, fileManager) {\r\n          return new Promise(function (fulfill, reject) {\r\n              fileManager.loadFile(filename, basePath, context, environment)\r\n                  .then(fulfill).catch(reject);\r\n          });\r\n      };\r\n      return PluginLoader;\r\n  }(AbstractPluginLoader));\n\n  var LogListener = (function (less, options) {\r\n      var logLevel_debug = 4;\r\n      var logLevel_info = 3;\r\n      var logLevel_warn = 2;\r\n      var logLevel_error = 1;\r\n      // The amount of logging in the javascript console.\r\n      // 3 - Debug, information and errors\r\n      // 2 - Information and errors\r\n      // 1 - Errors\r\n      // 0 - None\r\n      // Defaults to 2\r\n      options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n      if (!options.loggers) {\r\n          options.loggers = [{\r\n                  debug: function (msg) {\r\n                      if (options.logLevel >= logLevel_debug) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  info: function (msg) {\r\n                      if (options.logLevel >= logLevel_info) {\r\n                          console.log(msg);\r\n                      }\r\n                  },\r\n                  warn: function (msg) {\r\n                      if (options.logLevel >= logLevel_warn) {\r\n                          console.warn(msg);\r\n                      }\r\n                  },\r\n                  error: function (msg) {\r\n                      if (options.logLevel >= logLevel_error) {\r\n                          console.error(msg);\r\n                      }\r\n                  }\r\n              }];\r\n      }\r\n      for (var i = 0; i < options.loggers.length; i++) {\r\n          less.logger.addListener(options.loggers[i]);\r\n      }\r\n  });\n\n  var ErrorReporting = (function (window, less, options) {\r\n      function errorHTML(e, rootHref) {\r\n          var id = \"less-error-message:\" + extractId(rootHref || '');\r\n          var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n          var elem = window.document.createElement('div');\r\n          var timer;\r\n          var content;\r\n          var errors = [];\r\n          var filename = e.filename || rootHref;\r\n          var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n          elem.id = id;\r\n          elem.className = 'less-error-message';\r\n          content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n              (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n          }\r\n          elem.innerHTML = content;\r\n          // CSS for error messages\r\n          browser.createCSS(window.document, [\r\n              '.less-error-message ul, .less-error-message li {',\r\n              'list-style-type: none;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message label {',\r\n              'font-size: 12px;',\r\n              'margin-right: 15px;',\r\n              'padding: 4px 0;',\r\n              'color: #cc7777;',\r\n              '}',\r\n              '.less-error-message pre {',\r\n              'color: #dd6666;',\r\n              'padding: 4px 0;',\r\n              'margin: 0;',\r\n              'display: inline-block;',\r\n              '}',\r\n              '.less-error-message pre.line {',\r\n              'color: #ff0000;',\r\n              '}',\r\n              '.less-error-message h3 {',\r\n              'font-size: 20px;',\r\n              'font-weight: bold;',\r\n              'padding: 15px 0 5px 0;',\r\n              'margin: 0;',\r\n              '}',\r\n              '.less-error-message a {',\r\n              'color: #10a',\r\n              '}',\r\n              '.less-error-message .error {',\r\n              'color: red;',\r\n              'font-weight: bold;',\r\n              'padding-bottom: 2px;',\r\n              'border-bottom: 1px dashed red;',\r\n              '}'\r\n          ].join('\\n'), { title: 'error-message' });\r\n          elem.style.cssText = [\r\n              'font-family: Arial, sans-serif',\r\n              'border: 1px solid #e00',\r\n              'background-color: #eee',\r\n              'border-radius: 5px',\r\n              '-webkit-border-radius: 5px',\r\n              '-moz-border-radius: 5px',\r\n              'color: #e00',\r\n              'padding: 15px',\r\n              'margin-bottom: 15px'\r\n          ].join(';');\r\n          if (options.env === 'development') {\r\n              timer = setInterval(function () {\r\n                  var document = window.document;\r\n                  var body = document.body;\r\n                  if (body) {\r\n                      if (document.getElementById(id)) {\r\n                          body.replaceChild(elem, document.getElementById(id));\r\n                      }\r\n                      else {\r\n                          body.insertBefore(elem, body.firstChild);\r\n                      }\r\n                      clearInterval(timer);\r\n                  }\r\n              }, 10);\r\n          }\r\n      }\r\n      function removeErrorHTML(path) {\r\n          var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n          if (node) {\r\n              node.parentNode.removeChild(node);\r\n          }\r\n      }\r\n      function removeError(path) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              removeErrorHTML(path);\r\n          }\r\n          else if (options.errorReporting === 'console') ;\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('remove', path);\r\n          }\r\n      }\r\n      function errorConsole(e, rootHref) {\r\n          var template = '{line} {content}';\r\n          var filename = e.filename || rootHref;\r\n          var errors = [];\r\n          var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n          var errorline = function (e, i, classname) {\r\n              if (e.extract[i] !== undefined) {\r\n                  errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                      .replace(/\\{class\\}/, classname)\r\n                      .replace(/\\{content\\}/, e.extract[i]));\r\n              }\r\n          };\r\n          if (e.line) {\r\n              errorline(e, 0, '');\r\n              errorline(e, 1, 'line');\r\n              errorline(e, 2, '');\r\n              content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n          }\r\n          if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n              content += \"\\nStack Trace\\n\" + e.stack;\r\n          }\r\n          less.logger.error(content);\r\n      }\r\n      function error(e, rootHref) {\r\n          if (!options.errorReporting || options.errorReporting === 'html') {\r\n              errorHTML(e, rootHref);\r\n          }\r\n          else if (options.errorReporting === 'console') {\r\n              errorConsole(e, rootHref);\r\n          }\r\n          else if (typeof options.errorReporting === 'function') {\r\n              options.errorReporting('add', e, rootHref);\r\n          }\r\n      }\r\n      return {\r\n          add: error,\r\n          remove: removeError\r\n      };\r\n  });\n\n  // Cache system is a bit outdated and could do with work\r\n  var Cache = (function (window, options, logger) {\r\n      var cache = null;\r\n      if (options.env !== 'development') {\r\n          try {\r\n              cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n          }\r\n          catch (_) { }\r\n      }\r\n      return {\r\n          setCSS: function (path, lastModified, modifyVars, styles) {\r\n              if (cache) {\r\n                  logger.info(\"saving \" + path + \" to cache.\");\r\n                  try {\r\n                      cache.setItem(path, styles);\r\n                      cache.setItem(path + \":timestamp\", lastModified);\r\n                      if (modifyVars) {\r\n                          cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                      }\r\n                  }\r\n                  catch (e) {\r\n                      // TODO - could do with adding more robust error handling\r\n                      logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                  }\r\n              }\r\n          },\r\n          getCSS: function (path, webInfo, modifyVars) {\r\n              var css = cache && cache.getItem(path);\r\n              var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n              var vars = cache && cache.getItem(path + \":vars\");\r\n              modifyVars = modifyVars || {};\r\n              vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n              if (timestamp && webInfo.lastModified &&\r\n                  (new Date(webInfo.lastModified).valueOf() ===\r\n                      new Date(timestamp).valueOf()) &&\r\n                  JSON.stringify(modifyVars) === vars) {\r\n                  // Use local copy\r\n                  return css;\r\n              }\r\n          }\r\n      };\r\n  });\n\n  var ImageSize = (function () {\r\n      function imageSize() {\r\n          throw {\r\n              type: 'Runtime',\r\n              message: 'Image size functions are not supported in browser version of less'\r\n          };\r\n      }\r\n      var imageFunctions = {\r\n          'image-size': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-width': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          },\r\n          'image-height': function (filePathNode) {\r\n              imageSize();\r\n              return -1;\r\n          }\r\n      };\r\n      functionRegistry.addMultiple(imageFunctions);\r\n  });\n\n  //\r\n  var root = (function (window, options) {\r\n      var document = window.document;\r\n      var less = lessRoot();\r\n      less.options = options;\r\n      var environment = less.environment;\r\n      var FileManager = FM(options, less.logger);\r\n      var fileManager = new FileManager();\r\n      environment.addFileManager(fileManager);\r\n      less.FileManager = FileManager;\r\n      less.PluginLoader = PluginLoader;\r\n      LogListener(less, options);\r\n      var errors = ErrorReporting(window, less, options);\r\n      var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n      ImageSize(less.environment);\r\n      // Setup user functions - Deprecate?\r\n      if (options.functions) {\r\n          less.functions.functionRegistry.addMultiple(options.functions);\r\n      }\r\n      var typePattern = /^text\\/(x-)?less$/;\r\n      function clone(obj) {\r\n          var cloned = {};\r\n          for (var prop in obj) {\r\n              if (obj.hasOwnProperty(prop)) {\r\n                  cloned[prop] = obj[prop];\r\n              }\r\n          }\r\n          return cloned;\r\n      }\r\n      // only really needed for phantom\r\n      function bind(func, thisArg) {\r\n          var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n          return function () {\r\n              var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n              return func.apply(thisArg, args);\r\n          };\r\n      }\r\n      function loadStyles(modifyVars) {\r\n          var styles = document.getElementsByTagName('style');\r\n          var style;\r\n          for (var i = 0; i < styles.length; i++) {\r\n              style = styles[i];\r\n              if (style.type.match(typePattern)) {\r\n                  var instanceOptions = clone(options);\r\n                  instanceOptions.modifyVars = modifyVars;\r\n                  var lessText = style.innerHTML || '';\r\n                  instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                  /* jshint loopfunc:true */\r\n                  // use closure to store current style\r\n                  less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                      if (e) {\r\n                          errors.add(e, 'inline');\r\n                      }\r\n                      else {\r\n                          style.type = 'text/css';\r\n                          if (style.styleSheet) {\r\n                              style.styleSheet.cssText = result.css;\r\n                          }\r\n                          else {\r\n                              style.innerHTML = result.css;\r\n                          }\r\n                      }\r\n                  }, null, style));\r\n              }\r\n          }\r\n      }\r\n      function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n          var instanceOptions = clone(options);\r\n          addDataAttr(instanceOptions, sheet);\r\n          instanceOptions.mime = sheet.type;\r\n          if (modifyVars) {\r\n              instanceOptions.modifyVars = modifyVars;\r\n          }\r\n          function loadInitialFileCallback(loadedFile) {\r\n              var data = loadedFile.contents;\r\n              var path = loadedFile.filename;\r\n              var webInfo = loadedFile.webInfo;\r\n              var newFileInfo = {\r\n                  currentDirectory: fileManager.getPath(path),\r\n                  filename: path,\r\n                  rootFilename: path,\r\n                  rewriteUrls: instanceOptions.rewriteUrls\r\n              };\r\n              newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n              newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n              if (webInfo) {\r\n                  webInfo.remaining = remaining;\r\n                  var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                  if (!reload && css) {\r\n                      webInfo.local = true;\r\n                      callback(null, css, data, sheet, webInfo, path);\r\n                      return;\r\n                  }\r\n              }\r\n              // TODO add tests around how this behaves when reloading\r\n              errors.remove(path);\r\n              instanceOptions.rootFileInfo = newFileInfo;\r\n              less.render(data, instanceOptions, function (e, result) {\r\n                  if (e) {\r\n                      e.href = path;\r\n                      callback(e);\r\n                  }\r\n                  else {\r\n                      cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                      callback(null, result.css, data, sheet, webInfo, path);\r\n                  }\r\n              });\r\n          }\r\n          fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n              .then(function (loadedFile) {\r\n              loadInitialFileCallback(loadedFile);\r\n          }).catch(function (err) {\r\n              console.log(err);\r\n              callback(err);\r\n          });\r\n      }\r\n      function loadStyleSheets(callback, reload, modifyVars) {\r\n          for (var i = 0; i < less.sheets.length; i++) {\r\n              loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n          }\r\n      }\r\n      function initRunningMode() {\r\n          if (less.env === 'development') {\r\n              less.watchTimer = setInterval(function () {\r\n                  if (less.watchMode) {\r\n                      fileManager.clearFileCache();\r\n                      loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                          if (e) {\r\n                              errors.add(e, e.href || sheet.href);\r\n                          }\r\n                          else if (css) {\r\n                              browser.createCSS(window.document, css, sheet);\r\n                          }\r\n                      });\r\n                  }\r\n              }, options.poll);\r\n          }\r\n      }\r\n      //\r\n      // Watch mode\r\n      //\r\n      less.watch = function () {\r\n          if (!less.watchMode) {\r\n              less.env = 'development';\r\n              initRunningMode();\r\n          }\r\n          this.watchMode = true;\r\n          return true;\r\n      };\r\n      less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n      //\r\n      // Synchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\".\r\n      //\r\n      less.registerStylesheetsImmediately = function () {\r\n          var links = document.getElementsByTagName('link');\r\n          less.sheets = [];\r\n          for (var i = 0; i < links.length; i++) {\r\n              if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                  (links[i].type.match(typePattern)))) {\r\n                  less.sheets.push(links[i]);\r\n              }\r\n          }\r\n      };\r\n      //\r\n      // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n      // \"stylesheet/less\", returning a Promise.\r\n      //\r\n      less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n          less.registerStylesheetsImmediately();\r\n          resolve();\r\n      }); };\r\n      //\r\n      // With this function, it's possible to alter variables and re-render\r\n      // CSS without reloading less-files\r\n      //\r\n      less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n      less.refresh = function (reload, modifyVars, clearFileCache) {\r\n          if ((reload || clearFileCache) && clearFileCache !== false) {\r\n              fileManager.clearFileCache();\r\n          }\r\n          return new Promise(function (resolve, reject) {\r\n              var startTime;\r\n              var endTime;\r\n              var totalMilliseconds;\r\n              var remainingSheets;\r\n              startTime = endTime = new Date();\r\n              // Set counter for remaining unprocessed sheets\r\n              remainingSheets = less.sheets.length;\r\n              if (remainingSheets === 0) {\r\n                  endTime = new Date();\r\n                  totalMilliseconds = endTime - startTime;\r\n                  less.logger.info('Less has finished and no sheets were loaded.');\r\n                  resolve({\r\n                      startTime: startTime,\r\n                      endTime: endTime,\r\n                      totalMilliseconds: totalMilliseconds,\r\n                      sheets: less.sheets.length\r\n                  });\r\n              }\r\n              else {\r\n                  // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                  loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                      if (e) {\r\n                          errors.add(e, e.href || sheet.href);\r\n                          reject(e);\r\n                          return;\r\n                      }\r\n                      if (webInfo.local) {\r\n                          less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                      }\r\n                      else {\r\n                          less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                      }\r\n                      browser.createCSS(window.document, css, sheet);\r\n                      less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                      // Count completed sheet\r\n                      remainingSheets--;\r\n                      // Check if the last remaining sheet was processed and then call the promise\r\n                      if (remainingSheets === 0) {\r\n                          totalMilliseconds = new Date() - startTime;\r\n                          less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                          resolve({\r\n                              startTime: startTime,\r\n                              endTime: endTime,\r\n                              totalMilliseconds: totalMilliseconds,\r\n                              sheets: less.sheets.length\r\n                          });\r\n                      }\r\n                      endTime = new Date();\r\n                  }, reload, modifyVars);\r\n              }\r\n              loadStyles(modifyVars);\r\n          });\r\n      };\r\n      less.refreshStyles = loadStyles;\r\n      return less;\r\n  });\n\n  /**\r\n   * Kicks off less and compiles any stylesheets\r\n   * used in the browser distributed version of less\r\n   * to kick-start less using the browser api\r\n   */\r\n  var options$1 = defaultOptions();\r\n  if (window.less) {\r\n      for (var key in window.less) {\r\n          if (window.less.hasOwnProperty(key)) {\r\n              options$1[key] = window.less[key];\r\n          }\r\n      }\r\n  }\r\n  addDefaultOptions(window, options$1);\r\n  options$1.plugins = options$1.plugins || [];\r\n  if (window.LESS_PLUGINS) {\r\n      options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n  }\r\n  var less = root(window, options$1);\r\n  window.less = less;\r\n  var css;\r\n  var head;\r\n  var style;\r\n  // Always restore page visibility\r\n  function resolveOrReject(data) {\r\n      if (data.filename) {\r\n          console.warn(data);\r\n      }\r\n      if (!options$1.async) {\r\n          head.removeChild(style);\r\n      }\r\n  }\r\n  if (options$1.onReady) {\r\n      if (/!watch/.test(window.location.hash)) {\r\n          less.watch();\r\n      }\r\n      // Simulate synchronous stylesheet loading by hiding page rendering\r\n      if (!options$1.async) {\r\n          css = 'body { display: none !important }';\r\n          head = document.head || document.getElementsByTagName('head')[0];\r\n          style = document.createElement('style');\r\n          style.type = 'text/css';\r\n          if (style.styleSheet) {\r\n              style.styleSheet.cssText = css;\r\n          }\r\n          else {\r\n              style.appendChild(document.createTextNode(css));\r\n          }\r\n          head.appendChild(style);\r\n      }\r\n      less.registerStylesheetsImmediately();\r\n      less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n  }\n\n  return less;\n\n})));\n"],"sourceRoot":""}